{"id":"74ab1817e2721d94bacd52417f914ad3","_format":"hh-sol-build-info-1","solcVersion":"0.8.18","solcLongVersion":"0.8.18+commit.87f61d96","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/interfaces/draft-IERC1822.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (interfaces/draft-IERC1822.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n * proxy whose upgrades are fully controlled by the current implementation.\n */\ninterface IERC1822Proxiable {\n    /**\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n     * address.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy.\n     */\n    function proxiableUUID() external view returns (bytes32);\n}\n"},"@openzeppelin/contracts/interfaces/IERC1967.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (interfaces/IERC1967.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\n *\n * _Available since v4.8.3._\n */\ninterface IERC1967 {\n    /**\n     * @dev Emitted when the implementation is upgraded.\n     */\n    event Upgraded(address indexed implementation);\n\n    /**\n     * @dev Emitted when the admin account has changed.\n     */\n    event AdminChanged(address previousAdmin, address newAdmin);\n\n    /**\n     * @dev Emitted when the beacon is changed.\n     */\n    event BeaconUpgraded(address indexed beacon);\n}\n"},"@openzeppelin/contracts/proxy/beacon/IBeacon.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (proxy/beacon/IBeacon.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\n */\ninterface IBeacon {\n    /**\n     * @dev Must return an address that can be used as a delegate call target.\n     *\n     * {BeaconProxy} will check that this address is a contract.\n     */\n    function implementation() external view returns (address);\n}\n"},"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (proxy/ERC1967/ERC1967Proxy.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../Proxy.sol\";\nimport \"./ERC1967Upgrade.sol\";\n\n/**\n * @dev This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an\n * implementation address that can be changed. This address is stored in storage in the location specified by\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967], so that it doesn't conflict with the storage layout of the\n * implementation behind the proxy.\n */\ncontract ERC1967Proxy is Proxy, ERC1967Upgrade {\n    /**\n     * @dev Initializes the upgradeable proxy with an initial implementation specified by `_logic`.\n     *\n     * If `_data` is nonempty, it's used as data in a delegate call to `_logic`. This will typically be an encoded\n     * function call, and allows initializing the storage of the proxy like a Solidity constructor.\n     */\n    constructor(address _logic, bytes memory _data) payable {\n        _upgradeToAndCall(_logic, _data, false);\n    }\n\n    /**\n     * @dev Returns the current implementation address.\n     */\n    function _implementation() internal view virtual override returns (address impl) {\n        return ERC1967Upgrade._getImplementation();\n    }\n}\n"},"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/ERC1967/ERC1967Upgrade.sol)\n\npragma solidity ^0.8.2;\n\nimport \"../beacon/IBeacon.sol\";\nimport \"../../interfaces/IERC1967.sol\";\nimport \"../../interfaces/draft-IERC1822.sol\";\nimport \"../../utils/Address.sol\";\nimport \"../../utils/StorageSlot.sol\";\n\n/**\n * @dev This abstract contract provides getters and event emitting update functions for\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\n *\n * _Available since v4.1._\n */\nabstract contract ERC1967Upgrade is IERC1967 {\n    // This is the keccak-256 hash of \"eip1967.proxy.rollback\" subtracted by 1\n    bytes32 private constant _ROLLBACK_SLOT = 0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143;\n\n    /**\n     * @dev Storage slot with the address of the current implementation.\n     * This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1, and is\n     * validated in the constructor.\n     */\n    bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n\n    /**\n     * @dev Returns the current implementation address.\n     */\n    function _getImplementation() internal view returns (address) {\n        return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 implementation slot.\n     */\n    function _setImplementation(address newImplementation) private {\n        require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n        StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n    }\n\n    /**\n     * @dev Perform implementation upgrade\n     *\n     * Emits an {Upgraded} event.\n     */\n    function _upgradeTo(address newImplementation) internal {\n        _setImplementation(newImplementation);\n        emit Upgraded(newImplementation);\n    }\n\n    /**\n     * @dev Perform implementation upgrade with additional setup call.\n     *\n     * Emits an {Upgraded} event.\n     */\n    function _upgradeToAndCall(address newImplementation, bytes memory data, bool forceCall) internal {\n        _upgradeTo(newImplementation);\n        if (data.length > 0 || forceCall) {\n            Address.functionDelegateCall(newImplementation, data);\n        }\n    }\n\n    /**\n     * @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\n     *\n     * Emits an {Upgraded} event.\n     */\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data, bool forceCall) internal {\n        // Upgrades from old implementations will perform a rollback test. This test requires the new\n        // implementation to upgrade back to the old, non-ERC1822 compliant, implementation. Removing\n        // this special case will break upgrade paths from old UUPS implementation to new ones.\n        if (StorageSlot.getBooleanSlot(_ROLLBACK_SLOT).value) {\n            _setImplementation(newImplementation);\n        } else {\n            try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\n                require(slot == _IMPLEMENTATION_SLOT, \"ERC1967Upgrade: unsupported proxiableUUID\");\n            } catch {\n                revert(\"ERC1967Upgrade: new implementation is not UUPS\");\n            }\n            _upgradeToAndCall(newImplementation, data, forceCall);\n        }\n    }\n\n    /**\n     * @dev Storage slot with the admin of the contract.\n     * This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1, and is\n     * validated in the constructor.\n     */\n    bytes32 internal constant _ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\n\n    /**\n     * @dev Returns the current admin.\n     */\n    function _getAdmin() internal view returns (address) {\n        return StorageSlot.getAddressSlot(_ADMIN_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 admin slot.\n     */\n    function _setAdmin(address newAdmin) private {\n        require(newAdmin != address(0), \"ERC1967: new admin is the zero address\");\n        StorageSlot.getAddressSlot(_ADMIN_SLOT).value = newAdmin;\n    }\n\n    /**\n     * @dev Changes the admin of the proxy.\n     *\n     * Emits an {AdminChanged} event.\n     */\n    function _changeAdmin(address newAdmin) internal {\n        emit AdminChanged(_getAdmin(), newAdmin);\n        _setAdmin(newAdmin);\n    }\n\n    /**\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n     * This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\n     */\n    bytes32 internal constant _BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\n\n    /**\n     * @dev Returns the current beacon.\n     */\n    function _getBeacon() internal view returns (address) {\n        return StorageSlot.getAddressSlot(_BEACON_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\n     */\n    function _setBeacon(address newBeacon) private {\n        require(Address.isContract(newBeacon), \"ERC1967: new beacon is not a contract\");\n        require(\n            Address.isContract(IBeacon(newBeacon).implementation()),\n            \"ERC1967: beacon implementation is not a contract\"\n        );\n        StorageSlot.getAddressSlot(_BEACON_SLOT).value = newBeacon;\n    }\n\n    /**\n     * @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\n     * not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\n     *\n     * Emits a {BeaconUpgraded} event.\n     */\n    function _upgradeBeaconToAndCall(address newBeacon, bytes memory data, bool forceCall) internal {\n        _setBeacon(newBeacon);\n        emit BeaconUpgraded(newBeacon);\n        if (data.length > 0 || forceCall) {\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\n        }\n    }\n}\n"},"@openzeppelin/contracts/proxy/Proxy.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (proxy/Proxy.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\n * instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\n * be specified by overriding the virtual {_implementation} function.\n *\n * Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\n * different contract through the {_delegate} function.\n *\n * The success and return data of the delegated call will be returned back to the caller of the proxy.\n */\nabstract contract Proxy {\n    /**\n     * @dev Delegates the current call to `implementation`.\n     *\n     * This function does not return to its internal call site, it will return directly to the external caller.\n     */\n    function _delegate(address implementation) internal virtual {\n        assembly {\n            // Copy msg.data. We take full control of memory in this inline assembly\n            // block because it will not return to Solidity code. We overwrite the\n            // Solidity scratch pad at memory position 0.\n            calldatacopy(0, 0, calldatasize())\n\n            // Call the implementation.\n            // out and outsize are 0 because we don't know the size yet.\n            let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)\n\n            // Copy the returned data.\n            returndatacopy(0, 0, returndatasize())\n\n            switch result\n            // delegatecall returns 0 on error.\n            case 0 {\n                revert(0, returndatasize())\n            }\n            default {\n                return(0, returndatasize())\n            }\n        }\n    }\n\n    /**\n     * @dev This is a virtual function that should be overridden so it returns the address to which the fallback function\n     * and {_fallback} should delegate.\n     */\n    function _implementation() internal view virtual returns (address);\n\n    /**\n     * @dev Delegates the current call to the address returned by `_implementation()`.\n     *\n     * This function does not return to its internal call site, it will return directly to the external caller.\n     */\n    function _fallback() internal virtual {\n        _beforeFallback();\n        _delegate(_implementation());\n    }\n\n    /**\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\n     * function in the contract matches the call data.\n     */\n    fallback() external payable virtual {\n        _fallback();\n    }\n\n    /**\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if call data\n     * is empty.\n     */\n    receive() external payable virtual {\n        _fallback();\n    }\n\n    /**\n     * @dev Hook that is called before falling back to the implementation. Can happen as part of a manual `_fallback`\n     * call, or as part of the Solidity `fallback` or `receive` functions.\n     *\n     * If overridden should call `super._beforeFallback()`.\n     */\n    function _beforeFallback() internal virtual {}\n}\n"},"@openzeppelin/contracts/proxy/utils/Initializable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.2;\n\nimport \"../../utils/Address.sol\";\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Indicates that the contract has been initialized.\n     * @custom:oz-retyped-from bool\n     */\n    uint8 private _initialized;\n\n    /**\n     * @dev Indicates that the contract is in the process of being initialized.\n     */\n    bool private _initializing;\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint8 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\n     * constructor.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        bool isTopLevelCall = !_initializing;\n        require(\n            (isTopLevelCall && _initialized < 1) || (!Address.isContract(address(this)) && _initialized == 1),\n            \"Initializable: contract is already initialized\"\n        );\n        _initialized = 1;\n        if (isTopLevelCall) {\n            _initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            _initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint8 version) {\n        require(!_initializing && _initialized < version, \"Initializable: contract is already initialized\");\n        _initialized = version;\n        _initializing = true;\n        _;\n        _initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        require(_initializing, \"Initializable: contract is not initializing\");\n        _;\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        require(!_initializing, \"Initializable: contract is initializing\");\n        if (_initialized != type(uint8).max) {\n            _initialized = type(uint8).max;\n            emit Initialized(type(uint8).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint8) {\n        return _initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _initializing;\n    }\n}\n"},"@openzeppelin/contracts/proxy/utils/UUPSUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/UUPSUpgradeable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../interfaces/draft-IERC1822.sol\";\nimport \"../ERC1967/ERC1967Upgrade.sol\";\n\n/**\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n *\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n * `UUPSUpgradeable` with a custom implementation of upgrades.\n *\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\n *\n * _Available since v4.1._\n */\nabstract contract UUPSUpgradeable is IERC1822Proxiable, ERC1967Upgrade {\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable state-variable-assignment\n    address private immutable __self = address(this);\n\n    /**\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n     * a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n     * function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n     * fail.\n     */\n    modifier onlyProxy() {\n        require(address(this) != __self, \"Function must be called through delegatecall\");\n        require(_getImplementation() == __self, \"Function must be called through active proxy\");\n        _;\n    }\n\n    /**\n     * @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n     * callable on the implementing contract but not through proxies.\n     */\n    modifier notDelegated() {\n        require(address(this) == __self, \"UUPSUpgradeable: must not be called through delegatecall\");\n        _;\n    }\n\n    /**\n     * @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\n     * implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\n     */\n    function proxiableUUID() external view virtual override notDelegated returns (bytes32) {\n        return _IMPLEMENTATION_SLOT;\n    }\n\n    /**\n     * @dev Upgrade the implementation of the proxy to `newImplementation`.\n     *\n     * Calls {_authorizeUpgrade}.\n     *\n     * Emits an {Upgraded} event.\n     *\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\n     */\n    function upgradeTo(address newImplementation) public virtual onlyProxy {\n        _authorizeUpgrade(newImplementation);\n        _upgradeToAndCallUUPS(newImplementation, new bytes(0), false);\n    }\n\n    /**\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n     * encoded in `data`.\n     *\n     * Calls {_authorizeUpgrade}.\n     *\n     * Emits an {Upgraded} event.\n     *\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {\n        _authorizeUpgrade(newImplementation);\n        _upgradeToAndCallUUPS(newImplementation, data, true);\n    }\n\n    /**\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n     * {upgradeTo} and {upgradeToAndCall}.\n     *\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n     *\n     * ```solidity\n     * function _authorizeUpgrade(address) internal override onlyOwner {}\n     * ```\n     */\n    function _authorizeUpgrade(address newImplementation) internal virtual;\n}\n"},"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC1155/IERC1155Receiver.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev _Available since v3.1._\n */\ninterface IERC1155Receiver is IERC165 {\n    /**\n     * @dev Handles the receipt of a single ERC1155 token type. This function is\n     * called at the end of a `safeTransferFrom` after the balance has been updated.\n     *\n     * NOTE: To accept the transfer, this must return\n     * `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n     * (i.e. 0xf23a6e61, or its own function selector).\n     *\n     * @param operator The address which initiated the transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param id The ID of the token being transferred\n     * @param value The amount of tokens being transferred\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed\n     */\n    function onERC1155Received(\n        address operator,\n        address from,\n        uint256 id,\n        uint256 value,\n        bytes calldata data\n    ) external returns (bytes4);\n\n    /**\n     * @dev Handles the receipt of a multiple ERC1155 token types. This function\n     * is called at the end of a `safeBatchTransferFrom` after the balances have\n     * been updated.\n     *\n     * NOTE: To accept the transfer(s), this must return\n     * `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n     * (i.e. 0xbc197c81, or its own function selector).\n     *\n     * @param operator The address which initiated the batch transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param ids An array containing ids of each token being transferred (order and length must match values array)\n     * @param values An array containing amounts of each token being transferred (order and length must match ids array)\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed\n     */\n    function onERC1155BatchReceived(\n        address operator,\n        address from,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"},"@openzeppelin/contracts/token/ERC777/IERC777Recipient.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC777/IERC777Recipient.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC777TokensRecipient standard as defined in the EIP.\n *\n * Accounts can be notified of {IERC777} tokens being sent to them by having a\n * contract implement this interface (contract holders can be their own\n * implementer) and registering it on the\n * https://eips.ethereum.org/EIPS/eip-1820[ERC1820 global registry].\n *\n * See {IERC1820Registry} and {ERC1820Implementer}.\n */\ninterface IERC777Recipient {\n    /**\n     * @dev Called by an {IERC777} token contract whenever tokens are being\n     * moved or created into a registered account (`to`). The type of operation\n     * is conveyed by `from` being the zero address or not.\n     *\n     * This call occurs _after_ the token contract's state is updated, so\n     * {IERC777-balanceOf}, etc., can be used to query the post-operation state.\n     *\n     * This function may revert to prevent the operation from being executed.\n     */\n    function tokensReceived(\n        address operator,\n        address from,\n        address to,\n        uint256 amount,\n        bytes calldata userData,\n        bytes calldata operatorData\n    ) external;\n}\n"},"@openzeppelin/contracts/utils/Address.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     *\n     * Furthermore, `isContract` will also return true if the target contract within\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n     * which only has an effect at the end of a transaction.\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Counters.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Counters.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title Counters\n * @author Matt Condon (@shrugs)\n * @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n * of elements in a mapping, issuing ERC721 ids, or counting request ids.\n *\n * Include with `using Counters for Counters.Counter;`\n */\nlibrary Counters {\n    struct Counter {\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\n        uint256 _value; // default: 0\n    }\n\n    function current(Counter storage counter) internal view returns (uint256) {\n        return counter._value;\n    }\n\n    function increment(Counter storage counter) internal {\n        unchecked {\n            counter._value += 1;\n        }\n    }\n\n    function decrement(Counter storage counter) internal {\n        uint256 value = counter._value;\n        require(value > 0, \"Counter: decrement overflow\");\n        unchecked {\n            counter._value = value - 1;\n        }\n    }\n\n    function reset(Counter storage counter) internal {\n        counter._value = 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/Create2.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Create2.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Helper to make usage of the `CREATE2` EVM opcode easier and safer.\n * `CREATE2` can be used to compute in advance the address where a smart\n * contract will be deployed, which allows for interesting new mechanisms known\n * as 'counterfactual interactions'.\n *\n * See the https://eips.ethereum.org/EIPS/eip-1014#motivation[EIP] for more\n * information.\n */\nlibrary Create2 {\n    /**\n     * @dev Deploys a contract using `CREATE2`. The address where the contract\n     * will be deployed can be known in advance via {computeAddress}.\n     *\n     * The bytecode for a contract can be obtained from Solidity with\n     * `type(contractName).creationCode`.\n     *\n     * Requirements:\n     *\n     * - `bytecode` must not be empty.\n     * - `salt` must have not been used for `bytecode` already.\n     * - the factory must have a balance of at least `amount`.\n     * - if `amount` is non-zero, `bytecode` must have a `payable` constructor.\n     */\n    function deploy(uint256 amount, bytes32 salt, bytes memory bytecode) internal returns (address addr) {\n        require(address(this).balance >= amount, \"Create2: insufficient balance\");\n        require(bytecode.length != 0, \"Create2: bytecode length is zero\");\n        /// @solidity memory-safe-assembly\n        assembly {\n            addr := create2(amount, add(bytecode, 0x20), mload(bytecode), salt)\n        }\n        require(addr != address(0), \"Create2: Failed on deploy\");\n    }\n\n    /**\n     * @dev Returns the address where a contract will be stored if deployed via {deploy}. Any change in the\n     * `bytecodeHash` or `salt` will result in a new destination address.\n     */\n    function computeAddress(bytes32 salt, bytes32 bytecodeHash) internal view returns (address) {\n        return computeAddress(salt, bytecodeHash, address(this));\n    }\n\n    /**\n     * @dev Returns the address where a contract will be stored if deployed via {deploy} from a contract located at\n     * `deployer`. If `deployer` is this contract's address, returns the same value as {computeAddress}.\n     */\n    function computeAddress(bytes32 salt, bytes32 bytecodeHash, address deployer) internal pure returns (address addr) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            let ptr := mload(0x40) // Get free memory pointer\n\n            // |                   | ↓ ptr ...  ↓ ptr + 0x0B (start) ...  ↓ ptr + 0x20 ...  ↓ ptr + 0x40 ...   |\n            // |-------------------|---------------------------------------------------------------------------|\n            // | bytecodeHash      |                                                        CCCCCCCCCCCCC...CC |\n            // | salt              |                                      BBBBBBBBBBBBB...BB                   |\n            // | deployer          | 000000...0000AAAAAAAAAAAAAAAAAAA...AA                                     |\n            // | 0xFF              |            FF                                                             |\n            // |-------------------|---------------------------------------------------------------------------|\n            // | memory            | 000000...00FFAAAAAAAAAAAAAAAAAAA...AABBBBBBBBBBBBB...BBCCCCCCCCCCCCC...CC |\n            // | keccak(start, 85) |            ↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑ |\n\n            mstore(add(ptr, 0x40), bytecodeHash)\n            mstore(add(ptr, 0x20), salt)\n            mstore(ptr, deployer) // Right-aligned with 12 preceding garbage bytes\n            let start := add(ptr, 0x0b) // The hashed data starts at the final garbage byte which we will set to 0xff\n            mstore8(start, 0xff)\n            addr := keccak256(start, 85)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../Strings.sol\";\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS,\n        InvalidSignatureV // Deprecated in v4.8\n    }\n\n    function _throwError(RecoverError error) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert(\"ECDSA: invalid signature\");\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert(\"ECDSA: invalid signature length\");\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert(\"ECDSA: invalid signature 's' value\");\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature` or error string. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(bytes32 hash, bytes memory signature) internal pure returns (address, RecoverError) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            /// @solidity memory-safe-assembly\n            assembly {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength);\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, signature);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address, RecoverError) {\n        bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n        uint8 v = uint8((uint256(vs) >> 255) + 27);\n        return tryRecover(hash, v, r, s);\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     *\n     * _Available since v4.2._\n     */\n    function recover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, r, vs);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address, RecoverError) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature);\n        }\n\n        return (signer, RecoverError.NoError);\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, v, r, s);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Message, created from a `hash`. This\n     * produces hash corresponding to the one signed with the\n     * https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n     * JSON-RPC method as part of EIP-191.\n     *\n     * See {recover}.\n     */\n    function toEthSignedMessageHash(bytes32 hash) internal pure returns (bytes32 message) {\n        // 32 is the length in bytes of hash,\n        // enforced by the type signature above\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0x00, \"\\x19Ethereum Signed Message:\\n32\")\n            mstore(0x1c, hash)\n            message := keccak256(0x00, 0x3c)\n        }\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Message, created from `s`. This\n     * produces hash corresponding to the one signed with the\n     * https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n     * JSON-RPC method as part of EIP-191.\n     *\n     * See {recover}.\n     */\n    function toEthSignedMessageHash(bytes memory s) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(\"\\x19Ethereum Signed Message:\\n\", Strings.toString(s.length), s));\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Typed Data, created from a\n     * `domainSeparator` and a `structHash`. This produces hash corresponding\n     * to the one signed with the\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`]\n     * JSON-RPC method as part of EIP-712.\n     *\n     * See {recover}.\n     */\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32 data) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            let ptr := mload(0x40)\n            mstore(ptr, \"\\x19\\x01\")\n            mstore(add(ptr, 0x02), domainSeparator)\n            mstore(add(ptr, 0x22), structHash)\n            data := keccak256(ptr, 0x42)\n        }\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Data with intended validator, created from a\n     * `validator` and `data` according to the version 0 of EIP-191.\n     *\n     * See {recover}.\n     */\n    function toDataWithIntendedValidatorHash(address validator, bytes memory data) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(\"\\x19\\x00\", validator, data));\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1, \"Math: mulDiv overflow\");\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/StorageSlot.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._\n * _Available since v4.9 for `string`, `bytes`._\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./math/Math.sol\";\nimport \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toString(int256 value) internal pure returns (string memory) {\n        return string(abi.encodePacked(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value))));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"},"contracts/core/BaseAccount.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.18;\n\n/* solhint-disable avoid-low-level-calls */\n/* solhint-disable no-empty-blocks */\n\nimport \"../interfaces/IAccount.sol\";\nimport \"../interfaces/IEntryPoint.sol\";\nimport \"./Helpers.sol\";\n\n/**\n * Basic account implementation.\n * this contract provides the basic logic for implementing the IAccount interface  - validateUserOp\n * specific account implementation should inherit it and provide the account-specific logic\n */\nabstract contract BaseAccount is IAccount {\n    using UserOperationLib for UserOperation;\n\n    //return value in case of signature failure, with no time-range.\n    // equivalent to _packValidationData(true,0,0);\n    uint256 constant internal SIG_VALIDATION_FAILED = 1;\n\n    /**\n     * Return the account nonce.\n     * This method returns the next sequential nonce.\n     * For a nonce of a specific key, use `entrypoint.getNonce(account, key)`\n     */\n    function getNonce() public view virtual returns (uint256) {\n        return entryPoint().getNonce(address(this), 0);\n    }\n\n    /**\n     * return the entryPoint used by this account.\n     * subclass should return the current entryPoint used by this account.\n     */\n    function entryPoint() public view virtual returns (IEntryPoint);\n\n    /**\n     * Validate user's signature and nonce.\n     * subclass doesn't need to override this method. Instead, it should override the specific internal validation methods.\n     */\n    function validateUserOp(UserOperation calldata userOp, bytes32 userOpHash, uint256 missingAccountFunds)\n    external override virtual returns (uint256 validationData) {\n        _requireFromEntryPoint();\n        validationData = _validateSignature(userOp, userOpHash);\n        _validateNonce(userOp.nonce);\n        _payPrefund(missingAccountFunds);\n    }\n\n    /**\n     * ensure the request comes from the known entrypoint.\n     */\n    function _requireFromEntryPoint() internal virtual view {\n        require(msg.sender == address(entryPoint()), \"account: not from EntryPoint\");\n    }\n\n    /**\n     * validate the signature is valid for this message.\n     * @param userOp validate the userOp.signature field\n     * @param userOpHash convenient field: the hash of the request, to check the signature against\n     *          (also hashes the entrypoint and chain id)\n     * @return validationData signature and time-range of this operation\n     *      <20-byte> sigAuthorizer - 0 for valid signature, 1 to mark signature failure,\n     *         otherwise, an address of an \"authorizer\" contract.\n     *      <6-byte> validUntil - last timestamp this operation is valid. 0 for \"indefinite\"\n     *      <6-byte> validAfter - first timestamp this operation is valid\n     *      If the account doesn't use time-range, it is enough to return SIG_VALIDATION_FAILED value (1) for signature failure.\n     *      Note that the validation code cannot use block.timestamp (or block.number) directly.\n     */\n    function _validateSignature(UserOperation calldata userOp, bytes32 userOpHash) internal virtual returns (uint256 validationData);\n\n    /**\n     * Validate the nonce of the UserOperation.\n     * This method may validate the nonce requirement of this account.\n     * e.g.\n     * To limit the nonce to use sequenced UserOps only (no \"out of order\" UserOps):\n     *      `require(nonce < type(uint64).max)`\n     * For a hypothetical account that *requires* the nonce to be out-of-order:\n     *      `require(nonce & type(uint64).max == 0)`\n     *\n     * The actual nonce uniqueness is managed by the EntryPoint, and thus no other\n     * action is needed by the account itself.\n     *\n     * @param nonce to validate\n     *\n     * solhint-disable-next-line no-empty-blocks\n     */\n    function _validateNonce(uint256 nonce) internal view virtual {\n    }\n\n    /**\n     * sends to the entrypoint (msg.sender) the missing funds for this transaction.\n     * subclass MAY override this method for better funds management\n     * (e.g. send to the entryPoint more than the minimum required, so that in future transactions\n     * it will not be required to send again)\n     * @param missingAccountFunds the minimum value this method should send the entrypoint.\n     *  this value MAY be zero, in case there is enough deposit, or the userOp has a paymaster.\n     */\n    function _payPrefund(uint256 missingAccountFunds) internal virtual {\n        if (missingAccountFunds != 0) {\n            (bool success,) = payable(msg.sender).call{value : missingAccountFunds, gas : type(uint256).max}(\"\");\n            (success);\n            //ignore failure (its EntryPoint's job to verify, not account.)\n        }\n    }\n}"},"contracts/core/Helpers.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.18;\n\n/* solhint-disable no-inline-assembly */\n\n/**\n * returned data from validateUserOp.\n * validateUserOp returns a uint256, with is created by `_packedValidationData` and parsed by `_parseValidationData`\n * @param aggregator - address(0) - the account validated the signature by itself.\n *              address(1) - the account failed to validate the signature.\n *              otherwise - this is an address of a signature aggregator that must be used to validate the signature.\n * @param validAfter - this UserOp is valid only after this timestamp.\n * @param validaUntil - this UserOp is valid only up to this timestamp.\n */\n    struct ValidationData {\n        address aggregator;\n        uint48 validAfter;\n        uint48 validUntil;\n    }\n\n//extract sigFailed, validAfter, validUntil.\n// also convert zero validUntil to type(uint48).max\n    function _parseValidationData(uint validationData) pure returns (ValidationData memory data) {\n        address aggregator = address(uint160(validationData));\n        uint48 validUntil = uint48(validationData >> 160);\n        if (validUntil == 0) {\n            validUntil = type(uint48).max;\n        }\n        uint48 validAfter = uint48(validationData >> (48 + 160));\n        return ValidationData(aggregator, validAfter, validUntil);\n    }\n\n// intersect account and paymaster ranges.\n    function _intersectTimeRange(uint256 validationData, uint256 paymasterValidationData) pure returns (ValidationData memory) {\n        ValidationData memory accountValidationData = _parseValidationData(validationData);\n        ValidationData memory pmValidationData = _parseValidationData(paymasterValidationData);\n        address aggregator = accountValidationData.aggregator;\n        if (aggregator == address(0)) {\n            aggregator = pmValidationData.aggregator;\n        }\n        uint48 validAfter = accountValidationData.validAfter;\n        uint48 validUntil = accountValidationData.validUntil;\n        uint48 pmValidAfter = pmValidationData.validAfter;\n        uint48 pmValidUntil = pmValidationData.validUntil;\n\n        if (validAfter < pmValidAfter) validAfter = pmValidAfter;\n        if (validUntil > pmValidUntil) validUntil = pmValidUntil;\n        return ValidationData(aggregator, validAfter, validUntil);\n    }\n\n/**\n * helper to pack the return value for validateUserOp\n * @param data - the ValidationData to pack\n */\n    function _packValidationData(ValidationData memory data) pure returns (uint256) {\n        return uint160(data.aggregator) | (uint256(data.validUntil) << 160) | (uint256(data.validAfter) << (160 + 48));\n    }\n\n/**\n * helper to pack the return value for validateUserOp, when not using an aggregator\n * @param sigFailed - true for signature failure, false for success\n * @param validUntil last timestamp this UserOperation is valid (or zero for infinite)\n * @param validAfter first timestamp this UserOperation is valid\n */\n    function _packValidationData(bool sigFailed, uint48 validUntil, uint48 validAfter) pure returns (uint256) {\n        return (sigFailed ? 1 : 0) | (uint256(validUntil) << 160) | (uint256(validAfter) << (160 + 48));\n    }\n\n/**\n * keccak function over calldata.\n * @dev copy calldata into memory, do keccak and drop allocated memory. Strangely, this is more efficient than letting solidity do it.\n */\n    function calldataKeccak(bytes calldata data) pure returns (bytes32 ret) {\n        assembly {\n            let mem := mload(0x40)\n            let len := data.length\n            calldatacopy(mem, data.offset, len)\n            ret := keccak256(mem, len)\n        }\n    }\n"},"contracts/interfaces/IAccount.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.18;\n\nimport \"./UserOperation.sol\";\n\ninterface IAccount {\n\n    /**\n     * Validate user's signature and nonce\n     * the entryPoint will make the call to the recipient only if this validation call returns successfully.\n     * signature failure should be reported by returning SIG_VALIDATION_FAILED (1).\n     * This allows making a \"simulation call\" without a valid signature\n     * Other failures (e.g. nonce mismatch, or invalid signature format) should still revert to signal failure.\n     *\n     * @dev Must validate caller is the entryPoint.\n     *      Must validate the signature and nonce\n     * @param userOp the operation that is about to be executed.\n     * @param userOpHash hash of the user's request data. can be used as the basis for signature.\n     * @param missingAccountFunds missing funds on the account's deposit in the entrypoint.\n     *      This is the minimum amount to transfer to the sender(entryPoint) to be able to make the call.\n     *      The excess is left as a deposit in the entrypoint, for future calls.\n     *      can be withdrawn anytime using \"entryPoint.withdrawTo()\"\n     *      In case there is a paymaster in the request (or the current deposit is high enough), this value will be zero.\n     * @return validationData packaged ValidationData structure. use `_packValidationData` and `_unpackValidationData` to encode and decode\n     *      <20-byte> sigAuthorizer - 0 for valid signature, 1 to mark signature failure,\n     *         otherwise, an address of an \"authorizer\" contract.\n     *      <6-byte> validUntil - last timestamp this operation is valid. 0 for \"indefinite\"\n     *      <6-byte> validAfter - first timestamp this operation is valid\n     *      If an account doesn't use time-range, it is enough to return SIG_VALIDATION_FAILED value (1) for signature failure.\n     *      Note that the validation code cannot use block.timestamp (or block.number) directly.\n     */\n    function validateUserOp(UserOperation calldata userOp, bytes32 userOpHash, uint256 missingAccountFunds) external returns (uint256 validationData);\n}"},"contracts/interfaces/IAggregator.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.18;\n\nimport \"./UserOperation.sol\";\n\n/**\n * Aggregated Signatures validator.\n * 集約した署名を検証する。 \n */\ninterface IAggregator {\n\n    /**\n     * validate aggregated signature.\n     * revert if the aggregated signature does not match the given list of operations.\n     */\n    function validateSignatures(UserOperation[] calldata userOps, bytes calldata signature) external view;\n\n    /**\n     * validate signature of a single userOp\n     * This method is should be called by bundler after EntryPoint.simulateValidation() returns (reverts) with ValidationResultWithAggregation\n     * First it validates the signature over the userOp. Then it returns data to be used when creating the handleOps.\n     * @param userOp the userOperation received from the user.\n     * @return sigForUserOp the value to put into the signature field of the userOp when calling handleOps.\n     *    (usually empty, unless account and aggregator support some kind of \"multisig\"\n     */\n    function validateUserOpSignature(UserOperation calldata userOp) external view returns (bytes memory sigForUserOp);\n\n    /**\n     * aggregate multiple signatures into a single value.\n     * This method is called off-chain to calculate the signature to pass with handleOps()\n     * bundler MAY use optimized custom code perform this aggregation\n     * @param userOps array of UserOperations to collect the signatures from.\n     * @return aggregatedSignature the aggregated signature\n     */\n    function aggregateSignatures(UserOperation[] calldata userOps) external view returns (bytes memory aggregatedSignature);\n}"},"contracts/interfaces/IEntryPoint.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.18;\n\n/* solhint-disable avoid-low-level-calls */\n/* solhint-disable no-inline-assembly */\n/* solhint-disable reason-string */\n\nimport \"./UserOperation.sol\";\nimport \"./IStakeManager.sol\";\nimport \"./IAggregator.sol\";\nimport \"./INonceManager.sol\";\n\ninterface IEntryPoint is IStakeManager, INonceManager {\n\n    /***\n     * An event emitted after each successful request\n     * @param userOpHash - unique identifier for the request (hash its entire content, except signature).\n     * @param sender - the account that generates this request.\n     * @param paymaster - if non-null, the paymaster that pays for this request.\n     * @param nonce - the nonce value from the request.\n     * @param success - true if the sender transaction succeeded, false if reverted.\n     * @param actualGasCost - actual amount paid (by account or paymaster) for this UserOperation.\n     * @param actualGasUsed - total gas used by this UserOperation (including preVerification, creation, validation and execution).\n     */\n    event UserOperationEvent(bytes32 indexed userOpHash, address indexed sender, address indexed paymaster, uint256 nonce, bool success, uint256 actualGasCost, uint256 actualGasUsed);\n\n    /**\n     * account \"sender\" was deployed.\n     * @param userOpHash the userOp that deployed this account. UserOperationEvent will follow.\n     * @param sender the account that is deployed\n     * @param factory the factory used to deploy this account (in the initCode)\n     * @param paymaster the paymaster used by this UserOp\n     */\n    event AccountDeployed(bytes32 indexed userOpHash, address indexed sender, address factory, address paymaster);\n\n    /**\n     * An event emitted if the UserOperation \"callData\" reverted with non-zero length\n     * @param userOpHash the request unique identifier.\n     * @param sender the sender of this request\n     * @param nonce the nonce used in the request\n     * @param revertReason - the return bytes from the (reverted) call to \"callData\".\n     */\n    event UserOperationRevertReason(bytes32 indexed userOpHash, address indexed sender, uint256 nonce, bytes revertReason);\n\n    /**\n     * an event emitted by handleOps(), before starting the execution loop.\n     * any event emitted before this event, is part of the validation.\n     */\n    event BeforeExecution();\n\n    /**\n     * signature aggregator used by the following UserOperationEvents within this bundle.\n     */\n    event SignatureAggregatorChanged(address indexed aggregator);\n\n    /**\n     * a custom revert error of handleOps, to identify the offending op.\n     *  NOTE: if simulateValidation passes successfully, there should be no reason for handleOps to fail on it.\n     *  @param opIndex - index into the array of ops to the failed one (in simulateValidation, this is always zero)\n     *  @param reason - revert reason\n     *      The string starts with a unique code \"AAmn\", where \"m\" is \"1\" for factory, \"2\" for account and \"3\" for paymaster issues,\n     *      so a failure can be attributed to the correct entity.\n     *   Should be caught in off-chain handleOps simulation and not happen on-chain.\n     *   Useful for mitigating DoS attempts against batchers or for troubleshooting of factory/account/paymaster reverts.\n     */\n    error FailedOp(uint256 opIndex, string reason);\n\n    /**\n     * error case when a signature aggregator fails to verify the aggregated signature it had created.\n     */\n    error SignatureValidationFailed(address aggregator);\n\n    /**\n     * Successful result from simulateValidation.\n     * @param returnInfo gas and time-range returned values\n     * @param senderInfo stake information about the sender\n     * @param factoryInfo stake information about the factory (if any)\n     * @param paymasterInfo stake information about the paymaster (if any)\n     */\n    error ValidationResult(ReturnInfo returnInfo,\n        StakeInfo senderInfo, StakeInfo factoryInfo, StakeInfo paymasterInfo);\n\n    /**\n     * Successful result from simulateValidation, if the account returns a signature aggregator\n     * @param returnInfo gas and time-range returned values\n     * @param senderInfo stake information about the sender\n     * @param factoryInfo stake information about the factory (if any)\n     * @param paymasterInfo stake information about the paymaster (if any)\n     * @param aggregatorInfo signature aggregation info (if the account requires signature aggregator)\n     *      bundler MUST use it to verify the signature, or reject the UserOperation\n     */\n    error ValidationResultWithAggregation(ReturnInfo returnInfo,\n        StakeInfo senderInfo, StakeInfo factoryInfo, StakeInfo paymasterInfo,\n        AggregatorStakeInfo aggregatorInfo);\n\n    /**\n     * return value of getSenderAddress\n     */\n    error SenderAddressResult(address sender);\n\n    /**\n     * return value of simulateHandleOp\n     */\n    error ExecutionResult(uint256 preOpGas, uint256 paid, uint48 validAfter, uint48 validUntil, bool targetSuccess, bytes targetResult);\n\n    //UserOps handled, per aggregator\n    struct UserOpsPerAggregator {\n        UserOperation[] userOps;\n\n        // aggregator address\n        IAggregator aggregator;\n        // aggregated signature\n        bytes signature;\n    }\n\n    /**\n     * Execute a batch of UserOperation.\n     * no signature aggregator is used.\n     * if any account requires an aggregator (that is, it returned an aggregator when\n     * performing simulateValidation), then handleAggregatedOps() must be used instead.\n     * @param ops the operations to execute\n     * @param beneficiary the address to receive the fees\n     */\n    function handleOps(UserOperation[] calldata ops, address payable beneficiary) external;\n\n    /**\n     * Execute a batch of UserOperation with Aggregators\n     * @param opsPerAggregator the operations to execute, grouped by aggregator (or address(0) for no-aggregator accounts)\n     * @param beneficiary the address to receive the fees\n     */\n    function handleAggregatedOps(\n        UserOpsPerAggregator[] calldata opsPerAggregator,\n        address payable beneficiary\n    ) external;\n\n    /**\n     * generate a request Id - unique identifier for this request.\n     * the request ID is a hash over the content of the userOp (except the signature), the entrypoint and the chainid.\n     */\n    function getUserOpHash(UserOperation calldata userOp) external view returns (bytes32);\n\n    /**\n     * Simulate a call to account.validateUserOp and paymaster.validatePaymasterUserOp.\n     * @dev this method always revert. Successful result is ValidationResult error. other errors are failures.\n     * @dev The node must also verify it doesn't use banned opcodes, and that it doesn't reference storage outside the account's data.\n     * @param userOp the user operation to validate.\n     */\n    function simulateValidation(UserOperation calldata userOp) external;\n\n    /**\n     * gas and return values during simulation\n     * @param preOpGas the gas used for validation (including preValidationGas)\n     * @param prefund the required prefund for this operation\n     * @param sigFailed validateUserOp's (or paymaster's) signature check failed\n     * @param validAfter - first timestamp this UserOp is valid (merging account and paymaster time-range)\n     * @param validUntil - last timestamp this UserOp is valid (merging account and paymaster time-range)\n     * @param paymasterContext returned by validatePaymasterUserOp (to be passed into postOp)\n     */\n    struct ReturnInfo {\n        uint256 preOpGas;\n        uint256 prefund;\n        bool sigFailed;\n        uint48 validAfter;\n        uint48 validUntil;\n        bytes paymasterContext;\n    }\n\n    /**\n     * returned aggregated signature info.\n     * the aggregator returned by the account, and its current stake.\n     */\n    struct AggregatorStakeInfo {\n        address aggregator;\n        StakeInfo stakeInfo;\n    }\n\n    /**\n     * Get counterfactual sender address.\n     *  Calculate the sender contract address that will be generated by the initCode and salt in the UserOperation.\n     * this method always revert, and returns the address in SenderAddressResult error\n     * @param initCode the constructor code to be passed into the UserOperation.\n     */\n    function getSenderAddress(bytes memory initCode) external;\n\n\n    /**\n     * simulate full execution of a UserOperation (including both validation and target execution)\n     * this method will always revert with \"ExecutionResult\".\n     * it performs full validation of the UserOperation, but ignores signature error.\n     * an optional target address is called after the userop succeeds, and its value is returned\n     * (before the entire call is reverted)\n     * Note that in order to collect the the success/failure of the target call, it must be executed\n     * with trace enabled to track the emitted events.\n     * @param op the UserOperation to simulate\n     * @param target if nonzero, a target address to call after userop simulation. If called, the targetSuccess and targetResult\n     *        are set to the return from that call.\n     * @param targetCallData callData to pass to target address\n     */\n    function simulateHandleOp(UserOperation calldata op, address target, bytes calldata targetCallData) external;\n}\n"},"contracts/interfaces/INonceManager.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.18;\n\ninterface INonceManager {\n\n    /**\n     * Return the next nonce for this sender.\n     * Within a given key, the nonce values are sequenced (starting with zero, and incremented by one on each userop)\n     * But UserOp with different keys can come with arbitrary order. \n     *\n     * @param sender the account address\n     * @param key the high 192 bit of the nonce\n     * @return nonce a full nonce to pass for next UserOp with this sender.\n     */\n    function getNonce(address sender, uint192 key) external view returns (uint256 nonce);\n\n    /**\n     * Manually increment the nonce of the sender.\n     * This method is exposed just for completeness..\n     * Account does NOT need to call it, neither during validation, nor elsewhere,\n     * as the EntryPoint will update the nonce regardless.\n     * Possible use-case is call it with various keys to \"initialize\" their nonces to one, so that future\n     * UserOperations will not pay extra for the first transaction with a given key.\n     */\n    function incrementNonce(uint192 key) external;\n}"},"contracts/interfaces/IPaymaster.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.18;\n\nimport \"./UserOperation.sol\";\n\n/**\n * the interface exposed by a paymaster contract, who agrees to pay the gas for user's operations.\n * a paymaster must hold a stake to cover the required entrypoint stake and also the gas for the transaction.\n */\ninterface IPaymaster {\n\n    enum PostOpMode {\n        opSucceeded, // user op succeeded\n        opReverted, // user op reverted. still has to pay for gas.\n        postOpReverted //user op succeeded, but caused postOp to revert. Now it's a 2nd call, after user's op was deliberately reverted.\n    }\n\n    /**\n     * payment validation: check if paymaster agrees to pay.\n     * Must verify sender is the entryPoint.\n     * Revert to reject this request.\n     * Note that bundlers will reject this method if it changes the state, unless the paymaster is trusted (whitelisted)\n     * The paymaster pre-pays using its deposit, and receive back a refund after the postOp method returns.\n     * @param userOp the user operation\n     * @param userOpHash hash of the user's request data.\n     * @param maxCost the maximum cost of this transaction (based on maximum gas and gas price from userOp)\n     * @return context value to send to a postOp\n     *      zero length to signify postOp is not required.\n     * @return validationData signature and time-range of this operation, encoded the same as the return value of validateUserOperation\n     *      <20-byte> sigAuthorizer - 0 for valid signature, 1 to mark signature failure,\n     *         otherwise, an address of an \"authorizer\" contract.\n     *      <6-byte> validUntil - last timestamp this operation is valid. 0 for \"indefinite\"\n     *      <6-byte> validAfter - first timestamp this operation is valid\n     *      Note that the validation code cannot use block.timestamp (or block.number) directly.\n     */\n    function validatePaymasterUserOp(UserOperation calldata userOp, bytes32 userOpHash, uint256 maxCost) external returns (bytes memory context, uint256 validationData);\n\n    /**\n     * post-operation handler.\n     * Must verify sender is the entryPoint\n     * @param mode enum with the following options:\n     *      opSucceeded - user operation succeeded.\n     *      opReverted  - user op reverted. still has to pay for gas.\n     *      postOpReverted - user op succeeded, but caused postOp (in mode=opSucceeded) to revert.\n     *                       Now this is the 2nd call, after user's op was deliberately reverted.\n     * @param context - the context value returned by validatePaymasterUserOp\n     * @param actualGasCost - actual gas used so far (without this postOp call).\n     */\n    function postOp(PostOpMode mode, bytes calldata context, uint256 actualGasCost) external;\n}"},"contracts/interfaces/IStakeManager.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.18;\n\n/**\n * manage deposits and stakes.\n * deposit is just a balance used to pay for UserOperations (either by a paymaster or an account)\n * stake is value locked for at least \"unstakeDelay\" by the staked entity. \n */\ninterface IStakeManager {\n\n    event Deposited(\n        address indexed account,\n        uint256 totalDeposit\n    );\n\n    event Withdrawn(\n        address indexed account,\n        address withdrawAddress,\n        uint256 amount\n    );\n\n    /// Emitted when stake or unstake delay are modified\n    event StakeLocked(\n        address indexed account,\n        uint256 totalStaked,\n        uint256 unstakeDelaySec\n    );\n\n    /// Emitted once a stake is scheduled for withdrawal\n    event StakeUnlocked(\n        address indexed account,\n        uint256 withdrawTime\n    );\n\n    event StakeWithdrawn(\n        address indexed account,\n        address withdrawAddress,\n        uint256 amount\n    );\n\n    /**\n     * @param deposit the entity's deposit\n     * @param staked true if this entity is staked.\n     * @param stake actual amount of ether staked for this entity.\n     * @param unstakeDelaySec minimum delay to withdraw the stake.\n     * @param withdrawTime - first block timestamp where 'withdrawStake' will be callable, or zero if already locked\n     * @dev sizes were chosen so that (deposit,staked, stake) fit into one cell (used during handleOps)\n     *    and the rest fit into a 2nd cell.\n     *    112 bit allows for 10^15 eth\n     *    48 bit for full timestamp\n     *    32 bit allows 150 years for unstake delay\n     */\n    struct DepositInfo {\n        uint112 deposit;\n        bool staked;\n        uint112 stake;\n        uint32 unstakeDelaySec;\n        uint48 withdrawTime;\n    }\n\n    //API struct used by getStakeInfo and simulateValidation\n    struct StakeInfo {\n        uint256 stake;\n        uint256 unstakeDelaySec;\n    }\n\n    /// @return info - full deposit information of given account\n    function getDepositInfo(address account) external view returns (DepositInfo memory info);\n\n    /// @return the deposit (for gas payment) of the account\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * add to the deposit of the given account\n     */\n    function depositTo(address account) external payable;\n\n    /**\n     * add to the account's stake - amount and delay\n     * any pending unstake is first cancelled.\n     * @param _unstakeDelaySec the new lock duration before the deposit can be withdrawn.\n     */\n    function addStake(uint32 _unstakeDelaySec) external payable;\n\n    /**\n     * attempt to unlock the stake.\n     * the value can be withdrawn (using withdrawStake) after the unstake delay.\n     */\n    function unlockStake() external;\n\n    /**\n     * withdraw from the (unlocked) stake.\n     * must first call unlockStake and wait for the unstakeDelay to pass\n     * @param withdrawAddress the address to send withdrawn value.\n     */\n    function withdrawStake(address payable withdrawAddress) external;\n\n    /**\n     * withdraw from the deposit.\n     * @param withdrawAddress the address to send withdrawn value.\n     * @param withdrawAmount the amount to withdraw.\n     */\n    function withdrawTo(address payable withdrawAddress, uint256 withdrawAmount) external;\n}"},"contracts/interfaces/UserOperation.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.18;\n\n/* solhint-disable no-inline-assembly */\n\nimport {calldataKeccak} from \"../core/Helpers.sol\";\n\n/**\n * User Operation struct\n * @param sender the sender account of this request.\n     * @param nonce unique value the sender uses to verify it is not a replay.\n     * @param initCode if set, the account contract will be created by this constructor/\n     * @param callData the method call to execute on this account.\n     * @param callGasLimit the gas limit passed to the callData method call. \n     * @param verificationGasLimit gas used for validateUserOp and validatePaymasterUserOp.\n     * @param preVerificationGas gas not calculated by the handleOps method, but added to the gas paid. Covers batch overhead.\n     * @param maxFeePerGas same as EIP-1559 gas parameter.\n     * @param maxPriorityFeePerGas same as EIP-1559 gas parameter.\n     * @param paymasterAndData if set, this field holds the paymaster address and paymaster-specific data. the paymaster will pay for the transaction instead of the sender.\n     * @param signature sender-verified signature over the entire request, the EntryPoint address and the chain ID.\n     */\n    struct UserOperation {\n\n        address sender;\n        uint256 nonce;\n        bytes initCode;\n        bytes callData;\n        uint256 callGasLimit;\n        uint256 verificationGasLimit;\n        uint256 preVerificationGas;\n        uint256 maxFeePerGas;\n        uint256 maxPriorityFeePerGas;\n        bytes paymasterAndData;\n        bytes signature;\n    }\n\n/**\n * Utility functions helpful when working with UserOperation structs.\n */\nlibrary UserOperationLib {\n\n    function getSender(UserOperation calldata userOp) internal pure returns (address) {\n        address data;\n        //read sender from userOp, which is first userOp member (saves 800 gas...)\n        assembly {data := calldataload(userOp)}\n        return address(uint160(data));\n    }\n\n    //relayer/block builder might submit the TX with higher priorityFee, but the user should not\n    // pay above what he signed for.\n    function gasPrice(UserOperation calldata userOp) internal view returns (uint256) {\n    unchecked {\n        uint256 maxFeePerGas = userOp.maxFeePerGas;\n        uint256 maxPriorityFeePerGas = userOp.maxPriorityFeePerGas;\n        if (maxFeePerGas == maxPriorityFeePerGas) {\n            //legacy mode (for networks that don't support basefee opcode)\n            return maxFeePerGas;\n        }\n        return min(maxFeePerGas, maxPriorityFeePerGas + block.basefee);\n    }\n    }\n\n    function pack(UserOperation calldata userOp) internal pure returns (bytes memory ret) {\n        address sender = getSender(userOp);\n        uint256 nonce = userOp.nonce;\n        bytes32 hashInitCode = calldataKeccak(userOp.initCode);\n        bytes32 hashCallData = calldataKeccak(userOp.callData);\n        uint256 callGasLimit = userOp.callGasLimit;\n        uint256 verificationGasLimit = userOp.verificationGasLimit;\n        uint256 preVerificationGas = userOp.preVerificationGas;\n        uint256 maxFeePerGas = userOp.maxFeePerGas;\n        uint256 maxPriorityFeePerGas = userOp.maxPriorityFeePerGas;\n        bytes32 hashPaymasterAndData = calldataKeccak(userOp.paymasterAndData);\n\n        return abi.encode(\n            sender, nonce,\n            hashInitCode, hashCallData,\n            callGasLimit, verificationGasLimit, preVerificationGas,\n            maxFeePerGas, maxPriorityFeePerGas,\n            hashPaymasterAndData\n        );\n    }\n\n    function hash(UserOperation calldata userOp) internal pure returns (bytes32) {\n        return keccak256(pack(userOp));\n    }\n\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n}"},"contracts/samples/callback/TokenCallbackHandler.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.18;\n\n/* solhint-disable no-empty-blocks */\n\nimport \"@openzeppelin/contracts/utils/introspection/IERC165.sol\";\nimport \"@openzeppelin/contracts/token/ERC777/IERC777Recipient.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\";\nimport \"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\";\n\n/**\n * Token callback handler.\n *   Handles supported tokens' callbacks, allowing account receiving these tokens.\n */\ncontract TokenCallbackHandler is IERC777Recipient, IERC721Receiver, IERC1155Receiver {\n    function tokensReceived(\n        address,\n        address,\n        address,\n        uint256,\n        bytes calldata,\n        bytes calldata\n    ) external pure override {\n    }\n\n    function onERC721Received(\n        address,\n        address,\n        uint256,\n        bytes calldata\n    ) external pure override returns (bytes4) {\n        return IERC721Receiver.onERC721Received.selector;\n    }\n\n    function onERC1155Received(\n        address,\n        address,\n        uint256,\n        uint256,\n        bytes calldata\n    ) external pure override returns (bytes4) {\n        return IERC1155Receiver.onERC1155Received.selector;\n    }\n\n    function onERC1155BatchReceived(\n        address,\n        address,\n        uint256[] calldata,\n        uint256[] calldata,\n        bytes calldata\n    ) external pure override returns (bytes4) {\n        return IERC1155Receiver.onERC1155BatchReceived.selector;\n    }\n\n    function supportsInterface(bytes4 interfaceId) external view virtual override returns (bool) {\n        return\n            interfaceId == type(IERC721Receiver).interfaceId ||\n            interfaceId == type(IERC1155Receiver).interfaceId ||\n            interfaceId == type(IERC165).interfaceId;\n    }\n}"},"contracts/samples/FactoryManager.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.18;\n\nimport \"./SimpleAccountFactory.sol\";\nimport \"./../interfaces/IEntryPoint.sol\";\nimport \"@openzeppelin/contracts/utils/Counters.sol\";\n\n/**\n * FactoryManager コントラクト\n */\ncontract FactoryManager {\n    using Counters for Counters.Counter;\n    // エントリーポイントコントラクトのアドレス\n    address public ENTRY_POINT_ADDRESS = 0x5FF137D4b0FDCD49DcA30c7CF57E578a026d2789;\n\n    Counters.Counter private _factoryIds;\n\n    // 生成したFactoryコントラクトを格納するための変数\n    SimpleAccountFactory[] public factories;\n\n    // id と FactoryInfoの紐付けを管理するmapping変数\n    mapping (uint => address) public factoryMap;\n\n    // SimpleAccountFactory コントラクトを生成した時のイベント\n    event FactoryCreated (uint factoryId, address factoryAddress);\n\n    /**\n     * Factoryコントラクトを生成するための関数\n     */\n    function createFactory () public {\n        uint newId = _factoryIds.current();\n        // インスタンスを生成\n        SimpleAccountFactory factory = new SimpleAccountFactory(IEntryPoint(ENTRY_POINT_ADDRESS));\n        // 配列に追加する。\n        factories.push(factory);\n        factoryMap[newId] = address(factory);\n        _factoryIds.increment();\n\n        emit FactoryCreated(newId, address(factory));\n    }\n\n    /**\n     * 生成したFactoryコントラクトの情報を取得するコントラクト\n     */\n    function getFactories() public view returns (SimpleAccountFactory[] memory coll) {\n        //返却\n        return factories;\n    }\n\n    /**\n     * addStakeを実行するためのメソッド\n     * @param factoryAddress factoryコントラクトのアドレス\n     * @param unstakeDelaySec unstakeDelaySec\n     */\n    function addStake(address factoryAddress, uint32 unstakeDelaySec) public payable {\n        SimpleAccountFactory factory = SimpleAccountFactory(factoryAddress);\n        // addStake()を呼び出し\n        factory.addStake{value: msg.value}(unstakeDelaySec);\n    }\n}"},"contracts/samples/SimpleAccount.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.18;\n\n/* solhint-disable avoid-low-level-calls */\n/* solhint-disable no-inline-assembly */\n/* solhint-disable reason-string */\n\nimport \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\";\nimport \"@openzeppelin/contracts/proxy/utils/Initializable.sol\";\nimport \"@openzeppelin/contracts/proxy/utils/UUPSUpgradeable.sol\";\n\nimport \"../core/BaseAccount.sol\";\nimport \"./callback/TokenCallbackHandler.sol\";\n\n/**\n  * minimal account.\n  *  this is sample minimal account.\n  *  has execute, eth handling methods\n  *  has a single signer that can send requests through the entryPoint.\n  */\ncontract SimpleAccount is BaseAccount, TokenCallbackHandler, UUPSUpgradeable, Initializable {\n    using ECDSA for bytes32;\n\n    address public owner;\n\n    IEntryPoint private immutable _entryPoint;\n\n    event SimpleAccountInitialized(IEntryPoint indexed entryPoint, address indexed owner);\n\n    modifier onlyOwner() {\n        _onlyOwner();\n        _;\n    }\n\n    /// @inheritdoc BaseAccount\n    function entryPoint() public view virtual override returns (IEntryPoint) {\n        return _entryPoint;\n    }\n\n\n    // solhint-disable-next-line no-empty-blocks\n    receive() external payable {}\n\n    constructor(IEntryPoint anEntryPoint) {\n        _entryPoint = anEntryPoint;\n        _disableInitializers();\n    }\n\n    function _onlyOwner() internal view {\n        //directly from EOA owner, or through the account itself (which gets redirected through execute())\n        require(msg.sender == owner || msg.sender == address(this), \"only owner\");\n    }\n\n    /**\n     * execute a transaction (called directly from owner, or by entryPoint)\n     */\n    function execute(address dest, uint256 value, bytes calldata func) external {\n        _requireFromEntryPointOrOwner();\n        _call(dest, value, func);\n    }\n\n    /**\n     * execute a sequence of transactions\n     */\n    function executeBatch(address[] calldata dest, bytes[] calldata func) external {\n        _requireFromEntryPointOrOwner();\n        require(dest.length == func.length, \"wrong array lengths\");\n        for (uint256 i = 0; i < dest.length; i++) {\n            _call(dest[i], 0, func[i]);\n        }\n    }\n\n    /**\n     * @dev The _entryPoint member is immutable, to reduce gas consumption.  To upgrade EntryPoint,\n     * a new implementation of SimpleAccount must be deployed with the new EntryPoint address, then upgrading\n      * the implementation by calling `upgradeTo()`\n     */\n    function initialize(address anOwner) public virtual initializer {\n        _initialize(anOwner);\n    }\n\n    function _initialize(address anOwner) internal virtual {\n        owner = anOwner;\n        emit SimpleAccountInitialized(_entryPoint, owner);\n    }\n\n    // Require the function call went through EntryPoint or owner\n    function _requireFromEntryPointOrOwner() internal view {\n        require(msg.sender == address(entryPoint()) || msg.sender == owner, \"account: not Owner or EntryPoint\");\n    }\n\n    /// implement template method of BaseAccount\n    function _validateSignature(UserOperation calldata userOp, bytes32 userOpHash)\n    internal override virtual returns (uint256 validationData) {\n        bytes32 hash = userOpHash.toEthSignedMessageHash();\n        // recover\n        if (owner != hash.recover(userOp.signature))\n            return SIG_VALIDATION_FAILED;\n        return 0;\n    }\n\n    function _call(address target, uint256 value, bytes memory data) internal {\n        (bool success, bytes memory result) = target.call{value : value}(data);\n        if (!success) {\n            assembly {\n                revert(add(result, 32), mload(result))\n            }\n        }\n    }\n\n    /**\n     * check current account deposit in the entryPoint\n     */\n    function getDeposit() public view returns (uint256) {\n        return entryPoint().balanceOf(address(this));\n    }\n\n    /**\n     * deposit more funds for this account in the entryPoint\n     */\n    function addDeposit() public payable {\n        entryPoint().depositTo{value : msg.value}(address(this));\n    }\n\n    /**\n     * withdraw value from the account's deposit\n     * @param withdrawAddress target to send to\n     * @param amount to withdraw\n     */\n    function withdrawDepositTo(address payable withdrawAddress, uint256 amount) public onlyOwner {\n        entryPoint().withdrawTo(withdrawAddress, amount);\n    }\n\n    function _authorizeUpgrade(address newImplementation) internal view override {\n        (newImplementation);\n        _onlyOwner();\n    }\n}\n"},"contracts/samples/SimpleAccountFactory.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.18;\n\nimport \"@openzeppelin/contracts/utils/Counters.sol\";\nimport \"@openzeppelin/contracts/utils/Create2.sol\";\nimport \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\";\n\nimport \"./SimpleAccount.sol\";\n\n/**\n * A sample factory contract for SimpleAccount\n * A UserOperations \"initCode\" holds the address of the factory, and a method call (to createAccount, in this sample factory).\n * The factory's createAccount returns the target account address even if it is already installed.\n * This way, the entryPoint.getSenderAddress() can be called either before or after the account is created.\n */\ncontract SimpleAccountFactory {\n    SimpleAccount public immutable accountImplementation;\n    // entryPoint address\n    IEntryPoint public immutable entryPoint;\n\n    using Counters for Counters.Counter;\n\n    Counters.Counter private _walletIds;\n\n    // crated event\n    event Created(uint256 walletId, address addr);\n\n    /**\n     * constructor\n     * @param _entryPoint entryPoint Contract's Address\n     */\n    constructor(IEntryPoint _entryPoint) {\n        accountImplementation = new SimpleAccount(_entryPoint);\n        entryPoint = _entryPoint;\n    }\n\n    /**\n     * create an account, and return its address.\n     * returns the address even if the account is already deployed.\n     * Note that during UserOperation execution, this method is called only if the account is not deployed.\n     * This method returns an existing account address so that entryPoint.getSenderAddress() would work even after account creation\n     */\n    function createAccount(\n        address owner,\n        uint256 salt\n    ) public returns (SimpleAccount ret) {\n        uint newWAlletID = _walletIds.current();\n        address addr = getAddress(owner, salt);\n        uint codeSize = addr.code.length;\n        if (codeSize > 0) {\n            return SimpleAccount(payable(addr));\n        }\n        ret = SimpleAccount(\n            payable(\n                new ERC1967Proxy{salt: bytes32(salt)}(\n                    address(accountImplementation),\n                    abi.encodeCall(SimpleAccount.initialize, (owner))\n                )\n            )\n        );\n\n        _walletIds.increment();\n        emit Created(newWAlletID, addr);\n    }\n\n    /**\n     * calculate the counterfactual address of this account as it would be returned by createAccount()\n     */\n    function getAddress(\n        address owner,\n        uint256 salt\n    ) public view returns (address) {\n        return\n            Create2.computeAddress(\n                bytes32(salt),\n                keccak256(\n                    abi.encodePacked(\n                        type(ERC1967Proxy).creationCode,\n                        abi.encode(\n                            address(accountImplementation),\n                            abi.encodeCall(SimpleAccount.initialize, (owner))\n                        )\n                    )\n                )\n            );\n    }\n\n    /**\n     * addStake function\n     */\n    function addStake(uint32 unstakeDelaySec) external payable {\n        entryPoint.addStake{value: msg.value}(unstakeDelaySec);\n    }\n}\n"},"contracts/utils/Exec.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity >=0.7.5 <0.9.0;\n\n// solhint-disable no-inline-assembly\n\n/**\n * Utility functions helpful when making different kinds of contract calls in Solidity.\n */\nlibrary Exec {\n\n    function call(\n        address to,\n        uint256 value,\n        bytes memory data,\n        uint256 txGas\n    ) internal returns (bool success) {\n        assembly {\n            success := call(txGas, to, value, add(data, 0x20), mload(data), 0, 0)\n        }\n    }\n\n    function staticcall(\n        address to,\n        bytes memory data,\n        uint256 txGas\n    ) internal view returns (bool success) {\n        assembly {\n            success := staticcall(txGas, to, add(data, 0x20), mload(data), 0, 0)\n        }\n    }\n\n    function delegateCall(\n        address to,\n        bytes memory data,\n        uint256 txGas\n    ) internal returns (bool success) {\n        assembly {\n            success := delegatecall(txGas, to, add(data, 0x20), mload(data), 0, 0)\n        }\n    }\n\n    // get returned data from last call or calldelegate\n    function getReturnData(uint256 maxLen) internal pure returns (bytes memory returnData) {\n        assembly {\n            let len := returndatasize()\n            if gt(len, maxLen) {\n                len := maxLen\n            }\n            let ptr := mload(0x40)\n            mstore(0x40, add(ptr, add(len, 0x20)))\n            mstore(ptr, len)\n            returndatacopy(add(ptr, 0x20), 0, len)\n            returnData := ptr\n        }\n    }\n\n    // revert with explicit byte array (probably reverted info from call)\n    function revertWithData(bytes memory returnData) internal pure {\n        assembly {\n            revert(add(returnData, 32), mload(returnData))\n        }\n    }\n\n    function callAndRevert(address to, bytes memory data, uint256 maxLen) internal {\n        bool success = call(to,0,data,gasleft());\n        if (!success) {\n            revertWithData(getReturnData(maxLen));\n        }\n    }\n}"}},"settings":{"optimizer":{"enabled":true,"runs":1000000},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts/interfaces/IERC1967.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC1967.sol","exportedSymbols":{"IERC1967":[20]},"id":21,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"107:23:0"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1967","contractDependencies":[],"contractKind":"interface","documentation":{"id":2,"nodeType":"StructuredDocumentation","src":"132:133:0","text":" @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\n _Available since v4.8.3._"},"fullyImplemented":true,"id":20,"linearizedBaseContracts":[20],"name":"IERC1967","nameLocation":"276:8:0","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":3,"nodeType":"StructuredDocumentation","src":"291:68:0","text":" @dev Emitted when the implementation is upgraded."},"eventSelector":"bc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b","id":7,"name":"Upgraded","nameLocation":"370:8:0","nodeType":"EventDefinition","parameters":{"id":6,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5,"indexed":true,"mutability":"mutable","name":"implementation","nameLocation":"395:14:0","nodeType":"VariableDeclaration","scope":7,"src":"379:30:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4,"name":"address","nodeType":"ElementaryTypeName","src":"379:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"378:32:0"},"src":"364:47:0"},{"anonymous":false,"documentation":{"id":8,"nodeType":"StructuredDocumentation","src":"417:67:0","text":" @dev Emitted when the admin account has changed."},"eventSelector":"7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f","id":14,"name":"AdminChanged","nameLocation":"495:12:0","nodeType":"EventDefinition","parameters":{"id":13,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10,"indexed":false,"mutability":"mutable","name":"previousAdmin","nameLocation":"516:13:0","nodeType":"VariableDeclaration","scope":14,"src":"508:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9,"name":"address","nodeType":"ElementaryTypeName","src":"508:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":12,"indexed":false,"mutability":"mutable","name":"newAdmin","nameLocation":"539:8:0","nodeType":"VariableDeclaration","scope":14,"src":"531:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11,"name":"address","nodeType":"ElementaryTypeName","src":"531:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"507:41:0"},"src":"489:60:0"},{"anonymous":false,"documentation":{"id":15,"nodeType":"StructuredDocumentation","src":"555:59:0","text":" @dev Emitted when the beacon is changed."},"eventSelector":"1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e","id":19,"name":"BeaconUpgraded","nameLocation":"625:14:0","nodeType":"EventDefinition","parameters":{"id":18,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17,"indexed":true,"mutability":"mutable","name":"beacon","nameLocation":"656:6:0","nodeType":"VariableDeclaration","scope":19,"src":"640:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16,"name":"address","nodeType":"ElementaryTypeName","src":"640:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"639:24:0"},"src":"619:45:0"}],"scope":21,"src":"266:400:0","usedErrors":[]}],"src":"107:560:0"},"id":0},"@openzeppelin/contracts/interfaces/draft-IERC1822.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC1822.sol","exportedSymbols":{"IERC1822Proxiable":[30]},"id":31,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":22,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"113:23:1"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1822Proxiable","contractDependencies":[],"contractKind":"interface","documentation":{"id":23,"nodeType":"StructuredDocumentation","src":"138:203:1","text":" @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n proxy whose upgrades are fully controlled by the current implementation."},"fullyImplemented":false,"id":30,"linearizedBaseContracts":[30],"name":"IERC1822Proxiable","nameLocation":"352:17:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":24,"nodeType":"StructuredDocumentation","src":"376:438:1","text":" @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n address.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy."},"functionSelector":"52d1902d","id":29,"implemented":false,"kind":"function","modifiers":[],"name":"proxiableUUID","nameLocation":"828:13:1","nodeType":"FunctionDefinition","parameters":{"id":25,"nodeType":"ParameterList","parameters":[],"src":"841:2:1"},"returnParameters":{"id":28,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":29,"src":"867:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":26,"name":"bytes32","nodeType":"ElementaryTypeName","src":"867:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"866:9:1"},"scope":30,"src":"819:57:1","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":31,"src":"342:536:1","usedErrors":[]}],"src":"113:766:1"},"id":1},"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol","exportedSymbols":{"Address":[1127],"ERC1967Proxy":[67],"ERC1967Upgrade":[371],"IBeacon":[433],"IERC1822Proxiable":[30],"IERC1967":[20],"Proxy":[423],"StorageSlot":[1392]},"id":68,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":32,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"114:23:2"},{"absolutePath":"@openzeppelin/contracts/proxy/Proxy.sol","file":"../Proxy.sol","id":33,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":68,"sourceUnit":424,"src":"139:22:2","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol","file":"./ERC1967Upgrade.sol","id":34,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":68,"sourceUnit":372,"src":"162:30:2","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":36,"name":"Proxy","nameLocations":["592:5:2"],"nodeType":"IdentifierPath","referencedDeclaration":423,"src":"592:5:2"},"id":37,"nodeType":"InheritanceSpecifier","src":"592:5:2"},{"baseName":{"id":38,"name":"ERC1967Upgrade","nameLocations":["599:14:2"],"nodeType":"IdentifierPath","referencedDeclaration":371,"src":"599:14:2"},"id":39,"nodeType":"InheritanceSpecifier","src":"599:14:2"}],"canonicalName":"ERC1967Proxy","contractDependencies":[],"contractKind":"contract","documentation":{"id":35,"nodeType":"StructuredDocumentation","src":"194:372:2","text":" @dev This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an\n implementation address that can be changed. This address is stored in storage in the location specified by\n https://eips.ethereum.org/EIPS/eip-1967[EIP1967], so that it doesn't conflict with the storage layout of the\n implementation behind the proxy."},"fullyImplemented":true,"id":67,"linearizedBaseContracts":[67,371,20,423],"name":"ERC1967Proxy","nameLocation":"576:12:2","nodeType":"ContractDefinition","nodes":[{"body":{"id":53,"nodeType":"Block","src":"1014:56:2","statements":[{"expression":{"arguments":[{"id":48,"name":"_logic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":42,"src":"1042:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":49,"name":"_data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":44,"src":"1050:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"66616c7365","id":50,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1057:5:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":47,"name":"_upgradeToAndCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":166,"src":"1024:17:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$","typeString":"function (address,bytes memory,bool)"}},"id":51,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1024:39:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":52,"nodeType":"ExpressionStatement","src":"1024:39:2"}]},"documentation":{"id":40,"nodeType":"StructuredDocumentation","src":"620:333:2","text":" @dev Initializes the upgradeable proxy with an initial implementation specified by `_logic`.\n If `_data` is nonempty, it's used as data in a delegate call to `_logic`. This will typically be an encoded\n function call, and allows initializing the storage of the proxy like a Solidity constructor."},"id":54,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":45,"nodeType":"ParameterList","parameters":[{"constant":false,"id":42,"mutability":"mutable","name":"_logic","nameLocation":"978:6:2","nodeType":"VariableDeclaration","scope":54,"src":"970:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":41,"name":"address","nodeType":"ElementaryTypeName","src":"970:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":44,"mutability":"mutable","name":"_data","nameLocation":"999:5:2","nodeType":"VariableDeclaration","scope":54,"src":"986:18:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":43,"name":"bytes","nodeType":"ElementaryTypeName","src":"986:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"969:36:2"},"returnParameters":{"id":46,"nodeType":"ParameterList","parameters":[],"src":"1014:0:2"},"scope":67,"src":"958:112:2","stateMutability":"payable","virtual":false,"visibility":"public"},{"baseFunctions":[388],"body":{"id":65,"nodeType":"Block","src":"1229:59:2","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":61,"name":"ERC1967Upgrade","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":371,"src":"1246:14:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Upgrade_$371_$","typeString":"type(contract ERC1967Upgrade)"}},"id":62,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1261:18:2","memberName":"_getImplementation","nodeType":"MemberAccess","referencedDeclaration":97,"src":"1246:33:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":63,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1246:35:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":60,"id":64,"nodeType":"Return","src":"1239:42:2"}]},"documentation":{"id":55,"nodeType":"StructuredDocumentation","src":"1076:67:2","text":" @dev Returns the current implementation address."},"id":66,"implemented":true,"kind":"function","modifiers":[],"name":"_implementation","nameLocation":"1157:15:2","nodeType":"FunctionDefinition","overrides":{"id":57,"nodeType":"OverrideSpecifier","overrides":[],"src":"1197:8:2"},"parameters":{"id":56,"nodeType":"ParameterList","parameters":[],"src":"1172:2:2"},"returnParameters":{"id":60,"nodeType":"ParameterList","parameters":[{"constant":false,"id":59,"mutability":"mutable","name":"impl","nameLocation":"1223:4:2","nodeType":"VariableDeclaration","scope":66,"src":"1215:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":58,"name":"address","nodeType":"ElementaryTypeName","src":"1215:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1214:14:2"},"scope":67,"src":"1148:140:2","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":68,"src":"567:723:2","usedErrors":[]}],"src":"114:1177:2"},"id":2},"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol","exportedSymbols":{"Address":[1127],"ERC1967Upgrade":[371],"IBeacon":[433],"IERC1822Proxiable":[30],"IERC1967":[20],"StorageSlot":[1392]},"id":372,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":69,"literals":["solidity","^","0.8",".2"],"nodeType":"PragmaDirective","src":"116:23:3"},{"absolutePath":"@openzeppelin/contracts/proxy/beacon/IBeacon.sol","file":"../beacon/IBeacon.sol","id":70,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":372,"sourceUnit":434,"src":"141:31:3","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC1967.sol","file":"../../interfaces/IERC1967.sol","id":71,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":372,"sourceUnit":21,"src":"173:39:3","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC1822.sol","file":"../../interfaces/draft-IERC1822.sol","id":72,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":372,"sourceUnit":31,"src":"213:45:3","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"../../utils/Address.sol","id":73,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":372,"sourceUnit":1128,"src":"259:33:3","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","file":"../../utils/StorageSlot.sol","id":74,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":372,"sourceUnit":1393,"src":"293:37:3","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":76,"name":"IERC1967","nameLocations":["553:8:3"],"nodeType":"IdentifierPath","referencedDeclaration":20,"src":"553:8:3"},"id":77,"nodeType":"InheritanceSpecifier","src":"553:8:3"}],"canonicalName":"ERC1967Upgrade","contractDependencies":[],"contractKind":"contract","documentation":{"id":75,"nodeType":"StructuredDocumentation","src":"332:184:3","text":" @dev This abstract contract provides getters and event emitting update functions for\n https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\n _Available since v4.1._"},"fullyImplemented":true,"id":371,"linearizedBaseContracts":[371,20],"name":"ERC1967Upgrade","nameLocation":"535:14:3","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":80,"mutability":"constant","name":"_ROLLBACK_SLOT","nameLocation":"672:14:3","nodeType":"VariableDeclaration","scope":371,"src":"647:108:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":78,"name":"bytes32","nodeType":"ElementaryTypeName","src":"647:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307834393130666466613136666564333236306564306537313437663763633664613131613630323038623562393430366431326136333536313466666439313433","id":79,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"689:66:3","typeDescriptions":{"typeIdentifier":"t_rational_33048860383849004559742813297059419343339852917517107368639918720169455489347_by_1","typeString":"int_const 3304...(69 digits omitted)...9347"},"value":"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143"},"visibility":"private"},{"constant":true,"documentation":{"id":81,"nodeType":"StructuredDocumentation","src":"762:214:3","text":" @dev Storage slot with the address of the current implementation.\n This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1, and is\n validated in the constructor."},"id":84,"mutability":"constant","name":"_IMPLEMENTATION_SLOT","nameLocation":"1007:20:3","nodeType":"VariableDeclaration","scope":371,"src":"981:115:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":82,"name":"bytes32","nodeType":"ElementaryTypeName","src":"981:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307833363038393461313362613161333231303636376338323834393264623938646361336532303736636333373335613932306133636135303564333832626263","id":83,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1030:66:3","typeDescriptions":{"typeIdentifier":"t_rational_24440054405305269366569402256811496959409073762505157381672968839269610695612_by_1","typeString":"int_const 2444...(69 digits omitted)...5612"},"value":"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc"},"visibility":"internal"},{"body":{"id":96,"nodeType":"Block","src":"1237:78:3","statements":[{"expression":{"expression":{"arguments":[{"id":92,"name":"_IMPLEMENTATION_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":84,"src":"1281:20:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":90,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1392,"src":"1254:11:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$1392_$","typeString":"type(library StorageSlot)"}},"id":91,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1266:14:3","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":1314,"src":"1254:26:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1288_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":93,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1254:48:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1288_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":94,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1303:5:3","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1287,"src":"1254:54:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":89,"id":95,"nodeType":"Return","src":"1247:61:3"}]},"documentation":{"id":85,"nodeType":"StructuredDocumentation","src":"1103:67:3","text":" @dev Returns the current implementation address."},"id":97,"implemented":true,"kind":"function","modifiers":[],"name":"_getImplementation","nameLocation":"1184:18:3","nodeType":"FunctionDefinition","parameters":{"id":86,"nodeType":"ParameterList","parameters":[],"src":"1202:2:3"},"returnParameters":{"id":89,"nodeType":"ParameterList","parameters":[{"constant":false,"id":88,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":97,"src":"1228:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":87,"name":"address","nodeType":"ElementaryTypeName","src":"1228:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1227:9:3"},"scope":371,"src":"1175:140:3","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":120,"nodeType":"Block","src":"1469:196:3","statements":[{"expression":{"arguments":[{"arguments":[{"id":106,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":100,"src":"1506:17:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":104,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1127,"src":"1487:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$1127_$","typeString":"type(library Address)"}},"id":105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1495:10:3","memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":815,"src":"1487:18:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":107,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1487:37:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313936373a206e657720696d706c656d656e746174696f6e206973206e6f74206120636f6e7472616374","id":108,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1526:47:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65","typeString":"literal_string \"ERC1967: new implementation is not a contract\""},"value":"ERC1967: new implementation is not a contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65","typeString":"literal_string \"ERC1967: new implementation is not a contract\""}],"id":103,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1479:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":109,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1479:95:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":110,"nodeType":"ExpressionStatement","src":"1479:95:3"},{"expression":{"id":118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":114,"name":"_IMPLEMENTATION_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":84,"src":"1611:20:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":111,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1392,"src":"1584:11:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$1392_$","typeString":"type(library StorageSlot)"}},"id":113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1596:14:3","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":1314,"src":"1584:26:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1288_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":115,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1584:48:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1288_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":116,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1633:5:3","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1287,"src":"1584:54:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":117,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":100,"src":"1641:17:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1584:74:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":119,"nodeType":"ExpressionStatement","src":"1584:74:3"}]},"documentation":{"id":98,"nodeType":"StructuredDocumentation","src":"1321:80:3","text":" @dev Stores a new address in the EIP1967 implementation slot."},"id":121,"implemented":true,"kind":"function","modifiers":[],"name":"_setImplementation","nameLocation":"1415:18:3","nodeType":"FunctionDefinition","parameters":{"id":101,"nodeType":"ParameterList","parameters":[{"constant":false,"id":100,"mutability":"mutable","name":"newImplementation","nameLocation":"1442:17:3","nodeType":"VariableDeclaration","scope":121,"src":"1434:25:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":99,"name":"address","nodeType":"ElementaryTypeName","src":"1434:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1433:27:3"},"returnParameters":{"id":102,"nodeType":"ParameterList","parameters":[],"src":"1469:0:3"},"scope":371,"src":"1406:259:3","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":135,"nodeType":"Block","src":"1827:96:3","statements":[{"expression":{"arguments":[{"id":128,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":124,"src":"1856:17:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":127,"name":"_setImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":121,"src":"1837:18:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":129,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1837:37:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":130,"nodeType":"ExpressionStatement","src":"1837:37:3"},{"eventCall":{"arguments":[{"id":132,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":124,"src":"1898:17:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":131,"name":"Upgraded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"1889:8:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":133,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1889:27:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":134,"nodeType":"EmitStatement","src":"1884:32:3"}]},"documentation":{"id":122,"nodeType":"StructuredDocumentation","src":"1671:95:3","text":" @dev Perform implementation upgrade\n Emits an {Upgraded} event."},"id":136,"implemented":true,"kind":"function","modifiers":[],"name":"_upgradeTo","nameLocation":"1780:10:3","nodeType":"FunctionDefinition","parameters":{"id":125,"nodeType":"ParameterList","parameters":[{"constant":false,"id":124,"mutability":"mutable","name":"newImplementation","nameLocation":"1799:17:3","nodeType":"VariableDeclaration","scope":136,"src":"1791:25:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":123,"name":"address","nodeType":"ElementaryTypeName","src":"1791:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1790:27:3"},"returnParameters":{"id":126,"nodeType":"ParameterList","parameters":[],"src":"1827:0:3"},"scope":371,"src":"1771:152:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":165,"nodeType":"Block","src":"2155:167:3","statements":[{"expression":{"arguments":[{"id":147,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":139,"src":"2176:17:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":146,"name":"_upgradeTo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":136,"src":"2165:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":148,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2165:29:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":149,"nodeType":"ExpressionStatement","src":"2165:29:3"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":150,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":141,"src":"2208:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2213:6:3","memberName":"length","nodeType":"MemberAccess","src":"2208:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":152,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2222:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2208:15:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"id":154,"name":"forceCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":143,"src":"2227:9:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2208:28:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":164,"nodeType":"IfStatement","src":"2204:112:3","trueBody":{"id":163,"nodeType":"Block","src":"2238:78:3","statements":[{"expression":{"arguments":[{"id":159,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":139,"src":"2281:17:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":160,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":141,"src":"2300:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":156,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1127,"src":"2252:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$1127_$","typeString":"type(library Address)"}},"id":158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2260:20:3","memberName":"functionDelegateCall","nodeType":"MemberAccess","referencedDeclaration":1014,"src":"2252:28:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory) returns (bytes memory)"}},"id":161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2252:53:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":162,"nodeType":"ExpressionStatement","src":"2252:53:3"}]}}]},"documentation":{"id":137,"nodeType":"StructuredDocumentation","src":"1929:123:3","text":" @dev Perform implementation upgrade with additional setup call.\n Emits an {Upgraded} event."},"id":166,"implemented":true,"kind":"function","modifiers":[],"name":"_upgradeToAndCall","nameLocation":"2066:17:3","nodeType":"FunctionDefinition","parameters":{"id":144,"nodeType":"ParameterList","parameters":[{"constant":false,"id":139,"mutability":"mutable","name":"newImplementation","nameLocation":"2092:17:3","nodeType":"VariableDeclaration","scope":166,"src":"2084:25:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":138,"name":"address","nodeType":"ElementaryTypeName","src":"2084:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":141,"mutability":"mutable","name":"data","nameLocation":"2124:4:3","nodeType":"VariableDeclaration","scope":166,"src":"2111:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":140,"name":"bytes","nodeType":"ElementaryTypeName","src":"2111:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":143,"mutability":"mutable","name":"forceCall","nameLocation":"2135:9:3","nodeType":"VariableDeclaration","scope":166,"src":"2130:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":142,"name":"bool","nodeType":"ElementaryTypeName","src":"2130:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2083:62:3"},"returnParameters":{"id":145,"nodeType":"ParameterList","parameters":[],"src":"2155:0:3"},"scope":371,"src":"2057:265:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":218,"nodeType":"Block","src":"2596:820:3","statements":[{"condition":{"expression":{"arguments":[{"id":178,"name":"_ROLLBACK_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":80,"src":"2937:14:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":176,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1392,"src":"2910:11:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$1392_$","typeString":"type(library StorageSlot)"}},"id":177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2922:14:3","memberName":"getBooleanSlot","nodeType":"MemberAccess","referencedDeclaration":1325,"src":"2910:26:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_BooleanSlot_$1291_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.BooleanSlot storage pointer)"}},"id":179,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2910:42:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$1291_storage_ptr","typeString":"struct StorageSlot.BooleanSlot storage pointer"}},"id":180,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2953:5:3","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1290,"src":"2910:48:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":216,"nodeType":"Block","src":"3028:382:3","statements":[{"clauses":[{"block":{"id":201,"nodeType":"Block","src":"3122:115:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":195,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":192,"src":"3148:4:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":196,"name":"_IMPLEMENTATION_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":84,"src":"3156:20:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3148:28:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524331393637557067726164653a20756e737570706f727465642070726f786961626c6555554944","id":198,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3178:43:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c","typeString":"literal_string \"ERC1967Upgrade: unsupported proxiableUUID\""},"value":"ERC1967Upgrade: unsupported proxiableUUID"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c","typeString":"literal_string \"ERC1967Upgrade: unsupported proxiableUUID\""}],"id":194,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3140:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":199,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3140:82:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":200,"nodeType":"ExpressionStatement","src":"3140:82:3"}]},"errorName":"","id":202,"nodeType":"TryCatchClause","parameters":{"id":193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":192,"mutability":"mutable","name":"slot","nameLocation":"3116:4:3","nodeType":"VariableDeclaration","scope":202,"src":"3108:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":191,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3108:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3107:14:3"},"src":"3099:138:3"},{"block":{"id":207,"nodeType":"Block","src":"3244:89:3","statements":[{"expression":{"arguments":[{"hexValue":"45524331393637557067726164653a206e657720696d706c656d656e746174696f6e206973206e6f742055555053","id":204,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3269:48:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24","typeString":"literal_string \"ERC1967Upgrade: new implementation is not UUPS\""},"value":"ERC1967Upgrade: new implementation is not UUPS"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24","typeString":"literal_string \"ERC1967Upgrade: new implementation is not UUPS\""}],"id":203,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"3262:6:3","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":205,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3262:56:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":206,"nodeType":"ExpressionStatement","src":"3262:56:3"}]},"errorName":"","id":208,"nodeType":"TryCatchClause","src":"3238:95:3"}],"externalCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":187,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":169,"src":"3064:17:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":186,"name":"IERC1822Proxiable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30,"src":"3046:17:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1822Proxiable_$30_$","typeString":"type(contract IERC1822Proxiable)"}},"id":188,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3046:36:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC1822Proxiable_$30","typeString":"contract IERC1822Proxiable"}},"id":189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3083:13:3","memberName":"proxiableUUID","nodeType":"MemberAccess","referencedDeclaration":29,"src":"3046:50:3","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_bytes32_$","typeString":"function () view external returns (bytes32)"}},"id":190,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3046:52:3","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":209,"nodeType":"TryStatement","src":"3042:291:3"},{"expression":{"arguments":[{"id":211,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":169,"src":"3364:17:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":212,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":171,"src":"3383:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":213,"name":"forceCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":173,"src":"3389:9:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":210,"name":"_upgradeToAndCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":166,"src":"3346:17:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$","typeString":"function (address,bytes memory,bool)"}},"id":214,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3346:53:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":215,"nodeType":"ExpressionStatement","src":"3346:53:3"}]},"id":217,"nodeType":"IfStatement","src":"2906:504:3","trueBody":{"id":185,"nodeType":"Block","src":"2960:62:3","statements":[{"expression":{"arguments":[{"id":182,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":169,"src":"2993:17:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":181,"name":"_setImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":121,"src":"2974:18:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":183,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2974:37:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":184,"nodeType":"ExpressionStatement","src":"2974:37:3"}]}}]},"documentation":{"id":167,"nodeType":"StructuredDocumentation","src":"2328:161:3","text":" @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\n Emits an {Upgraded} event."},"id":219,"implemented":true,"kind":"function","modifiers":[],"name":"_upgradeToAndCallUUPS","nameLocation":"2503:21:3","nodeType":"FunctionDefinition","parameters":{"id":174,"nodeType":"ParameterList","parameters":[{"constant":false,"id":169,"mutability":"mutable","name":"newImplementation","nameLocation":"2533:17:3","nodeType":"VariableDeclaration","scope":219,"src":"2525:25:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":168,"name":"address","nodeType":"ElementaryTypeName","src":"2525:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":171,"mutability":"mutable","name":"data","nameLocation":"2565:4:3","nodeType":"VariableDeclaration","scope":219,"src":"2552:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":170,"name":"bytes","nodeType":"ElementaryTypeName","src":"2552:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":173,"mutability":"mutable","name":"forceCall","nameLocation":"2576:9:3","nodeType":"VariableDeclaration","scope":219,"src":"2571:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":172,"name":"bool","nodeType":"ElementaryTypeName","src":"2571:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2524:62:3"},"returnParameters":{"id":175,"nodeType":"ParameterList","parameters":[],"src":"2596:0:3"},"scope":371,"src":"2494:922:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":true,"documentation":{"id":220,"nodeType":"StructuredDocumentation","src":"3422:189:3","text":" @dev Storage slot with the admin of the contract.\n This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1, and is\n validated in the constructor."},"id":223,"mutability":"constant","name":"_ADMIN_SLOT","nameLocation":"3642:11:3","nodeType":"VariableDeclaration","scope":371,"src":"3616:106:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":221,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3616:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307862353331323736383461353638623331373361653133623966386136303136653234336536336236653865653131373864366137313738353062356436313033","id":222,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3656:66:3","typeDescriptions":{"typeIdentifier":"t_rational_81955473079516046949633743016697847541294818689821282749996681496272635257091_by_1","typeString":"int_const 8195...(69 digits omitted)...7091"},"value":"0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103"},"visibility":"internal"},{"body":{"id":235,"nodeType":"Block","src":"3837:69:3","statements":[{"expression":{"expression":{"arguments":[{"id":231,"name":"_ADMIN_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":223,"src":"3881:11:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":229,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1392,"src":"3854:11:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$1392_$","typeString":"type(library StorageSlot)"}},"id":230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3866:14:3","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":1314,"src":"3854:26:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1288_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":232,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3854:39:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1288_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":233,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3894:5:3","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1287,"src":"3854:45:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":228,"id":234,"nodeType":"Return","src":"3847:52:3"}]},"documentation":{"id":224,"nodeType":"StructuredDocumentation","src":"3729:50:3","text":" @dev Returns the current admin."},"id":236,"implemented":true,"kind":"function","modifiers":[],"name":"_getAdmin","nameLocation":"3793:9:3","nodeType":"FunctionDefinition","parameters":{"id":225,"nodeType":"ParameterList","parameters":[],"src":"3802:2:3"},"returnParameters":{"id":228,"nodeType":"ParameterList","parameters":[{"constant":false,"id":227,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":236,"src":"3828:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":226,"name":"address","nodeType":"ElementaryTypeName","src":"3828:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3827:9:3"},"scope":371,"src":"3784:122:3","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":261,"nodeType":"Block","src":"4033:156:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":243,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":239,"src":"4051:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":246,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4071:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":245,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4063:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":244,"name":"address","nodeType":"ElementaryTypeName","src":"4063:7:3","typeDescriptions":{}}},"id":247,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4063:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4051:22:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313936373a206e65772061646d696e20697320746865207a65726f2061646472657373","id":249,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4075:40:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_3820e16891102c1360a787e6e648431097d92537f969d458f5c94b56f8318be5","typeString":"literal_string \"ERC1967: new admin is the zero address\""},"value":"ERC1967: new admin is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3820e16891102c1360a787e6e648431097d92537f969d458f5c94b56f8318be5","typeString":"literal_string \"ERC1967: new admin is the zero address\""}],"id":242,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4043:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":250,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4043:73:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":251,"nodeType":"ExpressionStatement","src":"4043:73:3"},{"expression":{"id":259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":255,"name":"_ADMIN_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":223,"src":"4153:11:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":252,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1392,"src":"4126:11:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$1392_$","typeString":"type(library StorageSlot)"}},"id":254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4138:14:3","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":1314,"src":"4126:26:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1288_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":256,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4126:39:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1288_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":257,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4166:5:3","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1287,"src":"4126:45:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":258,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":239,"src":"4174:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4126:56:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":260,"nodeType":"ExpressionStatement","src":"4126:56:3"}]},"documentation":{"id":237,"nodeType":"StructuredDocumentation","src":"3912:71:3","text":" @dev Stores a new address in the EIP1967 admin slot."},"id":262,"implemented":true,"kind":"function","modifiers":[],"name":"_setAdmin","nameLocation":"3997:9:3","nodeType":"FunctionDefinition","parameters":{"id":240,"nodeType":"ParameterList","parameters":[{"constant":false,"id":239,"mutability":"mutable","name":"newAdmin","nameLocation":"4015:8:3","nodeType":"VariableDeclaration","scope":262,"src":"4007:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":238,"name":"address","nodeType":"ElementaryTypeName","src":"4007:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4006:18:3"},"returnParameters":{"id":241,"nodeType":"ParameterList","parameters":[],"src":"4033:0:3"},"scope":371,"src":"3988:201:3","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":278,"nodeType":"Block","src":"4349:86:3","statements":[{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":269,"name":"_getAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":236,"src":"4377:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":270,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4377:11:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":271,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":265,"src":"4390:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":268,"name":"AdminChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":14,"src":"4364:12:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":272,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4364:35:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":273,"nodeType":"EmitStatement","src":"4359:40:3"},{"expression":{"arguments":[{"id":275,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":265,"src":"4419:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":274,"name":"_setAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":262,"src":"4409:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":276,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4409:19:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":277,"nodeType":"ExpressionStatement","src":"4409:19:3"}]},"documentation":{"id":263,"nodeType":"StructuredDocumentation","src":"4195:100:3","text":" @dev Changes the admin of the proxy.\n Emits an {AdminChanged} event."},"id":279,"implemented":true,"kind":"function","modifiers":[],"name":"_changeAdmin","nameLocation":"4309:12:3","nodeType":"FunctionDefinition","parameters":{"id":266,"nodeType":"ParameterList","parameters":[{"constant":false,"id":265,"mutability":"mutable","name":"newAdmin","nameLocation":"4330:8:3","nodeType":"VariableDeclaration","scope":279,"src":"4322:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":264,"name":"address","nodeType":"ElementaryTypeName","src":"4322:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4321:18:3"},"returnParameters":{"id":267,"nodeType":"ParameterList","parameters":[],"src":"4349:0:3"},"scope":371,"src":"4300:135:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":true,"documentation":{"id":280,"nodeType":"StructuredDocumentation","src":"4441:232:3","text":" @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor."},"id":283,"mutability":"constant","name":"_BEACON_SLOT","nameLocation":"4704:12:3","nodeType":"VariableDeclaration","scope":371,"src":"4678:107:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":281,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4678:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307861336630616437346535343233616562666438306433656634333436353738333335613961373261656165653539666636636233353832623335313333643530","id":282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4719:66:3","typeDescriptions":{"typeIdentifier":"t_rational_74152234768234802001998023604048924213078445070507226371336425913862612794704_by_1","typeString":"int_const 7415...(69 digits omitted)...4704"},"value":"0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50"},"visibility":"internal"},{"body":{"id":295,"nodeType":"Block","src":"4902:70:3","statements":[{"expression":{"expression":{"arguments":[{"id":291,"name":"_BEACON_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":283,"src":"4946:12:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":289,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1392,"src":"4919:11:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$1392_$","typeString":"type(library StorageSlot)"}},"id":290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4931:14:3","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":1314,"src":"4919:26:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1288_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":292,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4919:40:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1288_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":293,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4960:5:3","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1287,"src":"4919:46:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":288,"id":294,"nodeType":"Return","src":"4912:53:3"}]},"documentation":{"id":284,"nodeType":"StructuredDocumentation","src":"4792:51:3","text":" @dev Returns the current beacon."},"id":296,"implemented":true,"kind":"function","modifiers":[],"name":"_getBeacon","nameLocation":"4857:10:3","nodeType":"FunctionDefinition","parameters":{"id":285,"nodeType":"ParameterList","parameters":[],"src":"4867:2:3"},"returnParameters":{"id":288,"nodeType":"ParameterList","parameters":[{"constant":false,"id":287,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":296,"src":"4893:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":286,"name":"address","nodeType":"ElementaryTypeName","src":"4893:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4892:9:3"},"scope":371,"src":"4848:124:3","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":331,"nodeType":"Block","src":"5101:324:3","statements":[{"expression":{"arguments":[{"arguments":[{"id":305,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":299,"src":"5138:9:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":303,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1127,"src":"5119:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$1127_$","typeString":"type(library Address)"}},"id":304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5127:10:3","memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":815,"src":"5119:18:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":306,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5119:29:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313936373a206e657720626561636f6e206973206e6f74206120636f6e7472616374","id":307,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5150:39:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_9589b7809634e4928033de18bb696e9af4ef71b703652af5245f2dbebf2f4470","typeString":"literal_string \"ERC1967: new beacon is not a contract\""},"value":"ERC1967: new beacon is not a contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9589b7809634e4928033de18bb696e9af4ef71b703652af5245f2dbebf2f4470","typeString":"literal_string \"ERC1967: new beacon is not a contract\""}],"id":302,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5111:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5111:79:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":309,"nodeType":"ExpressionStatement","src":"5111:79:3"},{"expression":{"arguments":[{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":314,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":299,"src":"5248:9:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":313,"name":"IBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":433,"src":"5240:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBeacon_$433_$","typeString":"type(contract IBeacon)"}},"id":315,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5240:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBeacon_$433","typeString":"contract IBeacon"}},"id":316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5259:14:3","memberName":"implementation","nodeType":"MemberAccess","referencedDeclaration":432,"src":"5240:33:3","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":317,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5240:35:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":311,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1127,"src":"5221:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$1127_$","typeString":"type(library Address)"}},"id":312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5229:10:3","memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":815,"src":"5221:18:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":318,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5221:55:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313936373a20626561636f6e20696d706c656d656e746174696f6e206973206e6f74206120636f6e7472616374","id":319,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5290:50:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_f95fd1f5b5578816eb23f6ca0f2439b4b5e4094dc16e99c3b8e91603a83f93c8","typeString":"literal_string \"ERC1967: beacon implementation is not a contract\""},"value":"ERC1967: beacon implementation is not a contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f95fd1f5b5578816eb23f6ca0f2439b4b5e4094dc16e99c3b8e91603a83f93c8","typeString":"literal_string \"ERC1967: beacon implementation is not a contract\""}],"id":310,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5200:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":320,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5200:150:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":321,"nodeType":"ExpressionStatement","src":"5200:150:3"},{"expression":{"id":329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":325,"name":"_BEACON_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":283,"src":"5387:12:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":322,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1392,"src":"5360:11:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$1392_$","typeString":"type(library StorageSlot)"}},"id":324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5372:14:3","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":1314,"src":"5360:26:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1288_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":326,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5360:40:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1288_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":327,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5401:5:3","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1287,"src":"5360:46:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":328,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":299,"src":"5409:9:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5360:58:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":330,"nodeType":"ExpressionStatement","src":"5360:58:3"}]},"documentation":{"id":297,"nodeType":"StructuredDocumentation","src":"4978:71:3","text":" @dev Stores a new beacon in the EIP1967 beacon slot."},"id":332,"implemented":true,"kind":"function","modifiers":[],"name":"_setBeacon","nameLocation":"5063:10:3","nodeType":"FunctionDefinition","parameters":{"id":300,"nodeType":"ParameterList","parameters":[{"constant":false,"id":299,"mutability":"mutable","name":"newBeacon","nameLocation":"5082:9:3","nodeType":"VariableDeclaration","scope":332,"src":"5074:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":298,"name":"address","nodeType":"ElementaryTypeName","src":"5074:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5073:19:3"},"returnParameters":{"id":301,"nodeType":"ParameterList","parameters":[],"src":"5101:0:3"},"scope":371,"src":"5054:371:3","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":369,"nodeType":"Block","src":"5824:217:3","statements":[{"expression":{"arguments":[{"id":343,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":335,"src":"5845:9:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":342,"name":"_setBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":332,"src":"5834:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":344,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5834:21:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":345,"nodeType":"ExpressionStatement","src":"5834:21:3"},{"eventCall":{"arguments":[{"id":347,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":335,"src":"5885:9:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":346,"name":"BeaconUpgraded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":19,"src":"5870:14:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":348,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5870:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":349,"nodeType":"EmitStatement","src":"5865:30:3"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":350,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"5909:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5914:6:3","memberName":"length","nodeType":"MemberAccess","src":"5909:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":352,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5923:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5909:15:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"id":354,"name":"forceCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":339,"src":"5928:9:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5909:28:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":368,"nodeType":"IfStatement","src":"5905:130:3","trueBody":{"id":367,"nodeType":"Block","src":"5939:96:3","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":360,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":335,"src":"5990:9:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":359,"name":"IBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":433,"src":"5982:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBeacon_$433_$","typeString":"type(contract IBeacon)"}},"id":361,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5982:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBeacon_$433","typeString":"contract IBeacon"}},"id":362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6001:14:3","memberName":"implementation","nodeType":"MemberAccess","referencedDeclaration":432,"src":"5982:33:3","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":363,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5982:35:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":364,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"6019:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":356,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1127,"src":"5953:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$1127_$","typeString":"type(library Address)"}},"id":358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5961:20:3","memberName":"functionDelegateCall","nodeType":"MemberAccess","referencedDeclaration":1014,"src":"5953:28:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory) returns (bytes memory)"}},"id":365,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5953:71:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":366,"nodeType":"ExpressionStatement","src":"5953:71:3"}]}}]},"documentation":{"id":333,"nodeType":"StructuredDocumentation","src":"5431:292:3","text":" @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\n not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\n Emits a {BeaconUpgraded} event."},"id":370,"implemented":true,"kind":"function","modifiers":[],"name":"_upgradeBeaconToAndCall","nameLocation":"5737:23:3","nodeType":"FunctionDefinition","parameters":{"id":340,"nodeType":"ParameterList","parameters":[{"constant":false,"id":335,"mutability":"mutable","name":"newBeacon","nameLocation":"5769:9:3","nodeType":"VariableDeclaration","scope":370,"src":"5761:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":334,"name":"address","nodeType":"ElementaryTypeName","src":"5761:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":337,"mutability":"mutable","name":"data","nameLocation":"5793:4:3","nodeType":"VariableDeclaration","scope":370,"src":"5780:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":336,"name":"bytes","nodeType":"ElementaryTypeName","src":"5780:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":339,"mutability":"mutable","name":"forceCall","nameLocation":"5804:9:3","nodeType":"VariableDeclaration","scope":370,"src":"5799:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":338,"name":"bool","nodeType":"ElementaryTypeName","src":"5799:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5760:54:3"},"returnParameters":{"id":341,"nodeType":"ParameterList","parameters":[],"src":"5824:0:3"},"scope":371,"src":"5728:313:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":372,"src":"517:5526:3","usedErrors":[]}],"src":"116:5928:3"},"id":3},"@openzeppelin/contracts/proxy/Proxy.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/proxy/Proxy.sol","exportedSymbols":{"Proxy":[423]},"id":424,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":373,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"99:23:4"},{"abstract":true,"baseContracts":[],"canonicalName":"Proxy","contractDependencies":[],"contractKind":"contract","documentation":{"id":374,"nodeType":"StructuredDocumentation","src":"124:598:4","text":" @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\n instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\n be specified by overriding the virtual {_implementation} function.\n Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\n different contract through the {_delegate} function.\n The success and return data of the delegated call will be returned back to the caller of the proxy."},"fullyImplemented":false,"id":423,"linearizedBaseContracts":[423],"name":"Proxy","nameLocation":"741:5:4","nodeType":"ContractDefinition","nodes":[{"body":{"id":381,"nodeType":"Block","src":"1008:835:4","statements":[{"AST":{"nodeType":"YulBlock","src":"1027:810:4","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1280:1:4","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1283:1:4","type":"","value":"0"},{"arguments":[],"functionName":{"name":"calldatasize","nodeType":"YulIdentifier","src":"1286:12:4"},"nodeType":"YulFunctionCall","src":"1286:14:4"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"1267:12:4"},"nodeType":"YulFunctionCall","src":"1267:34:4"},"nodeType":"YulExpressionStatement","src":"1267:34:4"},{"nodeType":"YulVariableDeclaration","src":"1428:74:4","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"1455:3:4"},"nodeType":"YulFunctionCall","src":"1455:5:4"},{"name":"implementation","nodeType":"YulIdentifier","src":"1462:14:4"},{"kind":"number","nodeType":"YulLiteral","src":"1478:1:4","type":"","value":"0"},{"arguments":[],"functionName":{"name":"calldatasize","nodeType":"YulIdentifier","src":"1481:12:4"},"nodeType":"YulFunctionCall","src":"1481:14:4"},{"kind":"number","nodeType":"YulLiteral","src":"1497:1:4","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1500:1:4","type":"","value":"0"}],"functionName":{"name":"delegatecall","nodeType":"YulIdentifier","src":"1442:12:4"},"nodeType":"YulFunctionCall","src":"1442:60:4"},"variables":[{"name":"result","nodeType":"YulTypedName","src":"1432:6:4","type":""}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1570:1:4","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1573:1:4","type":"","value":"0"},{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"1576:14:4"},"nodeType":"YulFunctionCall","src":"1576:16:4"}],"functionName":{"name":"returndatacopy","nodeType":"YulIdentifier","src":"1555:14:4"},"nodeType":"YulFunctionCall","src":"1555:38:4"},"nodeType":"YulExpressionStatement","src":"1555:38:4"},{"cases":[{"body":{"nodeType":"YulBlock","src":"1688:59:4","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1713:1:4","type":"","value":"0"},{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"1716:14:4"},"nodeType":"YulFunctionCall","src":"1716:16:4"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1706:6:4"},"nodeType":"YulFunctionCall","src":"1706:27:4"},"nodeType":"YulExpressionStatement","src":"1706:27:4"}]},"nodeType":"YulCase","src":"1681:66:4","value":{"kind":"number","nodeType":"YulLiteral","src":"1686:1:4","type":"","value":"0"}},{"body":{"nodeType":"YulBlock","src":"1768:59:4","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1793:1:4","type":"","value":"0"},{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"1796:14:4"},"nodeType":"YulFunctionCall","src":"1796:16:4"}],"functionName":{"name":"return","nodeType":"YulIdentifier","src":"1786:6:4"},"nodeType":"YulFunctionCall","src":"1786:27:4"},"nodeType":"YulExpressionStatement","src":"1786:27:4"}]},"nodeType":"YulCase","src":"1760:67:4","value":"default"}],"expression":{"name":"result","nodeType":"YulIdentifier","src":"1614:6:4"},"nodeType":"YulSwitch","src":"1607:220:4"}]},"evmVersion":"paris","externalReferences":[{"declaration":377,"isOffset":false,"isSlot":false,"src":"1462:14:4","valueSize":1}],"id":380,"nodeType":"InlineAssembly","src":"1018:819:4"}]},"documentation":{"id":375,"nodeType":"StructuredDocumentation","src":"753:190:4","text":" @dev Delegates the current call to `implementation`.\n This function does not return to its internal call site, it will return directly to the external caller."},"id":382,"implemented":true,"kind":"function","modifiers":[],"name":"_delegate","nameLocation":"957:9:4","nodeType":"FunctionDefinition","parameters":{"id":378,"nodeType":"ParameterList","parameters":[{"constant":false,"id":377,"mutability":"mutable","name":"implementation","nameLocation":"975:14:4","nodeType":"VariableDeclaration","scope":382,"src":"967:22:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":376,"name":"address","nodeType":"ElementaryTypeName","src":"967:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"966:24:4"},"returnParameters":{"id":379,"nodeType":"ParameterList","parameters":[],"src":"1008:0:4"},"scope":423,"src":"948:895:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"documentation":{"id":383,"nodeType":"StructuredDocumentation","src":"1849:173:4","text":" @dev This is a virtual function that should be overridden so it returns the address to which the fallback function\n and {_fallback} should delegate."},"id":388,"implemented":false,"kind":"function","modifiers":[],"name":"_implementation","nameLocation":"2036:15:4","nodeType":"FunctionDefinition","parameters":{"id":384,"nodeType":"ParameterList","parameters":[],"src":"2051:2:4"},"returnParameters":{"id":387,"nodeType":"ParameterList","parameters":[{"constant":false,"id":386,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":388,"src":"2085:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":385,"name":"address","nodeType":"ElementaryTypeName","src":"2085:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2084:9:4"},"scope":423,"src":"2027:67:4","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":400,"nodeType":"Block","src":"2360:72:4","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":392,"name":"_beforeFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":422,"src":"2370:15:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":393,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2370:17:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":394,"nodeType":"ExpressionStatement","src":"2370:17:4"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":396,"name":"_implementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"2407:15:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":397,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2407:17:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":395,"name":"_delegate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":382,"src":"2397:9:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":398,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2397:28:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":399,"nodeType":"ExpressionStatement","src":"2397:28:4"}]},"documentation":{"id":389,"nodeType":"StructuredDocumentation","src":"2100:217:4","text":" @dev Delegates the current call to the address returned by `_implementation()`.\n This function does not return to its internal call site, it will return directly to the external caller."},"id":401,"implemented":true,"kind":"function","modifiers":[],"name":"_fallback","nameLocation":"2331:9:4","nodeType":"FunctionDefinition","parameters":{"id":390,"nodeType":"ParameterList","parameters":[],"src":"2340:2:4"},"returnParameters":{"id":391,"nodeType":"ParameterList","parameters":[],"src":"2360:0:4"},"scope":423,"src":"2322:110:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":408,"nodeType":"Block","src":"2665:28:4","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":405,"name":"_fallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":401,"src":"2675:9:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":406,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2675:11:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":407,"nodeType":"ExpressionStatement","src":"2675:11:4"}]},"documentation":{"id":402,"nodeType":"StructuredDocumentation","src":"2438:186:4","text":" @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\n function in the contract matches the call data."},"id":409,"implemented":true,"kind":"fallback","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":403,"nodeType":"ParameterList","parameters":[],"src":"2637:2:4"},"returnParameters":{"id":404,"nodeType":"ParameterList","parameters":[],"src":"2665:0:4"},"scope":423,"src":"2629:64:4","stateMutability":"payable","virtual":true,"visibility":"external"},{"body":{"id":416,"nodeType":"Block","src":"2888:28:4","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":413,"name":"_fallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":401,"src":"2898:9:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":414,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2898:11:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":415,"nodeType":"ExpressionStatement","src":"2898:11:4"}]},"documentation":{"id":410,"nodeType":"StructuredDocumentation","src":"2699:149:4","text":" @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if call data\n is empty."},"id":417,"implemented":true,"kind":"receive","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":411,"nodeType":"ParameterList","parameters":[],"src":"2860:2:4"},"returnParameters":{"id":412,"nodeType":"ParameterList","parameters":[],"src":"2888:0:4"},"scope":423,"src":"2853:63:4","stateMutability":"payable","virtual":true,"visibility":"external"},{"body":{"id":421,"nodeType":"Block","src":"3242:2:4","statements":[]},"documentation":{"id":418,"nodeType":"StructuredDocumentation","src":"2922:271:4","text":" @dev Hook that is called before falling back to the implementation. Can happen as part of a manual `_fallback`\n call, or as part of the Solidity `fallback` or `receive` functions.\n If overridden should call `super._beforeFallback()`."},"id":422,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeFallback","nameLocation":"3207:15:4","nodeType":"FunctionDefinition","parameters":{"id":419,"nodeType":"ParameterList","parameters":[],"src":"3222:2:4"},"returnParameters":{"id":420,"nodeType":"ParameterList","parameters":[],"src":"3242:0:4"},"scope":423,"src":"3198:46:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":424,"src":"723:2523:4","usedErrors":[]}],"src":"99:3148:4"},"id":4},"@openzeppelin/contracts/proxy/beacon/IBeacon.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/proxy/beacon/IBeacon.sol","exportedSymbols":{"IBeacon":[433]},"id":434,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":425,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"93:23:5"},{"abstract":false,"baseContracts":[],"canonicalName":"IBeacon","contractDependencies":[],"contractKind":"interface","documentation":{"id":426,"nodeType":"StructuredDocumentation","src":"118:79:5","text":" @dev This is the interface that {BeaconProxy} expects of its beacon."},"fullyImplemented":false,"id":433,"linearizedBaseContracts":[433],"name":"IBeacon","nameLocation":"208:7:5","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":427,"nodeType":"StructuredDocumentation","src":"222:162:5","text":" @dev Must return an address that can be used as a delegate call target.\n {BeaconProxy} will check that this address is a contract."},"functionSelector":"5c60da1b","id":432,"implemented":false,"kind":"function","modifiers":[],"name":"implementation","nameLocation":"398:14:5","nodeType":"FunctionDefinition","parameters":{"id":428,"nodeType":"ParameterList","parameters":[],"src":"412:2:5"},"returnParameters":{"id":431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":430,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":432,"src":"438:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":429,"name":"address","nodeType":"ElementaryTypeName","src":"438:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"437:9:5"},"scope":433,"src":"389:58:5","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":434,"src":"198:251:5","usedErrors":[]}],"src":"93:357:5"},"id":5},"@openzeppelin/contracts/proxy/utils/Initializable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/proxy/utils/Initializable.sol","exportedSymbols":{"Address":[1127],"Initializable":[602]},"id":603,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":435,"literals":["solidity","^","0.8",".2"],"nodeType":"PragmaDirective","src":"113:23:6"},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"../../utils/Address.sol","id":436,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":603,"sourceUnit":1128,"src":"138:33:6","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[],"canonicalName":"Initializable","contractDependencies":[],"contractKind":"contract","documentation":{"id":437,"nodeType":"StructuredDocumentation","src":"173:2209:6","text":" @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="},"fullyImplemented":true,"id":602,"linearizedBaseContracts":[602],"name":"Initializable","nameLocation":"2401:13:6","nodeType":"ContractDefinition","nodes":[{"constant":false,"documentation":{"id":438,"nodeType":"StructuredDocumentation","src":"2421:109:6","text":" @dev Indicates that the contract has been initialized.\n @custom:oz-retyped-from bool"},"id":440,"mutability":"mutable","name":"_initialized","nameLocation":"2549:12:6","nodeType":"VariableDeclaration","scope":602,"src":"2535:26:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":439,"name":"uint8","nodeType":"ElementaryTypeName","src":"2535:5:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"private"},{"constant":false,"documentation":{"id":441,"nodeType":"StructuredDocumentation","src":"2568:91:6","text":" @dev Indicates that the contract is in the process of being initialized."},"id":443,"mutability":"mutable","name":"_initializing","nameLocation":"2677:13:6","nodeType":"VariableDeclaration","scope":602,"src":"2664:26:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":442,"name":"bool","nodeType":"ElementaryTypeName","src":"2664:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"private"},{"anonymous":false,"documentation":{"id":444,"nodeType":"StructuredDocumentation","src":"2697:90:6","text":" @dev Triggered when the contract has been initialized or reinitialized."},"eventSelector":"7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498","id":448,"name":"Initialized","nameLocation":"2798:11:6","nodeType":"EventDefinition","parameters":{"id":447,"nodeType":"ParameterList","parameters":[{"constant":false,"id":446,"indexed":false,"mutability":"mutable","name":"version","nameLocation":"2816:7:6","nodeType":"VariableDeclaration","scope":448,"src":"2810:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":445,"name":"uint8","nodeType":"ElementaryTypeName","src":"2810:5:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"2809:15:6"},"src":"2792:33:6"},{"body":{"id":503,"nodeType":"Block","src":"3258:472:6","statements":[{"assignments":[452],"declarations":[{"constant":false,"id":452,"mutability":"mutable","name":"isTopLevelCall","nameLocation":"3273:14:6","nodeType":"VariableDeclaration","scope":503,"src":"3268:19:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":451,"name":"bool","nodeType":"ElementaryTypeName","src":"3268:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":455,"initialValue":{"id":454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3290:14:6","subExpression":{"id":453,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":443,"src":"3291:13:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"3268:36:6"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":457,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":452,"src":"3336:14:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":458,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":440,"src":"3354:12:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"31","id":459,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3369:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3354:16:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3336:34:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":462,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3335:36:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3376:34:6","subExpression":{"arguments":[{"arguments":[{"id":467,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3404:4:6","typeDescriptions":{"typeIdentifier":"t_contract$_Initializable_$602","typeString":"contract Initializable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Initializable_$602","typeString":"contract Initializable"}],"id":466,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3396:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":465,"name":"address","nodeType":"ElementaryTypeName","src":"3396:7:6","typeDescriptions":{}}},"id":468,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3396:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":463,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1127,"src":"3377:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$1127_$","typeString":"type(library Address)"}},"id":464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3385:10:6","memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":815,"src":"3377:18:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":469,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3377:33:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":471,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":440,"src":"3414:12:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":472,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3430:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3414:17:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3376:55:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":475,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3375:57:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3335:97:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564","id":477,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3446:48:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""},"value":"Initializable: contract is already initialized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""}],"id":456,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3314:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":478,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3314:190:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":479,"nodeType":"ExpressionStatement","src":"3314:190:6"},{"expression":{"id":482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":480,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":440,"src":"3514:12:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":481,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3529:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3514:16:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":483,"nodeType":"ExpressionStatement","src":"3514:16:6"},{"condition":{"id":484,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":452,"src":"3544:14:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":490,"nodeType":"IfStatement","src":"3540:65:6","trueBody":{"id":489,"nodeType":"Block","src":"3560:45:6","statements":[{"expression":{"id":487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":485,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":443,"src":"3574:13:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":486,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3590:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"3574:20:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":488,"nodeType":"ExpressionStatement","src":"3574:20:6"}]}},{"id":491,"nodeType":"PlaceholderStatement","src":"3614:1:6"},{"condition":{"id":492,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":452,"src":"3629:14:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":502,"nodeType":"IfStatement","src":"3625:99:6","trueBody":{"id":501,"nodeType":"Block","src":"3645:79:6","statements":[{"expression":{"id":495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":493,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":443,"src":"3659:13:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":494,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3675:5:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"3659:21:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":496,"nodeType":"ExpressionStatement","src":"3659:21:6"},{"eventCall":{"arguments":[{"hexValue":"31","id":498,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3711:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":497,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"3699:11:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint8_$returns$__$","typeString":"function (uint8)"}},"id":499,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3699:14:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":500,"nodeType":"EmitStatement","src":"3694:19:6"}]}}]},"documentation":{"id":449,"nodeType":"StructuredDocumentation","src":"2831:399:6","text":" @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\n constructor.\n Emits an {Initialized} event."},"id":504,"name":"initializer","nameLocation":"3244:11:6","nodeType":"ModifierDefinition","parameters":{"id":450,"nodeType":"ParameterList","parameters":[],"src":"3255:2:6"},"src":"3235:495:6","virtual":false,"visibility":"internal"},{"body":{"id":536,"nodeType":"Block","src":"4841:255:6","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4859:14:6","subExpression":{"id":510,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":443,"src":"4860:13:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":512,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":440,"src":"4877:12:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":513,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":507,"src":"4892:7:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"4877:22:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4859:40:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564","id":516,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4901:48:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""},"value":"Initializable: contract is already initialized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""}],"id":509,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4851:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":517,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4851:99:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":518,"nodeType":"ExpressionStatement","src":"4851:99:6"},{"expression":{"id":521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":519,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":440,"src":"4960:12:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":520,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":507,"src":"4975:7:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"4960:22:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":522,"nodeType":"ExpressionStatement","src":"4960:22:6"},{"expression":{"id":525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":523,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":443,"src":"4992:13:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":524,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5008:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"4992:20:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":526,"nodeType":"ExpressionStatement","src":"4992:20:6"},{"id":527,"nodeType":"PlaceholderStatement","src":"5022:1:6"},{"expression":{"id":530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":528,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":443,"src":"5033:13:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":529,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5049:5:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"5033:21:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":531,"nodeType":"ExpressionStatement","src":"5033:21:6"},{"eventCall":{"arguments":[{"id":533,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":507,"src":"5081:7:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":532,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"5069:11:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint8_$returns$__$","typeString":"function (uint8)"}},"id":534,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5069:20:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":535,"nodeType":"EmitStatement","src":"5064:25:6"}]},"documentation":{"id":505,"nodeType":"StructuredDocumentation","src":"3736:1062:6","text":" @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: setting the version to 255 will prevent any future reinitialization.\n Emits an {Initialized} event."},"id":537,"name":"reinitializer","nameLocation":"4812:13:6","nodeType":"ModifierDefinition","parameters":{"id":508,"nodeType":"ParameterList","parameters":[{"constant":false,"id":507,"mutability":"mutable","name":"version","nameLocation":"4832:7:6","nodeType":"VariableDeclaration","scope":537,"src":"4826:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":506,"name":"uint8","nodeType":"ElementaryTypeName","src":"4826:5:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"4825:15:6"},"src":"4803:293:6","virtual":false,"visibility":"internal"},{"body":{"id":546,"nodeType":"Block","src":"5334:97:6","statements":[{"expression":{"arguments":[{"id":541,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":443,"src":"5352:13:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e7472616374206973206e6f7420696e697469616c697a696e67","id":542,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5367:45:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b","typeString":"literal_string \"Initializable: contract is not initializing\""},"value":"Initializable: contract is not initializing"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b","typeString":"literal_string \"Initializable: contract is not initializing\""}],"id":540,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5344:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":543,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5344:69:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":544,"nodeType":"ExpressionStatement","src":"5344:69:6"},{"id":545,"nodeType":"PlaceholderStatement","src":"5423:1:6"}]},"documentation":{"id":538,"nodeType":"StructuredDocumentation","src":"5102:199:6","text":" @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."},"id":547,"name":"onlyInitializing","nameLocation":"5315:16:6","nodeType":"ModifierDefinition","parameters":{"id":539,"nodeType":"ParameterList","parameters":[],"src":"5331:2:6"},"src":"5306:125:6","virtual":false,"visibility":"internal"},{"body":{"id":582,"nodeType":"Block","src":"5966:231:6","statements":[{"expression":{"arguments":[{"id":553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5984:14:6","subExpression":{"id":552,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":443,"src":"5985:13:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320696e697469616c697a696e67","id":554,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6000:41:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a","typeString":"literal_string \"Initializable: contract is initializing\""},"value":"Initializable: contract is initializing"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a","typeString":"literal_string \"Initializable: contract is initializing\""}],"id":551,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5976:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":555,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5976:66:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":556,"nodeType":"ExpressionStatement","src":"5976:66:6"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":557,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":440,"src":"6056:12:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":560,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6077:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":559,"name":"uint8","nodeType":"ElementaryTypeName","src":"6077:5:6","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":558,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6072:4:6","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":561,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6072:11:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":562,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6084:3:6","memberName":"max","nodeType":"MemberAccess","src":"6072:15:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"6056:31:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":581,"nodeType":"IfStatement","src":"6052:139:6","trueBody":{"id":580,"nodeType":"Block","src":"6089:102:6","statements":[{"expression":{"id":570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":564,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":440,"src":"6103:12:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"arguments":[{"id":567,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6123:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":566,"name":"uint8","nodeType":"ElementaryTypeName","src":"6123:5:6","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":565,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6118:4:6","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":568,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6118:11:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":569,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6130:3:6","memberName":"max","nodeType":"MemberAccess","src":"6118:15:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"6103:30:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":571,"nodeType":"ExpressionStatement","src":"6103:30:6"},{"eventCall":{"arguments":[{"expression":{"arguments":[{"id":575,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6169:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":574,"name":"uint8","nodeType":"ElementaryTypeName","src":"6169:5:6","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":573,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6164:4:6","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":576,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6164:11:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":577,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6176:3:6","memberName":"max","nodeType":"MemberAccess","src":"6164:15:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":572,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"6152:11:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint8_$returns$__$","typeString":"function (uint8)"}},"id":578,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6152:28:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":579,"nodeType":"EmitStatement","src":"6147:33:6"}]}}]},"documentation":{"id":548,"nodeType":"StructuredDocumentation","src":"5437:475:6","text":" @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."},"id":583,"implemented":true,"kind":"function","modifiers":[],"name":"_disableInitializers","nameLocation":"5926:20:6","nodeType":"FunctionDefinition","parameters":{"id":549,"nodeType":"ParameterList","parameters":[],"src":"5946:2:6"},"returnParameters":{"id":550,"nodeType":"ParameterList","parameters":[],"src":"5966:0:6"},"scope":602,"src":"5917:280:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":591,"nodeType":"Block","src":"6371:36:6","statements":[{"expression":{"id":589,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":440,"src":"6388:12:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":588,"id":590,"nodeType":"Return","src":"6381:19:6"}]},"documentation":{"id":584,"nodeType":"StructuredDocumentation","src":"6203:99:6","text":" @dev Returns the highest version that has been initialized. See {reinitializer}."},"id":592,"implemented":true,"kind":"function","modifiers":[],"name":"_getInitializedVersion","nameLocation":"6316:22:6","nodeType":"FunctionDefinition","parameters":{"id":585,"nodeType":"ParameterList","parameters":[],"src":"6338:2:6"},"returnParameters":{"id":588,"nodeType":"ParameterList","parameters":[{"constant":false,"id":587,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":592,"src":"6364:5:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":586,"name":"uint8","nodeType":"ElementaryTypeName","src":"6364:5:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"6363:7:6"},"scope":602,"src":"6307:100:6","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":600,"nodeType":"Block","src":"6579:37:6","statements":[{"expression":{"id":598,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":443,"src":"6596:13:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":597,"id":599,"nodeType":"Return","src":"6589:20:6"}]},"documentation":{"id":593,"nodeType":"StructuredDocumentation","src":"6413:105:6","text":" @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."},"id":601,"implemented":true,"kind":"function","modifiers":[],"name":"_isInitializing","nameLocation":"6532:15:6","nodeType":"FunctionDefinition","parameters":{"id":594,"nodeType":"ParameterList","parameters":[],"src":"6547:2:6"},"returnParameters":{"id":597,"nodeType":"ParameterList","parameters":[{"constant":false,"id":596,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":601,"src":"6573:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":595,"name":"bool","nodeType":"ElementaryTypeName","src":"6573:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6572:6:6"},"scope":602,"src":"6523:93:6","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":603,"src":"2383:4235:6","usedErrors":[]}],"src":"113:6506:6"},"id":6},"@openzeppelin/contracts/proxy/utils/UUPSUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/proxy/utils/UUPSUpgradeable.sol","exportedSymbols":{"Address":[1127],"ERC1967Upgrade":[371],"IBeacon":[433],"IERC1822Proxiable":[30],"IERC1967":[20],"StorageSlot":[1392],"UUPSUpgradeable":[718]},"id":719,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":604,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"115:23:7"},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC1822.sol","file":"../../interfaces/draft-IERC1822.sol","id":605,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":719,"sourceUnit":31,"src":"140:45:7","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol","file":"../ERC1967/ERC1967Upgrade.sol","id":606,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":719,"sourceUnit":372,"src":"186:39:7","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":608,"name":"IERC1822Proxiable","nameLocations":["913:17:7"],"nodeType":"IdentifierPath","referencedDeclaration":30,"src":"913:17:7"},"id":609,"nodeType":"InheritanceSpecifier","src":"913:17:7"},{"baseName":{"id":610,"name":"ERC1967Upgrade","nameLocations":["932:14:7"],"nodeType":"IdentifierPath","referencedDeclaration":371,"src":"932:14:7"},"id":611,"nodeType":"InheritanceSpecifier","src":"932:14:7"}],"canonicalName":"UUPSUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":607,"nodeType":"StructuredDocumentation","src":"227:648:7","text":" @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n `UUPSUpgradeable` with a custom implementation of upgrades.\n The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\n _Available since v4.1._"},"fullyImplemented":false,"id":718,"linearizedBaseContracts":[718,371,20,30],"name":"UUPSUpgradeable","nameLocation":"894:15:7","nodeType":"ContractDefinition","nodes":[{"constant":false,"documentation":{"id":612,"nodeType":"StructuredDocumentation","src":"953:87:7","text":"@custom:oz-upgrades-unsafe-allow state-variable-immutable state-variable-assignment"},"id":618,"mutability":"immutable","name":"__self","nameLocation":"1071:6:7","nodeType":"VariableDeclaration","scope":718,"src":"1045:48:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":613,"name":"address","nodeType":"ElementaryTypeName","src":"1045:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"arguments":[{"id":616,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1088:4:7","typeDescriptions":{"typeIdentifier":"t_contract$_UUPSUpgradeable_$718","typeString":"contract UUPSUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UUPSUpgradeable_$718","typeString":"contract UUPSUpgradeable"}],"id":615,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1080:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":614,"name":"address","nodeType":"ElementaryTypeName","src":"1080:7:7","typeDescriptions":{}}},"id":617,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1080:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"body":{"id":640,"nodeType":"Block","src":"1619:205:7","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":624,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1645:4:7","typeDescriptions":{"typeIdentifier":"t_contract$_UUPSUpgradeable_$718","typeString":"contract UUPSUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UUPSUpgradeable_$718","typeString":"contract UUPSUpgradeable"}],"id":623,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1637:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":622,"name":"address","nodeType":"ElementaryTypeName","src":"1637:7:7","typeDescriptions":{}}},"id":625,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1637:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":626,"name":"__self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":618,"src":"1654:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1637:23:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682064656c656761746563616c6c","id":628,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1662:46:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb","typeString":"literal_string \"Function must be called through delegatecall\""},"value":"Function must be called through delegatecall"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb","typeString":"literal_string \"Function must be called through delegatecall\""}],"id":621,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1629:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":629,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1629:80:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":630,"nodeType":"ExpressionStatement","src":"1629:80:7"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":632,"name":"_getImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":97,"src":"1727:18:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":633,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1727:20:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":634,"name":"__self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":618,"src":"1751:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1727:30:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"46756e6374696f6e206d7573742062652063616c6c6564207468726f756768206163746976652070726f7879","id":636,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1759:46:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434","typeString":"literal_string \"Function must be called through active proxy\""},"value":"Function must be called through active proxy"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434","typeString":"literal_string \"Function must be called through active proxy\""}],"id":631,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1719:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":637,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1719:87:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":638,"nodeType":"ExpressionStatement","src":"1719:87:7"},{"id":639,"nodeType":"PlaceholderStatement","src":"1816:1:7"}]},"documentation":{"id":619,"nodeType":"StructuredDocumentation","src":"1100:493:7","text":" @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\n for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n fail."},"id":641,"name":"onlyProxy","nameLocation":"1607:9:7","nodeType":"ModifierDefinition","parameters":{"id":620,"nodeType":"ParameterList","parameters":[],"src":"1616:2:7"},"src":"1598:226:7","virtual":false,"visibility":"internal"},{"body":{"id":655,"nodeType":"Block","src":"2054:120:7","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":647,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2080:4:7","typeDescriptions":{"typeIdentifier":"t_contract$_UUPSUpgradeable_$718","typeString":"contract UUPSUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UUPSUpgradeable_$718","typeString":"contract UUPSUpgradeable"}],"id":646,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2072:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":645,"name":"address","nodeType":"ElementaryTypeName","src":"2072:7:7","typeDescriptions":{}}},"id":648,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2072:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":649,"name":"__self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":618,"src":"2089:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2072:23:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"555550535570677261646561626c653a206d757374206e6f742062652063616c6c6564207468726f7567682064656c656761746563616c6c","id":651,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2097:58:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4","typeString":"literal_string \"UUPSUpgradeable: must not be called through delegatecall\""},"value":"UUPSUpgradeable: must not be called through delegatecall"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4","typeString":"literal_string \"UUPSUpgradeable: must not be called through delegatecall\""}],"id":644,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2064:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":652,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2064:92:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":653,"nodeType":"ExpressionStatement","src":"2064:92:7"},{"id":654,"nodeType":"PlaceholderStatement","src":"2166:1:7"}]},"documentation":{"id":642,"nodeType":"StructuredDocumentation","src":"1830:195:7","text":" @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n callable on the implementing contract but not through proxies."},"id":656,"name":"notDelegated","nameLocation":"2039:12:7","nodeType":"ModifierDefinition","parameters":{"id":643,"nodeType":"ParameterList","parameters":[],"src":"2051:2:7"},"src":"2030:144:7","virtual":false,"visibility":"internal"},{"baseFunctions":[29],"body":{"id":667,"nodeType":"Block","src":"2849:44:7","statements":[{"expression":{"id":665,"name":"_IMPLEMENTATION_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":84,"src":"2866:20:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":664,"id":666,"nodeType":"Return","src":"2859:27:7"}]},"documentation":{"id":657,"nodeType":"StructuredDocumentation","src":"2180:577:7","text":" @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\n implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."},"functionSelector":"52d1902d","id":668,"implemented":true,"kind":"function","modifiers":[{"id":661,"kind":"modifierInvocation","modifierName":{"id":660,"name":"notDelegated","nameLocations":["2818:12:7"],"nodeType":"IdentifierPath","referencedDeclaration":656,"src":"2818:12:7"},"nodeType":"ModifierInvocation","src":"2818:12:7"}],"name":"proxiableUUID","nameLocation":"2771:13:7","nodeType":"FunctionDefinition","overrides":{"id":659,"nodeType":"OverrideSpecifier","overrides":[],"src":"2809:8:7"},"parameters":{"id":658,"nodeType":"ParameterList","parameters":[],"src":"2784:2:7"},"returnParameters":{"id":664,"nodeType":"ParameterList","parameters":[{"constant":false,"id":663,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":668,"src":"2840:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":662,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2840:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2839:9:7"},"scope":718,"src":"2762:131:7","stateMutability":"view","virtual":true,"visibility":"external"},{"body":{"id":689,"nodeType":"Block","src":"3214:124:7","statements":[{"expression":{"arguments":[{"id":677,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":671,"src":"3242:17:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":676,"name":"_authorizeUpgrade","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":717,"src":"3224:17:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":678,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3224:36:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":679,"nodeType":"ExpressionStatement","src":"3224:36:7"},{"expression":{"arguments":[{"id":681,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":671,"src":"3292:17:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":684,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3321:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":683,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"3311:9:7","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":682,"name":"bytes","nodeType":"ElementaryTypeName","src":"3315:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":685,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3311:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"66616c7365","id":686,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3325:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":680,"name":"_upgradeToAndCallUUPS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"3270:21:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$","typeString":"function (address,bytes memory,bool)"}},"id":687,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3270:61:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":688,"nodeType":"ExpressionStatement","src":"3270:61:7"}]},"documentation":{"id":669,"nodeType":"StructuredDocumentation","src":"2899:239:7","text":" @dev Upgrade the implementation of the proxy to `newImplementation`.\n Calls {_authorizeUpgrade}.\n Emits an {Upgraded} event.\n @custom:oz-upgrades-unsafe-allow-reachable delegatecall"},"functionSelector":"3659cfe6","id":690,"implemented":true,"kind":"function","modifiers":[{"id":674,"kind":"modifierInvocation","modifierName":{"id":673,"name":"onlyProxy","nameLocations":["3204:9:7"],"nodeType":"IdentifierPath","referencedDeclaration":641,"src":"3204:9:7"},"nodeType":"ModifierInvocation","src":"3204:9:7"}],"name":"upgradeTo","nameLocation":"3152:9:7","nodeType":"FunctionDefinition","parameters":{"id":672,"nodeType":"ParameterList","parameters":[{"constant":false,"id":671,"mutability":"mutable","name":"newImplementation","nameLocation":"3170:17:7","nodeType":"VariableDeclaration","scope":690,"src":"3162:25:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":670,"name":"address","nodeType":"ElementaryTypeName","src":"3162:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3161:27:7"},"returnParameters":{"id":675,"nodeType":"ParameterList","parameters":[],"src":"3214:0:7"},"scope":718,"src":"3143:195:7","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":710,"nodeType":"Block","src":"3762:115:7","statements":[{"expression":{"arguments":[{"id":701,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":693,"src":"3790:17:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":700,"name":"_authorizeUpgrade","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":717,"src":"3772:17:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":702,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3772:36:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":703,"nodeType":"ExpressionStatement","src":"3772:36:7"},{"expression":{"arguments":[{"id":705,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":693,"src":"3840:17:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":706,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":695,"src":"3859:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"74727565","id":707,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3865:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":704,"name":"_upgradeToAndCallUUPS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"3818:21:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$","typeString":"function (address,bytes memory,bool)"}},"id":708,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3818:52:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":709,"nodeType":"ExpressionStatement","src":"3818:52:7"}]},"documentation":{"id":691,"nodeType":"StructuredDocumentation","src":"3344:308:7","text":" @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n encoded in `data`.\n Calls {_authorizeUpgrade}.\n Emits an {Upgraded} event.\n @custom:oz-upgrades-unsafe-allow-reachable delegatecall"},"functionSelector":"4f1ef286","id":711,"implemented":true,"kind":"function","modifiers":[{"id":698,"kind":"modifierInvocation","modifierName":{"id":697,"name":"onlyProxy","nameLocations":["3752:9:7"],"nodeType":"IdentifierPath","referencedDeclaration":641,"src":"3752:9:7"},"nodeType":"ModifierInvocation","src":"3752:9:7"}],"name":"upgradeToAndCall","nameLocation":"3666:16:7","nodeType":"FunctionDefinition","parameters":{"id":696,"nodeType":"ParameterList","parameters":[{"constant":false,"id":693,"mutability":"mutable","name":"newImplementation","nameLocation":"3691:17:7","nodeType":"VariableDeclaration","scope":711,"src":"3683:25:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":692,"name":"address","nodeType":"ElementaryTypeName","src":"3683:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":695,"mutability":"mutable","name":"data","nameLocation":"3723:4:7","nodeType":"VariableDeclaration","scope":711,"src":"3710:17:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":694,"name":"bytes","nodeType":"ElementaryTypeName","src":"3710:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3682:46:7"},"returnParameters":{"id":699,"nodeType":"ParameterList","parameters":[],"src":"3762:0:7"},"scope":718,"src":"3657:220:7","stateMutability":"payable","virtual":true,"visibility":"public"},{"documentation":{"id":712,"nodeType":"StructuredDocumentation","src":"3883:397:7","text":" @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n {upgradeTo} and {upgradeToAndCall}.\n Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n ```solidity\n function _authorizeUpgrade(address) internal override onlyOwner {}\n ```"},"id":717,"implemented":false,"kind":"function","modifiers":[],"name":"_authorizeUpgrade","nameLocation":"4294:17:7","nodeType":"FunctionDefinition","parameters":{"id":715,"nodeType":"ParameterList","parameters":[{"constant":false,"id":714,"mutability":"mutable","name":"newImplementation","nameLocation":"4320:17:7","nodeType":"VariableDeclaration","scope":717,"src":"4312:25:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":713,"name":"address","nodeType":"ElementaryTypeName","src":"4312:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4311:27:7"},"returnParameters":{"id":716,"nodeType":"ParameterList","parameters":[],"src":"4355:0:7"},"scope":718,"src":"4285:71:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":719,"src":"876:3482:7","usedErrors":[]}],"src":"115:4244:7"},"id":7},"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol","exportedSymbols":{"IERC1155Receiver":[759],"IERC165":[1999]},"id":760,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":720,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"118:23:8"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":721,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":760,"sourceUnit":2000,"src":"143:47:8","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":723,"name":"IERC165","nameLocations":["262:7:8"],"nodeType":"IdentifierPath","referencedDeclaration":1999,"src":"262:7:8"},"id":724,"nodeType":"InheritanceSpecifier","src":"262:7:8"}],"canonicalName":"IERC1155Receiver","contractDependencies":[],"contractKind":"interface","documentation":{"id":722,"nodeType":"StructuredDocumentation","src":"192:39:8","text":" @dev _Available since v3.1._"},"fullyImplemented":false,"id":759,"linearizedBaseContracts":[759,1999],"name":"IERC1155Receiver","nameLocation":"242:16:8","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":725,"nodeType":"StructuredDocumentation","src":"276:826:8","text":" @dev Handles the receipt of a single ERC1155 token type. This function is\n called at the end of a `safeTransferFrom` after the balance has been updated.\n NOTE: To accept the transfer, this must return\n `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n (i.e. 0xf23a6e61, or its own function selector).\n @param operator The address which initiated the transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param id The ID of the token being transferred\n @param value The amount of tokens being transferred\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"},"functionSelector":"f23a6e61","id":740,"implemented":false,"kind":"function","modifiers":[],"name":"onERC1155Received","nameLocation":"1116:17:8","nodeType":"FunctionDefinition","parameters":{"id":736,"nodeType":"ParameterList","parameters":[{"constant":false,"id":727,"mutability":"mutable","name":"operator","nameLocation":"1151:8:8","nodeType":"VariableDeclaration","scope":740,"src":"1143:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":726,"name":"address","nodeType":"ElementaryTypeName","src":"1143:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":729,"mutability":"mutable","name":"from","nameLocation":"1177:4:8","nodeType":"VariableDeclaration","scope":740,"src":"1169:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":728,"name":"address","nodeType":"ElementaryTypeName","src":"1169:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":731,"mutability":"mutable","name":"id","nameLocation":"1199:2:8","nodeType":"VariableDeclaration","scope":740,"src":"1191:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":730,"name":"uint256","nodeType":"ElementaryTypeName","src":"1191:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":733,"mutability":"mutable","name":"value","nameLocation":"1219:5:8","nodeType":"VariableDeclaration","scope":740,"src":"1211:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":732,"name":"uint256","nodeType":"ElementaryTypeName","src":"1211:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":735,"mutability":"mutable","name":"data","nameLocation":"1249:4:8","nodeType":"VariableDeclaration","scope":740,"src":"1234:19:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":734,"name":"bytes","nodeType":"ElementaryTypeName","src":"1234:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1133:126:8"},"returnParameters":{"id":739,"nodeType":"ParameterList","parameters":[{"constant":false,"id":738,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":740,"src":"1278:6:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":737,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1278:6:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1277:8:8"},"scope":759,"src":"1107:179:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":741,"nodeType":"StructuredDocumentation","src":"1292:994:8","text":" @dev Handles the receipt of a multiple ERC1155 token types. This function\n is called at the end of a `safeBatchTransferFrom` after the balances have\n been updated.\n NOTE: To accept the transfer(s), this must return\n `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n (i.e. 0xbc197c81, or its own function selector).\n @param operator The address which initiated the batch transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param ids An array containing ids of each token being transferred (order and length must match values array)\n @param values An array containing amounts of each token being transferred (order and length must match ids array)\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"},"functionSelector":"bc197c81","id":758,"implemented":false,"kind":"function","modifiers":[],"name":"onERC1155BatchReceived","nameLocation":"2300:22:8","nodeType":"FunctionDefinition","parameters":{"id":754,"nodeType":"ParameterList","parameters":[{"constant":false,"id":743,"mutability":"mutable","name":"operator","nameLocation":"2340:8:8","nodeType":"VariableDeclaration","scope":758,"src":"2332:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":742,"name":"address","nodeType":"ElementaryTypeName","src":"2332:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":745,"mutability":"mutable","name":"from","nameLocation":"2366:4:8","nodeType":"VariableDeclaration","scope":758,"src":"2358:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":744,"name":"address","nodeType":"ElementaryTypeName","src":"2358:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":748,"mutability":"mutable","name":"ids","nameLocation":"2399:3:8","nodeType":"VariableDeclaration","scope":758,"src":"2380:22:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":746,"name":"uint256","nodeType":"ElementaryTypeName","src":"2380:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":747,"nodeType":"ArrayTypeName","src":"2380:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":751,"mutability":"mutable","name":"values","nameLocation":"2431:6:8","nodeType":"VariableDeclaration","scope":758,"src":"2412:25:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":749,"name":"uint256","nodeType":"ElementaryTypeName","src":"2412:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":750,"nodeType":"ArrayTypeName","src":"2412:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":753,"mutability":"mutable","name":"data","nameLocation":"2462:4:8","nodeType":"VariableDeclaration","scope":758,"src":"2447:19:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":752,"name":"bytes","nodeType":"ElementaryTypeName","src":"2447:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2322:150:8"},"returnParameters":{"id":757,"nodeType":"ParameterList","parameters":[{"constant":false,"id":756,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":758,"src":"2491:6:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":755,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2491:6:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2490:8:8"},"scope":759,"src":"2291:208:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":760,"src":"232:2269:8","usedErrors":[]}],"src":"118:2384:8"},"id":8},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","exportedSymbols":{"IERC721Receiver":[777]},"id":778,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":761,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"116:23:9"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Receiver","contractDependencies":[],"contractKind":"interface","documentation":{"id":762,"nodeType":"StructuredDocumentation","src":"141:152:9","text":" @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."},"fullyImplemented":false,"id":777,"linearizedBaseContracts":[777],"name":"IERC721Receiver","nameLocation":"304:15:9","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":763,"nodeType":"StructuredDocumentation","src":"326:493:9","text":" @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."},"functionSelector":"150b7a02","id":776,"implemented":false,"kind":"function","modifiers":[],"name":"onERC721Received","nameLocation":"833:16:9","nodeType":"FunctionDefinition","parameters":{"id":772,"nodeType":"ParameterList","parameters":[{"constant":false,"id":765,"mutability":"mutable","name":"operator","nameLocation":"867:8:9","nodeType":"VariableDeclaration","scope":776,"src":"859:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":764,"name":"address","nodeType":"ElementaryTypeName","src":"859:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":767,"mutability":"mutable","name":"from","nameLocation":"893:4:9","nodeType":"VariableDeclaration","scope":776,"src":"885:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":766,"name":"address","nodeType":"ElementaryTypeName","src":"885:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":769,"mutability":"mutable","name":"tokenId","nameLocation":"915:7:9","nodeType":"VariableDeclaration","scope":776,"src":"907:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":768,"name":"uint256","nodeType":"ElementaryTypeName","src":"907:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":771,"mutability":"mutable","name":"data","nameLocation":"947:4:9","nodeType":"VariableDeclaration","scope":776,"src":"932:19:9","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":770,"name":"bytes","nodeType":"ElementaryTypeName","src":"932:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"849:108:9"},"returnParameters":{"id":775,"nodeType":"ParameterList","parameters":[{"constant":false,"id":774,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":776,"src":"976:6:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":773,"name":"bytes4","nodeType":"ElementaryTypeName","src":"976:6:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"975:8:9"},"scope":777,"src":"824:160:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":778,"src":"294:692:9","usedErrors":[]}],"src":"116:871:9"},"id":9},"@openzeppelin/contracts/token/ERC777/IERC777Recipient.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC777/IERC777Recipient.sol","exportedSymbols":{"IERC777Recipient":[797]},"id":798,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":779,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"102:23:10"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC777Recipient","contractDependencies":[],"contractKind":"interface","documentation":{"id":780,"nodeType":"StructuredDocumentation","src":"127:406:10","text":" @dev Interface of the ERC777TokensRecipient standard as defined in the EIP.\n Accounts can be notified of {IERC777} tokens being sent to them by having a\n contract implement this interface (contract holders can be their own\n implementer) and registering it on the\n https://eips.ethereum.org/EIPS/eip-1820[ERC1820 global registry].\n See {IERC1820Registry} and {ERC1820Implementer}."},"fullyImplemented":false,"id":797,"linearizedBaseContracts":[797],"name":"IERC777Recipient","nameLocation":"544:16:10","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":781,"nodeType":"StructuredDocumentation","src":"567:474:10","text":" @dev Called by an {IERC777} token contract whenever tokens are being\n moved or created into a registered account (`to`). The type of operation\n is conveyed by `from` being the zero address or not.\n This call occurs _after_ the token contract's state is updated, so\n {IERC777-balanceOf}, etc., can be used to query the post-operation state.\n This function may revert to prevent the operation from being executed."},"functionSelector":"0023de29","id":796,"implemented":false,"kind":"function","modifiers":[],"name":"tokensReceived","nameLocation":"1055:14:10","nodeType":"FunctionDefinition","parameters":{"id":794,"nodeType":"ParameterList","parameters":[{"constant":false,"id":783,"mutability":"mutable","name":"operator","nameLocation":"1087:8:10","nodeType":"VariableDeclaration","scope":796,"src":"1079:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":782,"name":"address","nodeType":"ElementaryTypeName","src":"1079:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":785,"mutability":"mutable","name":"from","nameLocation":"1113:4:10","nodeType":"VariableDeclaration","scope":796,"src":"1105:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":784,"name":"address","nodeType":"ElementaryTypeName","src":"1105:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":787,"mutability":"mutable","name":"to","nameLocation":"1135:2:10","nodeType":"VariableDeclaration","scope":796,"src":"1127:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":786,"name":"address","nodeType":"ElementaryTypeName","src":"1127:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":789,"mutability":"mutable","name":"amount","nameLocation":"1155:6:10","nodeType":"VariableDeclaration","scope":796,"src":"1147:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":788,"name":"uint256","nodeType":"ElementaryTypeName","src":"1147:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":791,"mutability":"mutable","name":"userData","nameLocation":"1186:8:10","nodeType":"VariableDeclaration","scope":796,"src":"1171:23:10","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":790,"name":"bytes","nodeType":"ElementaryTypeName","src":"1171:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":793,"mutability":"mutable","name":"operatorData","nameLocation":"1219:12:10","nodeType":"VariableDeclaration","scope":796,"src":"1204:27:10","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":792,"name":"bytes","nodeType":"ElementaryTypeName","src":"1204:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1069:168:10"},"returnParameters":{"id":795,"nodeType":"ParameterList","parameters":[],"src":"1246:0:10"},"scope":797,"src":"1046:201:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":798,"src":"534:715:10","usedErrors":[]}],"src":"102:1148:10"},"id":10},"@openzeppelin/contracts/utils/Address.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","exportedSymbols":{"Address":[1127]},"id":1128,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":799,"literals":["solidity","^","0.8",".1"],"nodeType":"PragmaDirective","src":"101:23:11"},{"abstract":false,"baseContracts":[],"canonicalName":"Address","contractDependencies":[],"contractKind":"library","documentation":{"id":800,"nodeType":"StructuredDocumentation","src":"126:67:11","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":1127,"linearizedBaseContracts":[1127],"name":"Address","nameLocation":"202:7:11","nodeType":"ContractDefinition","nodes":[{"body":{"id":814,"nodeType":"Block","src":"1478:254:11","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":808,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":803,"src":"1702:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1710:4:11","memberName":"code","nodeType":"MemberAccess","src":"1702:12:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1715:6:11","memberName":"length","nodeType":"MemberAccess","src":"1702:19:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":811,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1724:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1702:23:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":807,"id":813,"nodeType":"Return","src":"1695:30:11"}]},"documentation":{"id":801,"nodeType":"StructuredDocumentation","src":"216:1191:11","text":" @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n Furthermore, `isContract` will also return true if the target contract within\n the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n which only has an effect at the end of a transaction.\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="},"id":815,"implemented":true,"kind":"function","modifiers":[],"name":"isContract","nameLocation":"1421:10:11","nodeType":"FunctionDefinition","parameters":{"id":804,"nodeType":"ParameterList","parameters":[{"constant":false,"id":803,"mutability":"mutable","name":"account","nameLocation":"1440:7:11","nodeType":"VariableDeclaration","scope":815,"src":"1432:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":802,"name":"address","nodeType":"ElementaryTypeName","src":"1432:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1431:17:11"},"returnParameters":{"id":807,"nodeType":"ParameterList","parameters":[{"constant":false,"id":806,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":815,"src":"1472:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":805,"name":"bool","nodeType":"ElementaryTypeName","src":"1472:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1471:6:11"},"scope":1127,"src":"1412:320:11","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":848,"nodeType":"Block","src":"2718:241:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":826,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2744:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$1127","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$1127","typeString":"library Address"}],"id":825,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2736:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":824,"name":"address","nodeType":"ElementaryTypeName","src":"2736:7:11","typeDescriptions":{}}},"id":827,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2736:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2750:7:11","memberName":"balance","nodeType":"MemberAccess","src":"2736:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":829,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":820,"src":"2761:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2736:31:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e6365","id":831,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2769:31:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""},"value":"Address: insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""}],"id":823,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2728:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":832,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2728:73:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":833,"nodeType":"ExpressionStatement","src":"2728:73:11"},{"assignments":[835,null],"declarations":[{"constant":false,"id":835,"mutability":"mutable","name":"success","nameLocation":"2818:7:11","nodeType":"VariableDeclaration","scope":848,"src":"2813:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":834,"name":"bool","nodeType":"ElementaryTypeName","src":"2813:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":842,"initialValue":{"arguments":[{"hexValue":"","id":840,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2861:2:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":836,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":818,"src":"2831:9:11","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2841:4:11","memberName":"call","nodeType":"MemberAccess","src":"2831:14:11","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":838,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":820,"src":"2853:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2831:29:11","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":841,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2831:33:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2812:52:11"},{"expression":{"arguments":[{"id":844,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":835,"src":"2882:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564","id":845,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2891:60:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""},"value":"Address: unable to send value, recipient may have reverted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""}],"id":843,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2874:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":846,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2874:78:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":847,"nodeType":"ExpressionStatement","src":"2874:78:11"}]},"documentation":{"id":816,"nodeType":"StructuredDocumentation","src":"1738:904:11","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":849,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"2656:9:11","nodeType":"FunctionDefinition","parameters":{"id":821,"nodeType":"ParameterList","parameters":[{"constant":false,"id":818,"mutability":"mutable","name":"recipient","nameLocation":"2682:9:11","nodeType":"VariableDeclaration","scope":849,"src":"2666:25:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":817,"name":"address","nodeType":"ElementaryTypeName","src":"2666:15:11","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":820,"mutability":"mutable","name":"amount","nameLocation":"2701:6:11","nodeType":"VariableDeclaration","scope":849,"src":"2693:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":819,"name":"uint256","nodeType":"ElementaryTypeName","src":"2693:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2665:43:11"},"returnParameters":{"id":822,"nodeType":"ParameterList","parameters":[],"src":"2718:0:11"},"scope":1127,"src":"2647:312:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":866,"nodeType":"Block","src":"3790:96:11","statements":[{"expression":{"arguments":[{"id":860,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":852,"src":"3829:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":861,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":854,"src":"3837:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":862,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3843:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564","id":863,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3846:32:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""},"value":"Address: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""}],"id":859,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[907,951],"referencedDeclaration":951,"src":"3807:21:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":864,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3807:72:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":858,"id":865,"nodeType":"Return","src":"3800:79:11"}]},"documentation":{"id":850,"nodeType":"StructuredDocumentation","src":"2965:731:11","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"},"id":867,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3710:12:11","nodeType":"FunctionDefinition","parameters":{"id":855,"nodeType":"ParameterList","parameters":[{"constant":false,"id":852,"mutability":"mutable","name":"target","nameLocation":"3731:6:11","nodeType":"VariableDeclaration","scope":867,"src":"3723:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":851,"name":"address","nodeType":"ElementaryTypeName","src":"3723:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":854,"mutability":"mutable","name":"data","nameLocation":"3752:4:11","nodeType":"VariableDeclaration","scope":867,"src":"3739:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":853,"name":"bytes","nodeType":"ElementaryTypeName","src":"3739:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3722:35:11"},"returnParameters":{"id":858,"nodeType":"ParameterList","parameters":[{"constant":false,"id":857,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":867,"src":"3776:12:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":856,"name":"bytes","nodeType":"ElementaryTypeName","src":"3776:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3775:14:11"},"scope":1127,"src":"3701:185:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":886,"nodeType":"Block","src":"4255:76:11","statements":[{"expression":{"arguments":[{"id":880,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":870,"src":"4294:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":881,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":872,"src":"4302:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":882,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4308:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":883,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":874,"src":"4311:12:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":879,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[907,951],"referencedDeclaration":951,"src":"4272:21:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":884,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4272:52:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":878,"id":885,"nodeType":"Return","src":"4265:59:11"}]},"documentation":{"id":868,"nodeType":"StructuredDocumentation","src":"3892:211:11","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":887,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"4117:12:11","nodeType":"FunctionDefinition","parameters":{"id":875,"nodeType":"ParameterList","parameters":[{"constant":false,"id":870,"mutability":"mutable","name":"target","nameLocation":"4147:6:11","nodeType":"VariableDeclaration","scope":887,"src":"4139:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":869,"name":"address","nodeType":"ElementaryTypeName","src":"4139:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":872,"mutability":"mutable","name":"data","nameLocation":"4176:4:11","nodeType":"VariableDeclaration","scope":887,"src":"4163:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":871,"name":"bytes","nodeType":"ElementaryTypeName","src":"4163:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":874,"mutability":"mutable","name":"errorMessage","nameLocation":"4204:12:11","nodeType":"VariableDeclaration","scope":887,"src":"4190:26:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":873,"name":"string","nodeType":"ElementaryTypeName","src":"4190:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4129:93:11"},"returnParameters":{"id":878,"nodeType":"ParameterList","parameters":[{"constant":false,"id":877,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":887,"src":"4241:12:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":876,"name":"bytes","nodeType":"ElementaryTypeName","src":"4241:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4240:14:11"},"scope":1127,"src":"4108:223:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":906,"nodeType":"Block","src":"4806:111:11","statements":[{"expression":{"arguments":[{"id":900,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":890,"src":"4845:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":901,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":892,"src":"4853:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":902,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":894,"src":"4859:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564","id":903,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4866:43:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""},"value":"Address: low-level call with value failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""}],"id":899,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[907,951],"referencedDeclaration":951,"src":"4823:21:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":904,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4823:87:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":898,"id":905,"nodeType":"Return","src":"4816:94:11"}]},"documentation":{"id":888,"nodeType":"StructuredDocumentation","src":"4337:351:11","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"},"id":907,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4702:21:11","nodeType":"FunctionDefinition","parameters":{"id":895,"nodeType":"ParameterList","parameters":[{"constant":false,"id":890,"mutability":"mutable","name":"target","nameLocation":"4732:6:11","nodeType":"VariableDeclaration","scope":907,"src":"4724:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":889,"name":"address","nodeType":"ElementaryTypeName","src":"4724:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":892,"mutability":"mutable","name":"data","nameLocation":"4753:4:11","nodeType":"VariableDeclaration","scope":907,"src":"4740:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":891,"name":"bytes","nodeType":"ElementaryTypeName","src":"4740:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":894,"mutability":"mutable","name":"value","nameLocation":"4767:5:11","nodeType":"VariableDeclaration","scope":907,"src":"4759:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":893,"name":"uint256","nodeType":"ElementaryTypeName","src":"4759:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4723:50:11"},"returnParameters":{"id":898,"nodeType":"ParameterList","parameters":[{"constant":false,"id":897,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":907,"src":"4792:12:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":896,"name":"bytes","nodeType":"ElementaryTypeName","src":"4792:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4791:14:11"},"scope":1127,"src":"4693:224:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":950,"nodeType":"Block","src":"5344:267:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":924,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5370:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$1127","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$1127","typeString":"library Address"}],"id":923,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5362:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":922,"name":"address","nodeType":"ElementaryTypeName","src":"5362:7:11","typeDescriptions":{}}},"id":925,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5362:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5376:7:11","memberName":"balance","nodeType":"MemberAccess","src":"5362:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":927,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":914,"src":"5387:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5362:30:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c","id":929,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5394:40:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""},"value":"Address: insufficient balance for call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""}],"id":921,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5354:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":930,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5354:81:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":931,"nodeType":"ExpressionStatement","src":"5354:81:11"},{"assignments":[933,935],"declarations":[{"constant":false,"id":933,"mutability":"mutable","name":"success","nameLocation":"5451:7:11","nodeType":"VariableDeclaration","scope":950,"src":"5446:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":932,"name":"bool","nodeType":"ElementaryTypeName","src":"5446:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":935,"mutability":"mutable","name":"returndata","nameLocation":"5473:10:11","nodeType":"VariableDeclaration","scope":950,"src":"5460:23:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":934,"name":"bytes","nodeType":"ElementaryTypeName","src":"5460:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":942,"initialValue":{"arguments":[{"id":940,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":912,"src":"5513:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":936,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":910,"src":"5487:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5494:4:11","memberName":"call","nodeType":"MemberAccess","src":"5487:11:11","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":938,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":914,"src":"5506:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5487:25:11","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":941,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5487:31:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5445:73:11"},{"expression":{"arguments":[{"id":944,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":910,"src":"5562:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":945,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":933,"src":"5570:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":946,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":935,"src":"5579:10:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":947,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":916,"src":"5591:12:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":943,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1082,"src":"5535:26:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":948,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5535:69:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":920,"id":949,"nodeType":"Return","src":"5528:76:11"}]},"documentation":{"id":908,"nodeType":"StructuredDocumentation","src":"4923:237:11","text":" @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":951,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"5174:21:11","nodeType":"FunctionDefinition","parameters":{"id":917,"nodeType":"ParameterList","parameters":[{"constant":false,"id":910,"mutability":"mutable","name":"target","nameLocation":"5213:6:11","nodeType":"VariableDeclaration","scope":951,"src":"5205:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":909,"name":"address","nodeType":"ElementaryTypeName","src":"5205:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":912,"mutability":"mutable","name":"data","nameLocation":"5242:4:11","nodeType":"VariableDeclaration","scope":951,"src":"5229:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":911,"name":"bytes","nodeType":"ElementaryTypeName","src":"5229:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":914,"mutability":"mutable","name":"value","nameLocation":"5264:5:11","nodeType":"VariableDeclaration","scope":951,"src":"5256:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":913,"name":"uint256","nodeType":"ElementaryTypeName","src":"5256:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":916,"mutability":"mutable","name":"errorMessage","nameLocation":"5293:12:11","nodeType":"VariableDeclaration","scope":951,"src":"5279:26:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":915,"name":"string","nodeType":"ElementaryTypeName","src":"5279:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5195:116:11"},"returnParameters":{"id":920,"nodeType":"ParameterList","parameters":[{"constant":false,"id":919,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":951,"src":"5330:12:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":918,"name":"bytes","nodeType":"ElementaryTypeName","src":"5330:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5329:14:11"},"scope":1127,"src":"5165:446:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":967,"nodeType":"Block","src":"5888:97:11","statements":[{"expression":{"arguments":[{"id":962,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":954,"src":"5924:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":963,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":956,"src":"5932:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564","id":964,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5938:39:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""},"value":"Address: low-level static call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""}],"id":961,"name":"functionStaticCall","nodeType":"Identifier","overloadedDeclarations":[968,997],"referencedDeclaration":997,"src":"5905:18:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) view returns (bytes memory)"}},"id":965,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5905:73:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":960,"id":966,"nodeType":"Return","src":"5898:80:11"}]},"documentation":{"id":952,"nodeType":"StructuredDocumentation","src":"5617:166:11","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":968,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5797:18:11","nodeType":"FunctionDefinition","parameters":{"id":957,"nodeType":"ParameterList","parameters":[{"constant":false,"id":954,"mutability":"mutable","name":"target","nameLocation":"5824:6:11","nodeType":"VariableDeclaration","scope":968,"src":"5816:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":953,"name":"address","nodeType":"ElementaryTypeName","src":"5816:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":956,"mutability":"mutable","name":"data","nameLocation":"5845:4:11","nodeType":"VariableDeclaration","scope":968,"src":"5832:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":955,"name":"bytes","nodeType":"ElementaryTypeName","src":"5832:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5815:35:11"},"returnParameters":{"id":960,"nodeType":"ParameterList","parameters":[{"constant":false,"id":959,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":968,"src":"5874:12:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":958,"name":"bytes","nodeType":"ElementaryTypeName","src":"5874:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5873:14:11"},"scope":1127,"src":"5788:197:11","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":996,"nodeType":"Block","src":"6327:168:11","statements":[{"assignments":[981,983],"declarations":[{"constant":false,"id":981,"mutability":"mutable","name":"success","nameLocation":"6343:7:11","nodeType":"VariableDeclaration","scope":996,"src":"6338:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":980,"name":"bool","nodeType":"ElementaryTypeName","src":"6338:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":983,"mutability":"mutable","name":"returndata","nameLocation":"6365:10:11","nodeType":"VariableDeclaration","scope":996,"src":"6352:23:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":982,"name":"bytes","nodeType":"ElementaryTypeName","src":"6352:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":988,"initialValue":{"arguments":[{"id":986,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":973,"src":"6397:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":984,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":971,"src":"6379:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6386:10:11","memberName":"staticcall","nodeType":"MemberAccess","src":"6379:17:11","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":987,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6379:23:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6337:65:11"},{"expression":{"arguments":[{"id":990,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":971,"src":"6446:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":991,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":981,"src":"6454:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":992,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":983,"src":"6463:10:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":993,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":975,"src":"6475:12:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":989,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1082,"src":"6419:26:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":994,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6419:69:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":979,"id":995,"nodeType":"Return","src":"6412:76:11"}]},"documentation":{"id":969,"nodeType":"StructuredDocumentation","src":"5991:173:11","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":997,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"6178:18:11","nodeType":"FunctionDefinition","parameters":{"id":976,"nodeType":"ParameterList","parameters":[{"constant":false,"id":971,"mutability":"mutable","name":"target","nameLocation":"6214:6:11","nodeType":"VariableDeclaration","scope":997,"src":"6206:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":970,"name":"address","nodeType":"ElementaryTypeName","src":"6206:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":973,"mutability":"mutable","name":"data","nameLocation":"6243:4:11","nodeType":"VariableDeclaration","scope":997,"src":"6230:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":972,"name":"bytes","nodeType":"ElementaryTypeName","src":"6230:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":975,"mutability":"mutable","name":"errorMessage","nameLocation":"6271:12:11","nodeType":"VariableDeclaration","scope":997,"src":"6257:26:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":974,"name":"string","nodeType":"ElementaryTypeName","src":"6257:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6196:93:11"},"returnParameters":{"id":979,"nodeType":"ParameterList","parameters":[{"constant":false,"id":978,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":997,"src":"6313:12:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":977,"name":"bytes","nodeType":"ElementaryTypeName","src":"6313:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6312:14:11"},"scope":1127,"src":"6169:326:11","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1013,"nodeType":"Block","src":"6771:101:11","statements":[{"expression":{"arguments":[{"id":1008,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1000,"src":"6809:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1009,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1002,"src":"6817:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564","id":1010,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6823:41:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""},"value":"Address: low-level delegate call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""}],"id":1007,"name":"functionDelegateCall","nodeType":"Identifier","overloadedDeclarations":[1014,1043],"referencedDeclaration":1043,"src":"6788:20:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":1011,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6788:77:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1006,"id":1012,"nodeType":"Return","src":"6781:84:11"}]},"documentation":{"id":998,"nodeType":"StructuredDocumentation","src":"6501:168:11","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":1014,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6683:20:11","nodeType":"FunctionDefinition","parameters":{"id":1003,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1000,"mutability":"mutable","name":"target","nameLocation":"6712:6:11","nodeType":"VariableDeclaration","scope":1014,"src":"6704:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":999,"name":"address","nodeType":"ElementaryTypeName","src":"6704:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1002,"mutability":"mutable","name":"data","nameLocation":"6733:4:11","nodeType":"VariableDeclaration","scope":1014,"src":"6720:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1001,"name":"bytes","nodeType":"ElementaryTypeName","src":"6720:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6703:35:11"},"returnParameters":{"id":1006,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1005,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1014,"src":"6757:12:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1004,"name":"bytes","nodeType":"ElementaryTypeName","src":"6757:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6756:14:11"},"scope":1127,"src":"6674:198:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1042,"nodeType":"Block","src":"7213:170:11","statements":[{"assignments":[1027,1029],"declarations":[{"constant":false,"id":1027,"mutability":"mutable","name":"success","nameLocation":"7229:7:11","nodeType":"VariableDeclaration","scope":1042,"src":"7224:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1026,"name":"bool","nodeType":"ElementaryTypeName","src":"7224:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1029,"mutability":"mutable","name":"returndata","nameLocation":"7251:10:11","nodeType":"VariableDeclaration","scope":1042,"src":"7238:23:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1028,"name":"bytes","nodeType":"ElementaryTypeName","src":"7238:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1034,"initialValue":{"arguments":[{"id":1032,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1019,"src":"7285:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1030,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1017,"src":"7265:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7272:12:11","memberName":"delegatecall","nodeType":"MemberAccess","src":"7265:19:11","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":1033,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7265:25:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"7223:67:11"},{"expression":{"arguments":[{"id":1036,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1017,"src":"7334:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1037,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1027,"src":"7342:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1038,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1029,"src":"7351:10:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1039,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1021,"src":"7363:12:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1035,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1082,"src":"7307:26:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":1040,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7307:69:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1025,"id":1041,"nodeType":"Return","src":"7300:76:11"}]},"documentation":{"id":1015,"nodeType":"StructuredDocumentation","src":"6878:175:11","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":1043,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"7067:20:11","nodeType":"FunctionDefinition","parameters":{"id":1022,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1017,"mutability":"mutable","name":"target","nameLocation":"7105:6:11","nodeType":"VariableDeclaration","scope":1043,"src":"7097:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1016,"name":"address","nodeType":"ElementaryTypeName","src":"7097:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1019,"mutability":"mutable","name":"data","nameLocation":"7134:4:11","nodeType":"VariableDeclaration","scope":1043,"src":"7121:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1018,"name":"bytes","nodeType":"ElementaryTypeName","src":"7121:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1021,"mutability":"mutable","name":"errorMessage","nameLocation":"7162:12:11","nodeType":"VariableDeclaration","scope":1043,"src":"7148:26:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1020,"name":"string","nodeType":"ElementaryTypeName","src":"7148:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7087:93:11"},"returnParameters":{"id":1025,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1024,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1043,"src":"7199:12:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1023,"name":"bytes","nodeType":"ElementaryTypeName","src":"7199:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7198:14:11"},"scope":1127,"src":"7058:325:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1081,"nodeType":"Block","src":"7865:434:11","statements":[{"condition":{"id":1057,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1048,"src":"7879:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1079,"nodeType":"Block","src":"8235:58:11","statements":[{"expression":{"arguments":[{"id":1075,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1050,"src":"8257:10:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1076,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1052,"src":"8269:12:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1074,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1126,"src":"8249:7:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":1077,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8249:33:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1078,"nodeType":"ExpressionStatement","src":"8249:33:11"}]},"id":1080,"nodeType":"IfStatement","src":"7875:418:11","trueBody":{"id":1073,"nodeType":"Block","src":"7888:341:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1058,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1050,"src":"7906:10:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7917:6:11","memberName":"length","nodeType":"MemberAccess","src":"7906:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1060,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7927:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7906:22:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1070,"nodeType":"IfStatement","src":"7902:286:11","trueBody":{"id":1069,"nodeType":"Block","src":"7930:258:11","statements":[{"expression":{"arguments":[{"arguments":[{"id":1064,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1046,"src":"8132:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1063,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":815,"src":"8121:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":1065,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8121:18:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","id":1066,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8141:31:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""},"value":"Address: call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""}],"id":1062,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8113:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1067,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8113:60:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1068,"nodeType":"ExpressionStatement","src":"8113:60:11"}]}},{"expression":{"id":1071,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1050,"src":"8208:10:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1056,"id":1072,"nodeType":"Return","src":"8201:17:11"}]}}]},"documentation":{"id":1044,"nodeType":"StructuredDocumentation","src":"7389:277:11","text":" @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"},"id":1082,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nameLocation":"7680:26:11","nodeType":"FunctionDefinition","parameters":{"id":1053,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1046,"mutability":"mutable","name":"target","nameLocation":"7724:6:11","nodeType":"VariableDeclaration","scope":1082,"src":"7716:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1045,"name":"address","nodeType":"ElementaryTypeName","src":"7716:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1048,"mutability":"mutable","name":"success","nameLocation":"7745:7:11","nodeType":"VariableDeclaration","scope":1082,"src":"7740:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1047,"name":"bool","nodeType":"ElementaryTypeName","src":"7740:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1050,"mutability":"mutable","name":"returndata","nameLocation":"7775:10:11","nodeType":"VariableDeclaration","scope":1082,"src":"7762:23:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1049,"name":"bytes","nodeType":"ElementaryTypeName","src":"7762:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1052,"mutability":"mutable","name":"errorMessage","nameLocation":"7809:12:11","nodeType":"VariableDeclaration","scope":1082,"src":"7795:26:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1051,"name":"string","nodeType":"ElementaryTypeName","src":"7795:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7706:121:11"},"returnParameters":{"id":1056,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1055,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1082,"src":"7851:12:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1054,"name":"bytes","nodeType":"ElementaryTypeName","src":"7851:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7850:14:11"},"scope":1127,"src":"7671:628:11","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1105,"nodeType":"Block","src":"8680:135:11","statements":[{"condition":{"id":1094,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1085,"src":"8694:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1103,"nodeType":"Block","src":"8751:58:11","statements":[{"expression":{"arguments":[{"id":1099,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1087,"src":"8773:10:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1100,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1089,"src":"8785:12:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1098,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1126,"src":"8765:7:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":1101,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8765:33:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1102,"nodeType":"ExpressionStatement","src":"8765:33:11"}]},"id":1104,"nodeType":"IfStatement","src":"8690:119:11","trueBody":{"id":1097,"nodeType":"Block","src":"8703:42:11","statements":[{"expression":{"id":1095,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1087,"src":"8724:10:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1093,"id":1096,"nodeType":"Return","src":"8717:17:11"}]}}]},"documentation":{"id":1083,"nodeType":"StructuredDocumentation","src":"8305:210:11","text":" @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"},"id":1106,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"8529:16:11","nodeType":"FunctionDefinition","parameters":{"id":1090,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1085,"mutability":"mutable","name":"success","nameLocation":"8560:7:11","nodeType":"VariableDeclaration","scope":1106,"src":"8555:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1084,"name":"bool","nodeType":"ElementaryTypeName","src":"8555:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1087,"mutability":"mutable","name":"returndata","nameLocation":"8590:10:11","nodeType":"VariableDeclaration","scope":1106,"src":"8577:23:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1086,"name":"bytes","nodeType":"ElementaryTypeName","src":"8577:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1089,"mutability":"mutable","name":"errorMessage","nameLocation":"8624:12:11","nodeType":"VariableDeclaration","scope":1106,"src":"8610:26:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1088,"name":"string","nodeType":"ElementaryTypeName","src":"8610:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8545:97:11"},"returnParameters":{"id":1093,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1092,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1106,"src":"8666:12:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1091,"name":"bytes","nodeType":"ElementaryTypeName","src":"8666:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8665:14:11"},"scope":1127,"src":"8520:295:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1125,"nodeType":"Block","src":"8904:457:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1113,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1108,"src":"8980:10:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8991:6:11","memberName":"length","nodeType":"MemberAccess","src":"8980:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9000:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8980:21:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1123,"nodeType":"Block","src":"9310:45:11","statements":[{"expression":{"arguments":[{"id":1120,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1110,"src":"9331:12:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1119,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"9324:6:11","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1121,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9324:20:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1122,"nodeType":"ExpressionStatement","src":"9324:20:11"}]},"id":1124,"nodeType":"IfStatement","src":"8976:379:11","trueBody":{"id":1118,"nodeType":"Block","src":"9003:301:11","statements":[{"AST":{"nodeType":"YulBlock","src":"9161:133:11","statements":[{"nodeType":"YulVariableDeclaration","src":"9179:40:11","value":{"arguments":[{"name":"returndata","nodeType":"YulIdentifier","src":"9208:10:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9202:5:11"},"nodeType":"YulFunctionCall","src":"9202:17:11"},"variables":[{"name":"returndata_size","nodeType":"YulTypedName","src":"9183:15:11","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9247:2:11","type":"","value":"32"},{"name":"returndata","nodeType":"YulIdentifier","src":"9251:10:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9243:3:11"},"nodeType":"YulFunctionCall","src":"9243:19:11"},{"name":"returndata_size","nodeType":"YulIdentifier","src":"9264:15:11"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9236:6:11"},"nodeType":"YulFunctionCall","src":"9236:44:11"},"nodeType":"YulExpressionStatement","src":"9236:44:11"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1108,"isOffset":false,"isSlot":false,"src":"9208:10:11","valueSize":1},{"declaration":1108,"isOffset":false,"isSlot":false,"src":"9251:10:11","valueSize":1}],"id":1117,"nodeType":"InlineAssembly","src":"9152:142:11"}]}}]},"id":1126,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"8830:7:11","nodeType":"FunctionDefinition","parameters":{"id":1111,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1108,"mutability":"mutable","name":"returndata","nameLocation":"8851:10:11","nodeType":"VariableDeclaration","scope":1126,"src":"8838:23:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1107,"name":"bytes","nodeType":"ElementaryTypeName","src":"8838:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1110,"mutability":"mutable","name":"errorMessage","nameLocation":"8877:12:11","nodeType":"VariableDeclaration","scope":1126,"src":"8863:26:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1109,"name":"string","nodeType":"ElementaryTypeName","src":"8863:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8837:53:11"},"returnParameters":{"id":1112,"nodeType":"ParameterList","parameters":[],"src":"8904:0:11"},"scope":1127,"src":"8821:540:11","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":1128,"src":"194:9169:11","usedErrors":[]}],"src":"101:9263:11"},"id":11},"@openzeppelin/contracts/utils/Counters.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Counters.sol","exportedSymbols":{"Counters":[1201]},"id":1202,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1129,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"87:23:12"},{"abstract":false,"baseContracts":[],"canonicalName":"Counters","contractDependencies":[],"contractKind":"library","documentation":{"id":1130,"nodeType":"StructuredDocumentation","src":"112:311:12","text":" @title Counters\n @author Matt Condon (@shrugs)\n @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n of elements in a mapping, issuing ERC721 ids, or counting request ids.\n Include with `using Counters for Counters.Counter;`"},"fullyImplemented":true,"id":1201,"linearizedBaseContracts":[1201],"name":"Counters","nameLocation":"432:8:12","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Counters.Counter","id":1133,"members":[{"constant":false,"id":1132,"mutability":"mutable","name":"_value","nameLocation":"794:6:12","nodeType":"VariableDeclaration","scope":1133,"src":"786:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1131,"name":"uint256","nodeType":"ElementaryTypeName","src":"786:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Counter","nameLocation":"454:7:12","nodeType":"StructDefinition","scope":1201,"src":"447:374:12","visibility":"public"},{"body":{"id":1144,"nodeType":"Block","src":"901:38:12","statements":[{"expression":{"expression":{"id":1141,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1136,"src":"918:7:12","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1133_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":1142,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"926:6:12","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":1132,"src":"918:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1140,"id":1143,"nodeType":"Return","src":"911:21:12"}]},"id":1145,"implemented":true,"kind":"function","modifiers":[],"name":"current","nameLocation":"836:7:12","nodeType":"FunctionDefinition","parameters":{"id":1137,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1136,"mutability":"mutable","name":"counter","nameLocation":"860:7:12","nodeType":"VariableDeclaration","scope":1145,"src":"844:23:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1133_storage_ptr","typeString":"struct Counters.Counter"},"typeName":{"id":1135,"nodeType":"UserDefinedTypeName","pathNode":{"id":1134,"name":"Counter","nameLocations":["844:7:12"],"nodeType":"IdentifierPath","referencedDeclaration":1133,"src":"844:7:12"},"referencedDeclaration":1133,"src":"844:7:12","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1133_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"internal"}],"src":"843:25:12"},"returnParameters":{"id":1140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1139,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1145,"src":"892:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1138,"name":"uint256","nodeType":"ElementaryTypeName","src":"892:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"891:9:12"},"scope":1201,"src":"827:112:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1158,"nodeType":"Block","src":"998:70:12","statements":[{"id":1157,"nodeType":"UncheckedBlock","src":"1008:54:12","statements":[{"expression":{"id":1155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1151,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1148,"src":"1032:7:12","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1133_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":1153,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1040:6:12","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":1132,"src":"1032:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1154,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1050:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1032:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1156,"nodeType":"ExpressionStatement","src":"1032:19:12"}]}]},"id":1159,"implemented":true,"kind":"function","modifiers":[],"name":"increment","nameLocation":"954:9:12","nodeType":"FunctionDefinition","parameters":{"id":1149,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1148,"mutability":"mutable","name":"counter","nameLocation":"980:7:12","nodeType":"VariableDeclaration","scope":1159,"src":"964:23:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1133_storage_ptr","typeString":"struct Counters.Counter"},"typeName":{"id":1147,"nodeType":"UserDefinedTypeName","pathNode":{"id":1146,"name":"Counter","nameLocations":["964:7:12"],"nodeType":"IdentifierPath","referencedDeclaration":1133,"src":"964:7:12"},"referencedDeclaration":1133,"src":"964:7:12","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1133_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"internal"}],"src":"963:25:12"},"returnParameters":{"id":1150,"nodeType":"ParameterList","parameters":[],"src":"998:0:12"},"scope":1201,"src":"945:123:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1186,"nodeType":"Block","src":"1127:176:12","statements":[{"assignments":[1166],"declarations":[{"constant":false,"id":1166,"mutability":"mutable","name":"value","nameLocation":"1145:5:12","nodeType":"VariableDeclaration","scope":1186,"src":"1137:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1165,"name":"uint256","nodeType":"ElementaryTypeName","src":"1137:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1169,"initialValue":{"expression":{"id":1167,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1162,"src":"1153:7:12","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1133_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":1168,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1161:6:12","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":1132,"src":"1153:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1137:30:12"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1171,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1166,"src":"1185:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1193:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1185:9:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436f756e7465723a2064656372656d656e74206f766572666c6f77","id":1174,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1196:29:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f","typeString":"literal_string \"Counter: decrement overflow\""},"value":"Counter: decrement overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f","typeString":"literal_string \"Counter: decrement overflow\""}],"id":1170,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1177:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1175,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1177:49:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1176,"nodeType":"ExpressionStatement","src":"1177:49:12"},{"id":1185,"nodeType":"UncheckedBlock","src":"1236:61:12","statements":[{"expression":{"id":1183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1177,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1162,"src":"1260:7:12","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1133_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":1179,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1268:6:12","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":1132,"src":"1260:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1180,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1166,"src":"1277:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1181,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1285:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1277:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1260:26:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1184,"nodeType":"ExpressionStatement","src":"1260:26:12"}]}]},"id":1187,"implemented":true,"kind":"function","modifiers":[],"name":"decrement","nameLocation":"1083:9:12","nodeType":"FunctionDefinition","parameters":{"id":1163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1162,"mutability":"mutable","name":"counter","nameLocation":"1109:7:12","nodeType":"VariableDeclaration","scope":1187,"src":"1093:23:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1133_storage_ptr","typeString":"struct Counters.Counter"},"typeName":{"id":1161,"nodeType":"UserDefinedTypeName","pathNode":{"id":1160,"name":"Counter","nameLocations":["1093:7:12"],"nodeType":"IdentifierPath","referencedDeclaration":1133,"src":"1093:7:12"},"referencedDeclaration":1133,"src":"1093:7:12","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1133_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"internal"}],"src":"1092:25:12"},"returnParameters":{"id":1164,"nodeType":"ParameterList","parameters":[],"src":"1127:0:12"},"scope":1201,"src":"1074:229:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1199,"nodeType":"Block","src":"1358:35:12","statements":[{"expression":{"id":1197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1193,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1190,"src":"1368:7:12","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1133_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":1195,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1376:6:12","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":1132,"src":"1368:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":1196,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1385:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1368:18:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1198,"nodeType":"ExpressionStatement","src":"1368:18:12"}]},"id":1200,"implemented":true,"kind":"function","modifiers":[],"name":"reset","nameLocation":"1318:5:12","nodeType":"FunctionDefinition","parameters":{"id":1191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1190,"mutability":"mutable","name":"counter","nameLocation":"1340:7:12","nodeType":"VariableDeclaration","scope":1200,"src":"1324:23:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1133_storage_ptr","typeString":"struct Counters.Counter"},"typeName":{"id":1189,"nodeType":"UserDefinedTypeName","pathNode":{"id":1188,"name":"Counter","nameLocations":["1324:7:12"],"nodeType":"IdentifierPath","referencedDeclaration":1133,"src":"1324:7:12"},"referencedDeclaration":1133,"src":"1324:7:12","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1133_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"internal"}],"src":"1323:25:12"},"returnParameters":{"id":1192,"nodeType":"ParameterList","parameters":[],"src":"1358:0:12"},"scope":1201,"src":"1309:84:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":1202,"src":"424:971:12","usedErrors":[]}],"src":"87:1309:12"},"id":12},"@openzeppelin/contracts/utils/Create2.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Create2.sol","exportedSymbols":{"Create2":[1282]},"id":1283,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1203,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"101:23:13"},{"abstract":false,"baseContracts":[],"canonicalName":"Create2","contractDependencies":[],"contractKind":"library","documentation":{"id":1204,"nodeType":"StructuredDocumentation","src":"126:367:13","text":" @dev Helper to make usage of the `CREATE2` EVM opcode easier and safer.\n `CREATE2` can be used to compute in advance the address where a smart\n contract will be deployed, which allows for interesting new mechanisms known\n as 'counterfactual interactions'.\n See the https://eips.ethereum.org/EIPS/eip-1014#motivation[EIP] for more\n information."},"fullyImplemented":true,"id":1282,"linearizedBaseContracts":[1282],"name":"Create2","nameLocation":"502:7:13","nodeType":"ContractDefinition","nodes":[{"body":{"id":1246,"nodeType":"Block","src":"1182:383:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1219,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1208:4:13","typeDescriptions":{"typeIdentifier":"t_contract$_Create2_$1282","typeString":"library Create2"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Create2_$1282","typeString":"library Create2"}],"id":1218,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1200:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1217,"name":"address","nodeType":"ElementaryTypeName","src":"1200:7:13","typeDescriptions":{}}},"id":1220,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1200:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1214:7:13","memberName":"balance","nodeType":"MemberAccess","src":"1200:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1222,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1207,"src":"1225:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1200:31:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"437265617465323a20696e73756666696369656e742062616c616e6365","id":1224,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1233:31:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_f94f9c62541b73155a9def26a7988ac5579c2c6b698df8f608ced5572b7d72ca","typeString":"literal_string \"Create2: insufficient balance\""},"value":"Create2: insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f94f9c62541b73155a9def26a7988ac5579c2c6b698df8f608ced5572b7d72ca","typeString":"literal_string \"Create2: insufficient balance\""}],"id":1216,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1192:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1225,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1192:73:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1226,"nodeType":"ExpressionStatement","src":"1192:73:13"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1228,"name":"bytecode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1211,"src":"1283:8:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1292:6:13","memberName":"length","nodeType":"MemberAccess","src":"1283:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1230,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1302:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1283:20:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"437265617465323a2062797465636f6465206c656e677468206973207a65726f","id":1232,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1305:34:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_124767115c09b0dd37c31c42ddb030d84459c933a30879cc32c4c922ae5928f0","typeString":"literal_string \"Create2: bytecode length is zero\""},"value":"Create2: bytecode length is zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_124767115c09b0dd37c31c42ddb030d84459c933a30879cc32c4c922ae5928f0","typeString":"literal_string \"Create2: bytecode length is zero\""}],"id":1227,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1275:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1233,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1275:65:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1234,"nodeType":"ExpressionStatement","src":"1275:65:13"},{"AST":{"nodeType":"YulBlock","src":"1402:91:13","statements":[{"nodeType":"YulAssignment","src":"1416:67:13","value":{"arguments":[{"name":"amount","nodeType":"YulIdentifier","src":"1432:6:13"},{"arguments":[{"name":"bytecode","nodeType":"YulIdentifier","src":"1444:8:13"},{"kind":"number","nodeType":"YulLiteral","src":"1454:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1440:3:13"},"nodeType":"YulFunctionCall","src":"1440:19:13"},{"arguments":[{"name":"bytecode","nodeType":"YulIdentifier","src":"1467:8:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1461:5:13"},"nodeType":"YulFunctionCall","src":"1461:15:13"},{"name":"salt","nodeType":"YulIdentifier","src":"1478:4:13"}],"functionName":{"name":"create2","nodeType":"YulIdentifier","src":"1424:7:13"},"nodeType":"YulFunctionCall","src":"1424:59:13"},"variableNames":[{"name":"addr","nodeType":"YulIdentifier","src":"1416:4:13"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1214,"isOffset":false,"isSlot":false,"src":"1416:4:13","valueSize":1},{"declaration":1207,"isOffset":false,"isSlot":false,"src":"1432:6:13","valueSize":1},{"declaration":1211,"isOffset":false,"isSlot":false,"src":"1444:8:13","valueSize":1},{"declaration":1211,"isOffset":false,"isSlot":false,"src":"1467:8:13","valueSize":1},{"declaration":1209,"isOffset":false,"isSlot":false,"src":"1478:4:13","valueSize":1}],"id":1235,"nodeType":"InlineAssembly","src":"1393:100:13"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1237,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1214,"src":"1510:4:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1240,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1526:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1239,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1518:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1238,"name":"address","nodeType":"ElementaryTypeName","src":"1518:7:13","typeDescriptions":{}}},"id":1241,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1518:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1510:18:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"437265617465323a204661696c6564206f6e206465706c6f79","id":1243,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1530:27:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_87142438d464a3cd804331cca8480b31569380ef25d1f39b80404975699f0676","typeString":"literal_string \"Create2: Failed on deploy\""},"value":"Create2: Failed on deploy"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_87142438d464a3cd804331cca8480b31569380ef25d1f39b80404975699f0676","typeString":"literal_string \"Create2: Failed on deploy\""}],"id":1236,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1502:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1244,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1502:56:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1245,"nodeType":"ExpressionStatement","src":"1502:56:13"}]},"documentation":{"id":1205,"nodeType":"StructuredDocumentation","src":"516:560:13","text":" @dev Deploys a contract using `CREATE2`. The address where the contract\n will be deployed can be known in advance via {computeAddress}.\n The bytecode for a contract can be obtained from Solidity with\n `type(contractName).creationCode`.\n Requirements:\n - `bytecode` must not be empty.\n - `salt` must have not been used for `bytecode` already.\n - the factory must have a balance of at least `amount`.\n - if `amount` is non-zero, `bytecode` must have a `payable` constructor."},"id":1247,"implemented":true,"kind":"function","modifiers":[],"name":"deploy","nameLocation":"1090:6:13","nodeType":"FunctionDefinition","parameters":{"id":1212,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1207,"mutability":"mutable","name":"amount","nameLocation":"1105:6:13","nodeType":"VariableDeclaration","scope":1247,"src":"1097:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1206,"name":"uint256","nodeType":"ElementaryTypeName","src":"1097:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1209,"mutability":"mutable","name":"salt","nameLocation":"1121:4:13","nodeType":"VariableDeclaration","scope":1247,"src":"1113:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1208,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1113:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1211,"mutability":"mutable","name":"bytecode","nameLocation":"1140:8:13","nodeType":"VariableDeclaration","scope":1247,"src":"1127:21:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1210,"name":"bytes","nodeType":"ElementaryTypeName","src":"1127:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1096:53:13"},"returnParameters":{"id":1215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1214,"mutability":"mutable","name":"addr","nameLocation":"1176:4:13","nodeType":"VariableDeclaration","scope":1247,"src":"1168:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1213,"name":"address","nodeType":"ElementaryTypeName","src":"1168:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1167:14:13"},"scope":1282,"src":"1081:484:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1266,"nodeType":"Block","src":"1861:73:13","statements":[{"expression":{"arguments":[{"id":1258,"name":"salt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1250,"src":"1893:4:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1259,"name":"bytecodeHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1252,"src":"1899:12:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"id":1262,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1921:4:13","typeDescriptions":{"typeIdentifier":"t_contract$_Create2_$1282","typeString":"library Create2"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Create2_$1282","typeString":"library Create2"}],"id":1261,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1913:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1260,"name":"address","nodeType":"ElementaryTypeName","src":"1913:7:13","typeDescriptions":{}}},"id":1263,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1913:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1257,"name":"computeAddress","nodeType":"Identifier","overloadedDeclarations":[1267,1281],"referencedDeclaration":1281,"src":"1878:14:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_address_$returns$_t_address_$","typeString":"function (bytes32,bytes32,address) pure returns (address)"}},"id":1264,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1878:49:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1256,"id":1265,"nodeType":"Return","src":"1871:56:13"}]},"documentation":{"id":1248,"nodeType":"StructuredDocumentation","src":"1571:193:13","text":" @dev Returns the address where a contract will be stored if deployed via {deploy}. Any change in the\n `bytecodeHash` or `salt` will result in a new destination address."},"id":1267,"implemented":true,"kind":"function","modifiers":[],"name":"computeAddress","nameLocation":"1778:14:13","nodeType":"FunctionDefinition","parameters":{"id":1253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1250,"mutability":"mutable","name":"salt","nameLocation":"1801:4:13","nodeType":"VariableDeclaration","scope":1267,"src":"1793:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1249,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1793:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1252,"mutability":"mutable","name":"bytecodeHash","nameLocation":"1815:12:13","nodeType":"VariableDeclaration","scope":1267,"src":"1807:20:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1251,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1807:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1792:36:13"},"returnParameters":{"id":1256,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1255,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1267,"src":"1852:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1254,"name":"address","nodeType":"ElementaryTypeName","src":"1852:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1851:9:13"},"scope":1282,"src":"1769:165:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1280,"nodeType":"Block","src":"2292:1657:13","statements":[{"AST":{"nodeType":"YulBlock","src":"2354:1589:13","statements":[{"nodeType":"YulVariableDeclaration","src":"2368:22:13","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2385:4:13","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2379:5:13"},"nodeType":"YulFunctionCall","src":"2379:11:13"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"2372:3:13","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3592:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"3597:4:13","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3588:3:13"},"nodeType":"YulFunctionCall","src":"3588:14:13"},{"name":"bytecodeHash","nodeType":"YulIdentifier","src":"3604:12:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3581:6:13"},"nodeType":"YulFunctionCall","src":"3581:36:13"},"nodeType":"YulExpressionStatement","src":"3581:36:13"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3641:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"3646:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3637:3:13"},"nodeType":"YulFunctionCall","src":"3637:14:13"},{"name":"salt","nodeType":"YulIdentifier","src":"3653:4:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3630:6:13"},"nodeType":"YulFunctionCall","src":"3630:28:13"},"nodeType":"YulExpressionStatement","src":"3630:28:13"},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3678:3:13"},{"name":"deployer","nodeType":"YulIdentifier","src":"3683:8:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3671:6:13"},"nodeType":"YulFunctionCall","src":"3671:21:13"},"nodeType":"YulExpressionStatement","src":"3671:21:13"},{"nodeType":"YulVariableDeclaration","src":"3754:27:13","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3771:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"3776:4:13","type":"","value":"0x0b"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3767:3:13"},"nodeType":"YulFunctionCall","src":"3767:14:13"},"variables":[{"name":"start","nodeType":"YulTypedName","src":"3758:5:13","type":""}]},{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"3880:5:13"},{"kind":"number","nodeType":"YulLiteral","src":"3887:4:13","type":"","value":"0xff"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"3872:7:13"},"nodeType":"YulFunctionCall","src":"3872:20:13"},"nodeType":"YulExpressionStatement","src":"3872:20:13"},{"nodeType":"YulAssignment","src":"3905:28:13","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"3923:5:13"},{"kind":"number","nodeType":"YulLiteral","src":"3930:2:13","type":"","value":"85"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3913:9:13"},"nodeType":"YulFunctionCall","src":"3913:20:13"},"variableNames":[{"name":"addr","nodeType":"YulIdentifier","src":"3905:4:13"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1277,"isOffset":false,"isSlot":false,"src":"3905:4:13","valueSize":1},{"declaration":1272,"isOffset":false,"isSlot":false,"src":"3604:12:13","valueSize":1},{"declaration":1274,"isOffset":false,"isSlot":false,"src":"3683:8:13","valueSize":1},{"declaration":1270,"isOffset":false,"isSlot":false,"src":"3653:4:13","valueSize":1}],"id":1279,"nodeType":"InlineAssembly","src":"2345:1598:13"}]},"documentation":{"id":1268,"nodeType":"StructuredDocumentation","src":"1940:232:13","text":" @dev Returns the address where a contract will be stored if deployed via {deploy} from a contract located at\n `deployer`. If `deployer` is this contract's address, returns the same value as {computeAddress}."},"id":1281,"implemented":true,"kind":"function","modifiers":[],"name":"computeAddress","nameLocation":"2186:14:13","nodeType":"FunctionDefinition","parameters":{"id":1275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1270,"mutability":"mutable","name":"salt","nameLocation":"2209:4:13","nodeType":"VariableDeclaration","scope":1281,"src":"2201:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1269,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2201:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1272,"mutability":"mutable","name":"bytecodeHash","nameLocation":"2223:12:13","nodeType":"VariableDeclaration","scope":1281,"src":"2215:20:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1271,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2215:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1274,"mutability":"mutable","name":"deployer","nameLocation":"2245:8:13","nodeType":"VariableDeclaration","scope":1281,"src":"2237:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1273,"name":"address","nodeType":"ElementaryTypeName","src":"2237:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2200:54:13"},"returnParameters":{"id":1278,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1277,"mutability":"mutable","name":"addr","nameLocation":"2286:4:13","nodeType":"VariableDeclaration","scope":1281,"src":"2278:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1276,"name":"address","nodeType":"ElementaryTypeName","src":"2278:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2277:14:13"},"scope":1282,"src":"2177:1772:13","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1283,"src":"494:3457:13","usedErrors":[]}],"src":"101:3851:13"},"id":13},"@openzeppelin/contracts/utils/StorageSlot.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","exportedSymbols":{"StorageSlot":[1392]},"id":1393,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1284,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"193:23:14"},{"abstract":false,"baseContracts":[],"canonicalName":"StorageSlot","contractDependencies":[],"contractKind":"library","documentation":{"id":1285,"nodeType":"StructuredDocumentation","src":"218:1201:14","text":" @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```\n _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._\n _Available since v4.9 for `string`, `bytes`._"},"fullyImplemented":true,"id":1392,"linearizedBaseContracts":[1392],"name":"StorageSlot","nameLocation":"1428:11:14","nodeType":"ContractDefinition","nodes":[{"canonicalName":"StorageSlot.AddressSlot","id":1288,"members":[{"constant":false,"id":1287,"mutability":"mutable","name":"value","nameLocation":"1483:5:14","nodeType":"VariableDeclaration","scope":1288,"src":"1475:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1286,"name":"address","nodeType":"ElementaryTypeName","src":"1475:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"AddressSlot","nameLocation":"1453:11:14","nodeType":"StructDefinition","scope":1392,"src":"1446:49:14","visibility":"public"},{"canonicalName":"StorageSlot.BooleanSlot","id":1291,"members":[{"constant":false,"id":1290,"mutability":"mutable","name":"value","nameLocation":"1535:5:14","nodeType":"VariableDeclaration","scope":1291,"src":"1530:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1289,"name":"bool","nodeType":"ElementaryTypeName","src":"1530:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"BooleanSlot","nameLocation":"1508:11:14","nodeType":"StructDefinition","scope":1392,"src":"1501:46:14","visibility":"public"},{"canonicalName":"StorageSlot.Bytes32Slot","id":1294,"members":[{"constant":false,"id":1293,"mutability":"mutable","name":"value","nameLocation":"1590:5:14","nodeType":"VariableDeclaration","scope":1294,"src":"1582:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1292,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1582:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"Bytes32Slot","nameLocation":"1560:11:14","nodeType":"StructDefinition","scope":1392,"src":"1553:49:14","visibility":"public"},{"canonicalName":"StorageSlot.Uint256Slot","id":1297,"members":[{"constant":false,"id":1296,"mutability":"mutable","name":"value","nameLocation":"1645:5:14","nodeType":"VariableDeclaration","scope":1297,"src":"1637:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1295,"name":"uint256","nodeType":"ElementaryTypeName","src":"1637:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Uint256Slot","nameLocation":"1615:11:14","nodeType":"StructDefinition","scope":1392,"src":"1608:49:14","visibility":"public"},{"canonicalName":"StorageSlot.StringSlot","id":1300,"members":[{"constant":false,"id":1299,"mutability":"mutable","name":"value","nameLocation":"1698:5:14","nodeType":"VariableDeclaration","scope":1300,"src":"1691:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1298,"name":"string","nodeType":"ElementaryTypeName","src":"1691:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"StringSlot","nameLocation":"1670:10:14","nodeType":"StructDefinition","scope":1392,"src":"1663:47:14","visibility":"public"},{"canonicalName":"StorageSlot.BytesSlot","id":1303,"members":[{"constant":false,"id":1302,"mutability":"mutable","name":"value","nameLocation":"1749:5:14","nodeType":"VariableDeclaration","scope":1303,"src":"1743:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":1301,"name":"bytes","nodeType":"ElementaryTypeName","src":"1743:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"BytesSlot","nameLocation":"1723:9:14","nodeType":"StructDefinition","scope":1392,"src":"1716:45:14","visibility":"public"},{"body":{"id":1313,"nodeType":"Block","src":"1943:106:14","statements":[{"AST":{"nodeType":"YulBlock","src":"2005:38:14","statements":[{"nodeType":"YulAssignment","src":"2019:14:14","value":{"name":"slot","nodeType":"YulIdentifier","src":"2029:4:14"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2019:6:14"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1310,"isOffset":false,"isSlot":true,"src":"2019:6:14","suffix":"slot","valueSize":1},{"declaration":1306,"isOffset":false,"isSlot":false,"src":"2029:4:14","valueSize":1}],"id":1312,"nodeType":"InlineAssembly","src":"1996:47:14"}]},"documentation":{"id":1304,"nodeType":"StructuredDocumentation","src":"1767:87:14","text":" @dev Returns an `AddressSlot` with member `value` located at `slot`."},"id":1314,"implemented":true,"kind":"function","modifiers":[],"name":"getAddressSlot","nameLocation":"1868:14:14","nodeType":"FunctionDefinition","parameters":{"id":1307,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1306,"mutability":"mutable","name":"slot","nameLocation":"1891:4:14","nodeType":"VariableDeclaration","scope":1314,"src":"1883:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1305,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1883:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1882:14:14"},"returnParameters":{"id":1311,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1310,"mutability":"mutable","name":"r","nameLocation":"1940:1:14","nodeType":"VariableDeclaration","scope":1314,"src":"1920:21:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1288_storage_ptr","typeString":"struct StorageSlot.AddressSlot"},"typeName":{"id":1309,"nodeType":"UserDefinedTypeName","pathNode":{"id":1308,"name":"AddressSlot","nameLocations":["1920:11:14"],"nodeType":"IdentifierPath","referencedDeclaration":1288,"src":"1920:11:14"},"referencedDeclaration":1288,"src":"1920:11:14","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1288_storage_ptr","typeString":"struct StorageSlot.AddressSlot"}},"visibility":"internal"}],"src":"1919:23:14"},"scope":1392,"src":"1859:190:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1324,"nodeType":"Block","src":"2231:106:14","statements":[{"AST":{"nodeType":"YulBlock","src":"2293:38:14","statements":[{"nodeType":"YulAssignment","src":"2307:14:14","value":{"name":"slot","nodeType":"YulIdentifier","src":"2317:4:14"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2307:6:14"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1321,"isOffset":false,"isSlot":true,"src":"2307:6:14","suffix":"slot","valueSize":1},{"declaration":1317,"isOffset":false,"isSlot":false,"src":"2317:4:14","valueSize":1}],"id":1323,"nodeType":"InlineAssembly","src":"2284:47:14"}]},"documentation":{"id":1315,"nodeType":"StructuredDocumentation","src":"2055:87:14","text":" @dev Returns an `BooleanSlot` with member `value` located at `slot`."},"id":1325,"implemented":true,"kind":"function","modifiers":[],"name":"getBooleanSlot","nameLocation":"2156:14:14","nodeType":"FunctionDefinition","parameters":{"id":1318,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1317,"mutability":"mutable","name":"slot","nameLocation":"2179:4:14","nodeType":"VariableDeclaration","scope":1325,"src":"2171:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1316,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2171:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2170:14:14"},"returnParameters":{"id":1322,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1321,"mutability":"mutable","name":"r","nameLocation":"2228:1:14","nodeType":"VariableDeclaration","scope":1325,"src":"2208:21:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$1291_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"},"typeName":{"id":1320,"nodeType":"UserDefinedTypeName","pathNode":{"id":1319,"name":"BooleanSlot","nameLocations":["2208:11:14"],"nodeType":"IdentifierPath","referencedDeclaration":1291,"src":"2208:11:14"},"referencedDeclaration":1291,"src":"2208:11:14","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$1291_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"}},"visibility":"internal"}],"src":"2207:23:14"},"scope":1392,"src":"2147:190:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1335,"nodeType":"Block","src":"2519:106:14","statements":[{"AST":{"nodeType":"YulBlock","src":"2581:38:14","statements":[{"nodeType":"YulAssignment","src":"2595:14:14","value":{"name":"slot","nodeType":"YulIdentifier","src":"2605:4:14"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2595:6:14"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1332,"isOffset":false,"isSlot":true,"src":"2595:6:14","suffix":"slot","valueSize":1},{"declaration":1328,"isOffset":false,"isSlot":false,"src":"2605:4:14","valueSize":1}],"id":1334,"nodeType":"InlineAssembly","src":"2572:47:14"}]},"documentation":{"id":1326,"nodeType":"StructuredDocumentation","src":"2343:87:14","text":" @dev Returns an `Bytes32Slot` with member `value` located at `slot`."},"id":1336,"implemented":true,"kind":"function","modifiers":[],"name":"getBytes32Slot","nameLocation":"2444:14:14","nodeType":"FunctionDefinition","parameters":{"id":1329,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1328,"mutability":"mutable","name":"slot","nameLocation":"2467:4:14","nodeType":"VariableDeclaration","scope":1336,"src":"2459:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1327,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2459:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2458:14:14"},"returnParameters":{"id":1333,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1332,"mutability":"mutable","name":"r","nameLocation":"2516:1:14","nodeType":"VariableDeclaration","scope":1336,"src":"2496:21:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$1294_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"},"typeName":{"id":1331,"nodeType":"UserDefinedTypeName","pathNode":{"id":1330,"name":"Bytes32Slot","nameLocations":["2496:11:14"],"nodeType":"IdentifierPath","referencedDeclaration":1294,"src":"2496:11:14"},"referencedDeclaration":1294,"src":"2496:11:14","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$1294_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"}},"visibility":"internal"}],"src":"2495:23:14"},"scope":1392,"src":"2435:190:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1346,"nodeType":"Block","src":"2807:106:14","statements":[{"AST":{"nodeType":"YulBlock","src":"2869:38:14","statements":[{"nodeType":"YulAssignment","src":"2883:14:14","value":{"name":"slot","nodeType":"YulIdentifier","src":"2893:4:14"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2883:6:14"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1343,"isOffset":false,"isSlot":true,"src":"2883:6:14","suffix":"slot","valueSize":1},{"declaration":1339,"isOffset":false,"isSlot":false,"src":"2893:4:14","valueSize":1}],"id":1345,"nodeType":"InlineAssembly","src":"2860:47:14"}]},"documentation":{"id":1337,"nodeType":"StructuredDocumentation","src":"2631:87:14","text":" @dev Returns an `Uint256Slot` with member `value` located at `slot`."},"id":1347,"implemented":true,"kind":"function","modifiers":[],"name":"getUint256Slot","nameLocation":"2732:14:14","nodeType":"FunctionDefinition","parameters":{"id":1340,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1339,"mutability":"mutable","name":"slot","nameLocation":"2755:4:14","nodeType":"VariableDeclaration","scope":1347,"src":"2747:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1338,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2747:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2746:14:14"},"returnParameters":{"id":1344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1343,"mutability":"mutable","name":"r","nameLocation":"2804:1:14","nodeType":"VariableDeclaration","scope":1347,"src":"2784:21:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$1297_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"},"typeName":{"id":1342,"nodeType":"UserDefinedTypeName","pathNode":{"id":1341,"name":"Uint256Slot","nameLocations":["2784:11:14"],"nodeType":"IdentifierPath","referencedDeclaration":1297,"src":"2784:11:14"},"referencedDeclaration":1297,"src":"2784:11:14","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$1297_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"}},"visibility":"internal"}],"src":"2783:23:14"},"scope":1392,"src":"2723:190:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1357,"nodeType":"Block","src":"3092:106:14","statements":[{"AST":{"nodeType":"YulBlock","src":"3154:38:14","statements":[{"nodeType":"YulAssignment","src":"3168:14:14","value":{"name":"slot","nodeType":"YulIdentifier","src":"3178:4:14"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3168:6:14"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1354,"isOffset":false,"isSlot":true,"src":"3168:6:14","suffix":"slot","valueSize":1},{"declaration":1350,"isOffset":false,"isSlot":false,"src":"3178:4:14","valueSize":1}],"id":1356,"nodeType":"InlineAssembly","src":"3145:47:14"}]},"documentation":{"id":1348,"nodeType":"StructuredDocumentation","src":"2919:86:14","text":" @dev Returns an `StringSlot` with member `value` located at `slot`."},"id":1358,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3019:13:14","nodeType":"FunctionDefinition","parameters":{"id":1351,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1350,"mutability":"mutable","name":"slot","nameLocation":"3041:4:14","nodeType":"VariableDeclaration","scope":1358,"src":"3033:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1349,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3033:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3032:14:14"},"returnParameters":{"id":1355,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1354,"mutability":"mutable","name":"r","nameLocation":"3089:1:14","nodeType":"VariableDeclaration","scope":1358,"src":"3070:20:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1300_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":1353,"nodeType":"UserDefinedTypeName","pathNode":{"id":1352,"name":"StringSlot","nameLocations":["3070:10:14"],"nodeType":"IdentifierPath","referencedDeclaration":1300,"src":"3070:10:14"},"referencedDeclaration":1300,"src":"3070:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1300_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3069:22:14"},"scope":1392,"src":"3010:188:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1368,"nodeType":"Block","src":"3400:112:14","statements":[{"AST":{"nodeType":"YulBlock","src":"3462:44:14","statements":[{"nodeType":"YulAssignment","src":"3476:20:14","value":{"name":"store.slot","nodeType":"YulIdentifier","src":"3486:10:14"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3476:6:14"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1365,"isOffset":false,"isSlot":true,"src":"3476:6:14","suffix":"slot","valueSize":1},{"declaration":1361,"isOffset":false,"isSlot":true,"src":"3486:10:14","suffix":"slot","valueSize":1}],"id":1367,"nodeType":"InlineAssembly","src":"3453:53:14"}]},"documentation":{"id":1359,"nodeType":"StructuredDocumentation","src":"3204:101:14","text":" @dev Returns an `StringSlot` representation of the string storage pointer `store`."},"id":1369,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3319:13:14","nodeType":"FunctionDefinition","parameters":{"id":1362,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1361,"mutability":"mutable","name":"store","nameLocation":"3348:5:14","nodeType":"VariableDeclaration","scope":1369,"src":"3333:20:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1360,"name":"string","nodeType":"ElementaryTypeName","src":"3333:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3332:22:14"},"returnParameters":{"id":1366,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1365,"mutability":"mutable","name":"r","nameLocation":"3397:1:14","nodeType":"VariableDeclaration","scope":1369,"src":"3378:20:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1300_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":1364,"nodeType":"UserDefinedTypeName","pathNode":{"id":1363,"name":"StringSlot","nameLocations":["3378:10:14"],"nodeType":"IdentifierPath","referencedDeclaration":1300,"src":"3378:10:14"},"referencedDeclaration":1300,"src":"3378:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1300_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3377:22:14"},"scope":1392,"src":"3310:202:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1379,"nodeType":"Block","src":"3688:106:14","statements":[{"AST":{"nodeType":"YulBlock","src":"3750:38:14","statements":[{"nodeType":"YulAssignment","src":"3764:14:14","value":{"name":"slot","nodeType":"YulIdentifier","src":"3774:4:14"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3764:6:14"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1376,"isOffset":false,"isSlot":true,"src":"3764:6:14","suffix":"slot","valueSize":1},{"declaration":1372,"isOffset":false,"isSlot":false,"src":"3774:4:14","valueSize":1}],"id":1378,"nodeType":"InlineAssembly","src":"3741:47:14"}]},"documentation":{"id":1370,"nodeType":"StructuredDocumentation","src":"3518:85:14","text":" @dev Returns an `BytesSlot` with member `value` located at `slot`."},"id":1380,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3617:12:14","nodeType":"FunctionDefinition","parameters":{"id":1373,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1372,"mutability":"mutable","name":"slot","nameLocation":"3638:4:14","nodeType":"VariableDeclaration","scope":1380,"src":"3630:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1371,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3630:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3629:14:14"},"returnParameters":{"id":1377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1376,"mutability":"mutable","name":"r","nameLocation":"3685:1:14","nodeType":"VariableDeclaration","scope":1380,"src":"3667:19:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1303_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":1375,"nodeType":"UserDefinedTypeName","pathNode":{"id":1374,"name":"BytesSlot","nameLocations":["3667:9:14"],"nodeType":"IdentifierPath","referencedDeclaration":1303,"src":"3667:9:14"},"referencedDeclaration":1303,"src":"3667:9:14","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1303_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3666:21:14"},"scope":1392,"src":"3608:186:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1390,"nodeType":"Block","src":"3991:112:14","statements":[{"AST":{"nodeType":"YulBlock","src":"4053:44:14","statements":[{"nodeType":"YulAssignment","src":"4067:20:14","value":{"name":"store.slot","nodeType":"YulIdentifier","src":"4077:10:14"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"4067:6:14"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1387,"isOffset":false,"isSlot":true,"src":"4067:6:14","suffix":"slot","valueSize":1},{"declaration":1383,"isOffset":false,"isSlot":true,"src":"4077:10:14","suffix":"slot","valueSize":1}],"id":1389,"nodeType":"InlineAssembly","src":"4044:53:14"}]},"documentation":{"id":1381,"nodeType":"StructuredDocumentation","src":"3800:99:14","text":" @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."},"id":1391,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3913:12:14","nodeType":"FunctionDefinition","parameters":{"id":1384,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1383,"mutability":"mutable","name":"store","nameLocation":"3940:5:14","nodeType":"VariableDeclaration","scope":1391,"src":"3926:19:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":1382,"name":"bytes","nodeType":"ElementaryTypeName","src":"3926:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3925:21:14"},"returnParameters":{"id":1388,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1387,"mutability":"mutable","name":"r","nameLocation":"3988:1:14","nodeType":"VariableDeclaration","scope":1391,"src":"3970:19:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1303_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":1386,"nodeType":"UserDefinedTypeName","pathNode":{"id":1385,"name":"BytesSlot","nameLocations":["3970:9:14"],"nodeType":"IdentifierPath","referencedDeclaration":1303,"src":"3970:9:14"},"referencedDeclaration":1303,"src":"3970:9:14","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1303_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3969:21:14"},"scope":1392,"src":"3904:199:14","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1393,"src":"1420:2685:14","usedErrors":[]}],"src":"193:3913:14"},"id":14},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[2865],"SignedMath":[2970],"Strings":[1621]},"id":1622,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1394,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"101:23:15"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":1395,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1622,"sourceUnit":2866,"src":"126:25:15","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":1396,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1622,"sourceUnit":2971,"src":"152:31:15","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":1397,"nodeType":"StructuredDocumentation","src":"185:34:15","text":" @dev String operations."},"fullyImplemented":true,"id":1621,"linearizedBaseContracts":[1621],"name":"Strings","nameLocation":"228:7:15","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1400,"mutability":"constant","name":"_SYMBOLS","nameLocation":"267:8:15","nodeType":"VariableDeclaration","scope":1621,"src":"242:54:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":1398,"name":"bytes16","nodeType":"ElementaryTypeName","src":"242:7:15","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":1399,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"278:18:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":1403,"mutability":"constant","name":"_ADDRESS_LENGTH","nameLocation":"325:15:15","nodeType":"VariableDeclaration","scope":1621,"src":"302:43:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1401,"name":"uint8","nodeType":"ElementaryTypeName","src":"302:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":1402,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"343:2:15","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"body":{"id":1450,"nodeType":"Block","src":"518:625:15","statements":[{"id":1449,"nodeType":"UncheckedBlock","src":"528:609:15","statements":[{"assignments":[1412],"declarations":[{"constant":false,"id":1412,"mutability":"mutable","name":"length","nameLocation":"560:6:15","nodeType":"VariableDeclaration","scope":1449,"src":"552:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1411,"name":"uint256","nodeType":"ElementaryTypeName","src":"552:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1419,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1415,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1406,"src":"580:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1413,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2865,"src":"569:4:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$2865_$","typeString":"type(library Math)"}},"id":1414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"574:5:15","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":2702,"src":"569:10:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1416,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"569:17:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1417,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"589:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"569:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"552:38:15"},{"assignments":[1421],"declarations":[{"constant":false,"id":1421,"mutability":"mutable","name":"buffer","nameLocation":"618:6:15","nodeType":"VariableDeclaration","scope":1449,"src":"604:20:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1420,"name":"string","nodeType":"ElementaryTypeName","src":"604:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1426,"initialValue":{"arguments":[{"id":1424,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1412,"src":"638:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1423,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"627:10:15","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":1422,"name":"string","nodeType":"ElementaryTypeName","src":"631:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":1425,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"627:18:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"604:41:15"},{"assignments":[1428],"declarations":[{"constant":false,"id":1428,"mutability":"mutable","name":"ptr","nameLocation":"667:3:15","nodeType":"VariableDeclaration","scope":1449,"src":"659:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1427,"name":"uint256","nodeType":"ElementaryTypeName","src":"659:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1429,"nodeType":"VariableDeclarationStatement","src":"659:11:15"},{"AST":{"nodeType":"YulBlock","src":"740:67:15","statements":[{"nodeType":"YulAssignment","src":"758:35:15","value":{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"769:6:15"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"781:2:15","type":"","value":"32"},{"name":"length","nodeType":"YulIdentifier","src":"785:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"777:3:15"},"nodeType":"YulFunctionCall","src":"777:15:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"765:3:15"},"nodeType":"YulFunctionCall","src":"765:28:15"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"758:3:15"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1421,"isOffset":false,"isSlot":false,"src":"769:6:15","valueSize":1},{"declaration":1412,"isOffset":false,"isSlot":false,"src":"785:6:15","valueSize":1},{"declaration":1428,"isOffset":false,"isSlot":false,"src":"758:3:15","valueSize":1}],"id":1430,"nodeType":"InlineAssembly","src":"731:76:15"},{"body":{"id":1445,"nodeType":"Block","src":"833:267:15","statements":[{"expression":{"id":1433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"851:5:15","subExpression":{"id":1432,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1428,"src":"851:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1434,"nodeType":"ExpressionStatement","src":"851:5:15"},{"AST":{"nodeType":"YulBlock","src":"934:84:15","statements":[{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"964:3:15"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"978:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"985:2:15","type":"","value":"10"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"974:3:15"},"nodeType":"YulFunctionCall","src":"974:14:15"},{"name":"_SYMBOLS","nodeType":"YulIdentifier","src":"990:8:15"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"969:4:15"},"nodeType":"YulFunctionCall","src":"969:30:15"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"956:7:15"},"nodeType":"YulFunctionCall","src":"956:44:15"},"nodeType":"YulExpressionStatement","src":"956:44:15"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1400,"isOffset":false,"isSlot":false,"src":"990:8:15","valueSize":1},{"declaration":1428,"isOffset":false,"isSlot":false,"src":"964:3:15","valueSize":1},{"declaration":1406,"isOffset":false,"isSlot":false,"src":"978:5:15","valueSize":1}],"id":1435,"nodeType":"InlineAssembly","src":"925:93:15"},{"expression":{"id":1438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1436,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1406,"src":"1035:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":1437,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1044:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1035:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1439,"nodeType":"ExpressionStatement","src":"1035:11:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1440,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1406,"src":"1068:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1441,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1077:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1068:10:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1444,"nodeType":"IfStatement","src":"1064:21:15","trueBody":{"id":1443,"nodeType":"Break","src":"1080:5:15"}}]},"condition":{"hexValue":"74727565","id":1431,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"827:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":1446,"nodeType":"WhileStatement","src":"820:280:15"},{"expression":{"id":1447,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1421,"src":"1120:6:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1410,"id":1448,"nodeType":"Return","src":"1113:13:15"}]}]},"documentation":{"id":1404,"nodeType":"StructuredDocumentation","src":"352:90:15","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":1451,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"456:8:15","nodeType":"FunctionDefinition","parameters":{"id":1407,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1406,"mutability":"mutable","name":"value","nameLocation":"473:5:15","nodeType":"VariableDeclaration","scope":1451,"src":"465:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1405,"name":"uint256","nodeType":"ElementaryTypeName","src":"465:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"464:15:15"},"returnParameters":{"id":1410,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1409,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1451,"src":"503:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1408,"name":"string","nodeType":"ElementaryTypeName","src":"503:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"502:15:15"},"scope":1621,"src":"447:696:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1478,"nodeType":"Block","src":"1313:103:15","statements":[{"expression":{"arguments":[{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1463,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1454,"src":"1354:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":1464,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1362:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1354:9:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":1467,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1372:2:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":1468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1354:20:15","trueExpression":{"hexValue":"2d","id":1466,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1366:3:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":1472,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1454,"src":"1400:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":1470,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2970,"src":"1385:10:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$2970_$","typeString":"type(library SignedMath)"}},"id":1471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1396:3:15","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":2969,"src":"1385:14:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":1473,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1385:21:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1469,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[1451,1479],"referencedDeclaration":1451,"src":"1376:8:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":1474,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1376:31:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":1461,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1337:3:15","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1462,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1341:12:15","memberName":"encodePacked","nodeType":"MemberAccess","src":"1337:16:15","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1475,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1337:71:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1460,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1330:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1459,"name":"string","nodeType":"ElementaryTypeName","src":"1330:6:15","typeDescriptions":{}}},"id":1476,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1330:79:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1458,"id":1477,"nodeType":"Return","src":"1323:86:15"}]},"documentation":{"id":1452,"nodeType":"StructuredDocumentation","src":"1149:89:15","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":1479,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"1252:8:15","nodeType":"FunctionDefinition","parameters":{"id":1455,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1454,"mutability":"mutable","name":"value","nameLocation":"1268:5:15","nodeType":"VariableDeclaration","scope":1479,"src":"1261:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1453,"name":"int256","nodeType":"ElementaryTypeName","src":"1261:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1260:14:15"},"returnParameters":{"id":1458,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1457,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1479,"src":"1298:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1456,"name":"string","nodeType":"ElementaryTypeName","src":"1298:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1297:15:15"},"scope":1621,"src":"1243:173:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1498,"nodeType":"Block","src":"1595:100:15","statements":[{"id":1497,"nodeType":"UncheckedBlock","src":"1605:84:15","statements":[{"expression":{"arguments":[{"id":1488,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1482,"src":"1648:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1491,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1482,"src":"1667:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1489,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2865,"src":"1655:4:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$2865_$","typeString":"type(library Math)"}},"id":1490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1660:6:15","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":2825,"src":"1655:11:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1492,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1655:18:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1493,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1676:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1655:22:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1487,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1499,1575,1595],"referencedDeclaration":1575,"src":"1636:11:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":1495,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1636:42:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1486,"id":1496,"nodeType":"Return","src":"1629:49:15"}]}]},"documentation":{"id":1480,"nodeType":"StructuredDocumentation","src":"1422:94:15","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":1499,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1530:11:15","nodeType":"FunctionDefinition","parameters":{"id":1483,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1482,"mutability":"mutable","name":"value","nameLocation":"1550:5:15","nodeType":"VariableDeclaration","scope":1499,"src":"1542:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1481,"name":"uint256","nodeType":"ElementaryTypeName","src":"1542:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1541:15:15"},"returnParameters":{"id":1486,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1485,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1499,"src":"1580:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1484,"name":"string","nodeType":"ElementaryTypeName","src":"1580:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1579:15:15"},"scope":1621,"src":"1521:174:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1574,"nodeType":"Block","src":"1908:347:15","statements":[{"assignments":[1510],"declarations":[{"constant":false,"id":1510,"mutability":"mutable","name":"buffer","nameLocation":"1931:6:15","nodeType":"VariableDeclaration","scope":1574,"src":"1918:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1509,"name":"bytes","nodeType":"ElementaryTypeName","src":"1918:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1519,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1513,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1950:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1514,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1504,"src":"1954:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1950:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":1516,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1963:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"1950:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1512,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1940:9:15","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":1511,"name":"bytes","nodeType":"ElementaryTypeName","src":"1944:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":1518,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1940:25:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1918:47:15"},{"expression":{"id":1524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1520,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1510,"src":"1975:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1522,"indexExpression":{"hexValue":"30","id":1521,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1982:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1975:9:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":1523,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1987:3:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"1975:15:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1525,"nodeType":"ExpressionStatement","src":"1975:15:15"},{"expression":{"id":1530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1526,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1510,"src":"2000:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1528,"indexExpression":{"hexValue":"31","id":1527,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2007:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2000:9:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":1529,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2012:3:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2000:15:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1531,"nodeType":"ExpressionStatement","src":"2000:15:15"},{"body":{"id":1560,"nodeType":"Block","src":"2070:83:15","statements":[{"expression":{"id":1554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1546,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1510,"src":"2084:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1548,"indexExpression":{"id":1547,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1533,"src":"2091:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2084:9:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":1549,"name":"_SYMBOLS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1400,"src":"2096:8:15","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":1553,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1550,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1502,"src":"2105:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":1551,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2113:3:15","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2105:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2096:21:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2084:33:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1555,"nodeType":"ExpressionStatement","src":"2084:33:15"},{"expression":{"id":1558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1556,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1502,"src":"2131:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":1557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2141:1:15","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2131:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1559,"nodeType":"ExpressionStatement","src":"2131:11:15"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1540,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1533,"src":"2058:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":1541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2062:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2058:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1561,"initializationExpression":{"assignments":[1533],"declarations":[{"constant":false,"id":1533,"mutability":"mutable","name":"i","nameLocation":"2038:1:15","nodeType":"VariableDeclaration","scope":1561,"src":"2030:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1532,"name":"uint256","nodeType":"ElementaryTypeName","src":"2030:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1539,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1534,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2042:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1535,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1504,"src":"2046:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2042:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1537,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2055:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2042:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2030:26:15"},"loopExpression":{"expression":{"id":1544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2065:3:15","subExpression":{"id":1543,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1533,"src":"2067:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1545,"nodeType":"ExpressionStatement","src":"2065:3:15"},"nodeType":"ForStatement","src":"2025:128:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1563,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1502,"src":"2170:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1564,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2179:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2170:10:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"537472696e67733a20686578206c656e67746820696e73756666696369656e74","id":1566,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2182:34:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""},"value":"Strings: hex length insufficient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""}],"id":1562,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2162:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1567,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2162:55:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1568,"nodeType":"ExpressionStatement","src":"2162:55:15"},{"expression":{"arguments":[{"id":1571,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1510,"src":"2241:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1570,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2234:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1569,"name":"string","nodeType":"ElementaryTypeName","src":"2234:6:15","typeDescriptions":{}}},"id":1572,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2234:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1508,"id":1573,"nodeType":"Return","src":"2227:21:15"}]},"documentation":{"id":1500,"nodeType":"StructuredDocumentation","src":"1701:112:15","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":1575,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1827:11:15","nodeType":"FunctionDefinition","parameters":{"id":1505,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1502,"mutability":"mutable","name":"value","nameLocation":"1847:5:15","nodeType":"VariableDeclaration","scope":1575,"src":"1839:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1501,"name":"uint256","nodeType":"ElementaryTypeName","src":"1839:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1504,"mutability":"mutable","name":"length","nameLocation":"1862:6:15","nodeType":"VariableDeclaration","scope":1575,"src":"1854:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1503,"name":"uint256","nodeType":"ElementaryTypeName","src":"1854:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1838:31:15"},"returnParameters":{"id":1508,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1507,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1575,"src":"1893:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1506,"name":"string","nodeType":"ElementaryTypeName","src":"1893:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1892:15:15"},"scope":1621,"src":"1818:437:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1594,"nodeType":"Block","src":"2480:76:15","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":1588,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1578,"src":"2525:4:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1587,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2517:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":1586,"name":"uint160","nodeType":"ElementaryTypeName","src":"2517:7:15","typeDescriptions":{}}},"id":1589,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2517:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":1585,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2509:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1584,"name":"uint256","nodeType":"ElementaryTypeName","src":"2509:7:15","typeDescriptions":{}}},"id":1590,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2509:22:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1591,"name":"_ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1403,"src":"2533:15:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":1583,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1499,1575,1595],"referencedDeclaration":1575,"src":"2497:11:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":1592,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2497:52:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1582,"id":1593,"nodeType":"Return","src":"2490:59:15"}]},"documentation":{"id":1576,"nodeType":"StructuredDocumentation","src":"2261:141:15","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."},"id":1595,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2416:11:15","nodeType":"FunctionDefinition","parameters":{"id":1579,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1578,"mutability":"mutable","name":"addr","nameLocation":"2436:4:15","nodeType":"VariableDeclaration","scope":1595,"src":"2428:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1577,"name":"address","nodeType":"ElementaryTypeName","src":"2428:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2427:14:15"},"returnParameters":{"id":1582,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1581,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1595,"src":"2465:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1580,"name":"string","nodeType":"ElementaryTypeName","src":"2465:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2464:15:15"},"scope":1621,"src":"2407:149:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1619,"nodeType":"Block","src":"2711:66:15","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":1608,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1598,"src":"2744:1:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1607,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2738:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1606,"name":"bytes","nodeType":"ElementaryTypeName","src":"2738:5:15","typeDescriptions":{}}},"id":1609,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2738:8:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1605,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2728:9:15","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1610,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2728:19:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":1614,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1600,"src":"2767:1:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1613,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2761:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1612,"name":"bytes","nodeType":"ElementaryTypeName","src":"2761:5:15","typeDescriptions":{}}},"id":1615,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2761:8:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1611,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2751:9:15","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1616,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2751:19:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2728:42:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1604,"id":1618,"nodeType":"Return","src":"2721:49:15"}]},"documentation":{"id":1596,"nodeType":"StructuredDocumentation","src":"2562:66:15","text":" @dev Returns true if the two strings are equal."},"id":1620,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"2642:5:15","nodeType":"FunctionDefinition","parameters":{"id":1601,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1598,"mutability":"mutable","name":"a","nameLocation":"2662:1:15","nodeType":"VariableDeclaration","scope":1620,"src":"2648:15:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1597,"name":"string","nodeType":"ElementaryTypeName","src":"2648:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1600,"mutability":"mutable","name":"b","nameLocation":"2679:1:15","nodeType":"VariableDeclaration","scope":1620,"src":"2665:15:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1599,"name":"string","nodeType":"ElementaryTypeName","src":"2665:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2647:34:15"},"returnParameters":{"id":1604,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1603,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1620,"src":"2705:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1602,"name":"bool","nodeType":"ElementaryTypeName","src":"2705:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2704:6:15"},"scope":1621,"src":"2633:144:15","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1622,"src":"220:2559:15","usedErrors":[]}],"src":"101:2679:15"},"id":15},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","exportedSymbols":{"ECDSA":[1987],"Math":[2865],"SignedMath":[2970],"Strings":[1621]},"id":1988,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1623,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"112:23:16"},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../Strings.sol","id":1624,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1988,"sourceUnit":1622,"src":"137:24:16","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ECDSA","contractDependencies":[],"contractKind":"library","documentation":{"id":1625,"nodeType":"StructuredDocumentation","src":"163:205:16","text":" @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."},"fullyImplemented":true,"id":1987,"linearizedBaseContracts":[1987],"name":"ECDSA","nameLocation":"377:5:16","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ECDSA.RecoverError","id":1631,"members":[{"id":1626,"name":"NoError","nameLocation":"417:7:16","nodeType":"EnumValue","src":"417:7:16"},{"id":1627,"name":"InvalidSignature","nameLocation":"434:16:16","nodeType":"EnumValue","src":"434:16:16"},{"id":1628,"name":"InvalidSignatureLength","nameLocation":"460:22:16","nodeType":"EnumValue","src":"460:22:16"},{"id":1629,"name":"InvalidSignatureS","nameLocation":"492:17:16","nodeType":"EnumValue","src":"492:17:16"},{"id":1630,"name":"InvalidSignatureV","nameLocation":"519:17:16","nodeType":"EnumValue","src":"519:17:16"}],"name":"RecoverError","nameLocation":"394:12:16","nodeType":"EnumDefinition","src":"389:175:16"},{"body":{"id":1674,"nodeType":"Block","src":"624:457:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$1631","typeString":"enum ECDSA.RecoverError"},"id":1640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1637,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1634,"src":"638:5:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1631","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1638,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1631,"src":"647:12:16","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1631_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1639,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"660:7:16","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":1626,"src":"647:20:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1631","typeString":"enum ECDSA.RecoverError"}},"src":"638:29:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$1631","typeString":"enum ECDSA.RecoverError"},"id":1646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1643,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1634,"src":"734:5:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1631","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1644,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1631,"src":"743:12:16","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1631_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1645,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"756:16:16","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":1627,"src":"743:29:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1631","typeString":"enum ECDSA.RecoverError"}},"src":"734:38:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$1631","typeString":"enum ECDSA.RecoverError"},"id":1655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1652,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1634,"src":"843:5:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1631","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1653,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1631,"src":"852:12:16","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1631_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1654,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"865:22:16","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":1628,"src":"852:35:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1631","typeString":"enum ECDSA.RecoverError"}},"src":"843:44:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$1631","typeString":"enum ECDSA.RecoverError"},"id":1664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1661,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1634,"src":"965:5:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1631","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1662,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1631,"src":"974:12:16","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1631_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1663,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"987:17:16","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":1629,"src":"974:30:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1631","typeString":"enum ECDSA.RecoverError"}},"src":"965:39:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1670,"nodeType":"IfStatement","src":"961:114:16","trueBody":{"id":1669,"nodeType":"Block","src":"1006:69:16","statements":[{"expression":{"arguments":[{"hexValue":"45434453413a20696e76616c6964207369676e6174757265202773272076616c7565","id":1666,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1027:36:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd","typeString":"literal_string \"ECDSA: invalid signature 's' value\""},"value":"ECDSA: invalid signature 's' value"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd","typeString":"literal_string \"ECDSA: invalid signature 's' value\""}],"id":1665,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"1020:6:16","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1667,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1020:44:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1668,"nodeType":"ExpressionStatement","src":"1020:44:16"}]}},"id":1671,"nodeType":"IfStatement","src":"839:236:16","trueBody":{"id":1660,"nodeType":"Block","src":"889:66:16","statements":[{"expression":{"arguments":[{"hexValue":"45434453413a20696e76616c6964207369676e6174757265206c656e677468","id":1657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"910:33:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77","typeString":"literal_string \"ECDSA: invalid signature length\""},"value":"ECDSA: invalid signature length"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77","typeString":"literal_string \"ECDSA: invalid signature length\""}],"id":1656,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"903:6:16","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1658,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"903:41:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1659,"nodeType":"ExpressionStatement","src":"903:41:16"}]}},"id":1672,"nodeType":"IfStatement","src":"730:345:16","trueBody":{"id":1651,"nodeType":"Block","src":"774:59:16","statements":[{"expression":{"arguments":[{"hexValue":"45434453413a20696e76616c6964207369676e6174757265","id":1648,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"795:26:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be","typeString":"literal_string \"ECDSA: invalid signature\""},"value":"ECDSA: invalid signature"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be","typeString":"literal_string \"ECDSA: invalid signature\""}],"id":1647,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"788:6:16","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1649,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"788:34:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1650,"nodeType":"ExpressionStatement","src":"788:34:16"}]}},"id":1673,"nodeType":"IfStatement","src":"634:441:16","trueBody":{"id":1642,"nodeType":"Block","src":"669:55:16","statements":[{"functionReturnParameters":1636,"id":1641,"nodeType":"Return","src":"683:7:16"}]}}]},"id":1675,"implemented":true,"kind":"function","modifiers":[],"name":"_throwError","nameLocation":"579:11:16","nodeType":"FunctionDefinition","parameters":{"id":1635,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1634,"mutability":"mutable","name":"error","nameLocation":"604:5:16","nodeType":"VariableDeclaration","scope":1675,"src":"591:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1631","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":1633,"nodeType":"UserDefinedTypeName","pathNode":{"id":1632,"name":"RecoverError","nameLocations":["591:12:16"],"nodeType":"IdentifierPath","referencedDeclaration":1631,"src":"591:12:16"},"referencedDeclaration":1631,"src":"591:12:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1631","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"src":"590:20:16"},"returnParameters":{"id":1636,"nodeType":"ParameterList","parameters":[],"src":"624:0:16"},"scope":1987,"src":"570:511:16","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":1720,"nodeType":"Block","src":"2249:626:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1688,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1680,"src":"2263:9:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2273:6:16","memberName":"length","nodeType":"MemberAccess","src":"2263:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3635","id":1690,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2283:2:16","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"65"},"src":"2263:22:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1718,"nodeType":"Block","src":"2788:81:16","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":1712,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2818:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1711,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2810:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1710,"name":"address","nodeType":"ElementaryTypeName","src":"2810:7:16","typeDescriptions":{}}},"id":1713,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2810:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1714,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1631,"src":"2822:12:16","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1631_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1715,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2835:22:16","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":1628,"src":"2822:35:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1631","typeString":"enum ECDSA.RecoverError"}}],"id":1716,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2809:49:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1631_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":1687,"id":1717,"nodeType":"Return","src":"2802:56:16"}]},"id":1719,"nodeType":"IfStatement","src":"2259:610:16","trueBody":{"id":1709,"nodeType":"Block","src":"2287:495:16","statements":[{"assignments":[1693],"declarations":[{"constant":false,"id":1693,"mutability":"mutable","name":"r","nameLocation":"2309:1:16","nodeType":"VariableDeclaration","scope":1709,"src":"2301:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1692,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2301:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1694,"nodeType":"VariableDeclarationStatement","src":"2301:9:16"},{"assignments":[1696],"declarations":[{"constant":false,"id":1696,"mutability":"mutable","name":"s","nameLocation":"2332:1:16","nodeType":"VariableDeclaration","scope":1709,"src":"2324:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1695,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2324:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1697,"nodeType":"VariableDeclarationStatement","src":"2324:9:16"},{"assignments":[1699],"declarations":[{"constant":false,"id":1699,"mutability":"mutable","name":"v","nameLocation":"2353:1:16","nodeType":"VariableDeclaration","scope":1709,"src":"2347:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1698,"name":"uint8","nodeType":"ElementaryTypeName","src":"2347:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":1700,"nodeType":"VariableDeclarationStatement","src":"2347:7:16"},{"AST":{"nodeType":"YulBlock","src":"2555:171:16","statements":[{"nodeType":"YulAssignment","src":"2573:32:16","value":{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2588:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"2599:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2584:3:16"},"nodeType":"YulFunctionCall","src":"2584:20:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2578:5:16"},"nodeType":"YulFunctionCall","src":"2578:27:16"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"2573:1:16"}]},{"nodeType":"YulAssignment","src":"2622:32:16","value":{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2637:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"2648:4:16","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2633:3:16"},"nodeType":"YulFunctionCall","src":"2633:20:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2627:5:16"},"nodeType":"YulFunctionCall","src":"2627:27:16"},"variableNames":[{"name":"s","nodeType":"YulIdentifier","src":"2622:1:16"}]},{"nodeType":"YulAssignment","src":"2671:41:16","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2681:1:16","type":"","value":"0"},{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2694:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"2705:4:16","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2690:3:16"},"nodeType":"YulFunctionCall","src":"2690:20:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2684:5:16"},"nodeType":"YulFunctionCall","src":"2684:27:16"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"2676:4:16"},"nodeType":"YulFunctionCall","src":"2676:36:16"},"variableNames":[{"name":"v","nodeType":"YulIdentifier","src":"2671:1:16"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1693,"isOffset":false,"isSlot":false,"src":"2573:1:16","valueSize":1},{"declaration":1696,"isOffset":false,"isSlot":false,"src":"2622:1:16","valueSize":1},{"declaration":1680,"isOffset":false,"isSlot":false,"src":"2588:9:16","valueSize":1},{"declaration":1680,"isOffset":false,"isSlot":false,"src":"2637:9:16","valueSize":1},{"declaration":1680,"isOffset":false,"isSlot":false,"src":"2694:9:16","valueSize":1},{"declaration":1699,"isOffset":false,"isSlot":false,"src":"2671:1:16","valueSize":1}],"id":1701,"nodeType":"InlineAssembly","src":"2546:180:16"},{"expression":{"arguments":[{"id":1703,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1678,"src":"2757:4:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1704,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1699,"src":"2763:1:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1705,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1693,"src":"2766:1:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1706,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1696,"src":"2769:1:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1702,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[1721,1795,1889],"referencedDeclaration":1889,"src":"2746:10:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$1631_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"}},"id":1707,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2746:25:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1631_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":1687,"id":1708,"nodeType":"Return","src":"2739:32:16"}]}}]},"documentation":{"id":1676,"nodeType":"StructuredDocumentation","src":"1087:1053:16","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature` or error string. This address can then be used for verification purposes.\n The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n _Available since v4.3._"},"id":1721,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"2154:10:16","nodeType":"FunctionDefinition","parameters":{"id":1681,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1678,"mutability":"mutable","name":"hash","nameLocation":"2173:4:16","nodeType":"VariableDeclaration","scope":1721,"src":"2165:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1677,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2165:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1680,"mutability":"mutable","name":"signature","nameLocation":"2192:9:16","nodeType":"VariableDeclaration","scope":1721,"src":"2179:22:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1679,"name":"bytes","nodeType":"ElementaryTypeName","src":"2179:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2164:38:16"},"returnParameters":{"id":1687,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1683,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1721,"src":"2226:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1682,"name":"address","nodeType":"ElementaryTypeName","src":"2226:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1686,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1721,"src":"2235:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1631","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":1685,"nodeType":"UserDefinedTypeName","pathNode":{"id":1684,"name":"RecoverError","nameLocations":["2235:12:16"],"nodeType":"IdentifierPath","referencedDeclaration":1631,"src":"2235:12:16"},"referencedDeclaration":1631,"src":"2235:12:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1631","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"src":"2225:23:16"},"scope":1987,"src":"2145:730:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1747,"nodeType":"Block","src":"3748:140:16","statements":[{"assignments":[1732,1735],"declarations":[{"constant":false,"id":1732,"mutability":"mutable","name":"recovered","nameLocation":"3767:9:16","nodeType":"VariableDeclaration","scope":1747,"src":"3759:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1731,"name":"address","nodeType":"ElementaryTypeName","src":"3759:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1735,"mutability":"mutable","name":"error","nameLocation":"3791:5:16","nodeType":"VariableDeclaration","scope":1747,"src":"3778:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1631","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":1734,"nodeType":"UserDefinedTypeName","pathNode":{"id":1733,"name":"RecoverError","nameLocations":["3778:12:16"],"nodeType":"IdentifierPath","referencedDeclaration":1631,"src":"3778:12:16"},"referencedDeclaration":1631,"src":"3778:12:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1631","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"id":1740,"initialValue":{"arguments":[{"id":1737,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1724,"src":"3811:4:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1738,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1726,"src":"3817:9:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1736,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[1721,1795,1889],"referencedDeclaration":1721,"src":"3800:10:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$1631_$","typeString":"function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError)"}},"id":1739,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3800:27:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1631_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"nodeType":"VariableDeclarationStatement","src":"3758:69:16"},{"expression":{"arguments":[{"id":1742,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1735,"src":"3849:5:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1631","typeString":"enum ECDSA.RecoverError"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$1631","typeString":"enum ECDSA.RecoverError"}],"id":1741,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1675,"src":"3837:11:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$1631_$returns$__$","typeString":"function (enum ECDSA.RecoverError) pure"}},"id":1743,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3837:18:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1744,"nodeType":"ExpressionStatement","src":"3837:18:16"},{"expression":{"id":1745,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1732,"src":"3872:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1730,"id":1746,"nodeType":"Return","src":"3865:16:16"}]},"documentation":{"id":1722,"nodeType":"StructuredDocumentation","src":"2881:775:16","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {toEthSignedMessageHash} on it."},"id":1748,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"3670:7:16","nodeType":"FunctionDefinition","parameters":{"id":1727,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1724,"mutability":"mutable","name":"hash","nameLocation":"3686:4:16","nodeType":"VariableDeclaration","scope":1748,"src":"3678:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1723,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3678:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1726,"mutability":"mutable","name":"signature","nameLocation":"3705:9:16","nodeType":"VariableDeclaration","scope":1748,"src":"3692:22:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1725,"name":"bytes","nodeType":"ElementaryTypeName","src":"3692:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3677:38:16"},"returnParameters":{"id":1730,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1729,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1748,"src":"3739:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1728,"name":"address","nodeType":"ElementaryTypeName","src":"3739:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3738:9:16"},"scope":1987,"src":"3661:227:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1794,"nodeType":"Block","src":"4245:203:16","statements":[{"assignments":[1764],"declarations":[{"constant":false,"id":1764,"mutability":"mutable","name":"s","nameLocation":"4263:1:16","nodeType":"VariableDeclaration","scope":1794,"src":"4255:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1763,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4255:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1771,"initialValue":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1765,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1755,"src":"4267:2:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"arguments":[{"hexValue":"307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666","id":1768,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4280:66:16","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"},"value":"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"}],"id":1767,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4272:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1766,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4272:7:16","typeDescriptions":{}}},"id":1769,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4272:75:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4267:80:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4255:92:16"},{"assignments":[1773],"declarations":[{"constant":false,"id":1773,"mutability":"mutable","name":"v","nameLocation":"4363:1:16","nodeType":"VariableDeclaration","scope":1794,"src":"4357:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1772,"name":"uint8","nodeType":"ElementaryTypeName","src":"4357:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":1786,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1784,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1778,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1755,"src":"4382:2:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1777,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4374:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1776,"name":"uint256","nodeType":"ElementaryTypeName","src":"4374:7:16","typeDescriptions":{}}},"id":1779,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4374:11:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":1780,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4389:3:16","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"4374:18:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1782,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4373:20:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3237","id":1783,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4396:2:16","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"},"src":"4373:25:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1775,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4367:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":1774,"name":"uint8","nodeType":"ElementaryTypeName","src":"4367:5:16","typeDescriptions":{}}},"id":1785,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4367:32:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"4357:42:16"},{"expression":{"arguments":[{"id":1788,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1751,"src":"4427:4:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1789,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1773,"src":"4433:1:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1790,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1753,"src":"4436:1:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1791,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1764,"src":"4439:1:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1787,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[1721,1795,1889],"referencedDeclaration":1889,"src":"4416:10:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$1631_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"}},"id":1792,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4416:25:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1631_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":1762,"id":1793,"nodeType":"Return","src":"4409:32:16"}]},"documentation":{"id":1749,"nodeType":"StructuredDocumentation","src":"3894:243:16","text":" @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\n _Available since v4.3._"},"id":1795,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"4151:10:16","nodeType":"FunctionDefinition","parameters":{"id":1756,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1751,"mutability":"mutable","name":"hash","nameLocation":"4170:4:16","nodeType":"VariableDeclaration","scope":1795,"src":"4162:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1750,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4162:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1753,"mutability":"mutable","name":"r","nameLocation":"4184:1:16","nodeType":"VariableDeclaration","scope":1795,"src":"4176:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1752,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4176:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1755,"mutability":"mutable","name":"vs","nameLocation":"4195:2:16","nodeType":"VariableDeclaration","scope":1795,"src":"4187:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1754,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4187:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4161:37:16"},"returnParameters":{"id":1762,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1758,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1795,"src":"4222:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1757,"name":"address","nodeType":"ElementaryTypeName","src":"4222:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1761,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1795,"src":"4231:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1631","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":1760,"nodeType":"UserDefinedTypeName","pathNode":{"id":1759,"name":"RecoverError","nameLocations":["4231:12:16"],"nodeType":"IdentifierPath","referencedDeclaration":1631,"src":"4231:12:16"},"referencedDeclaration":1631,"src":"4231:12:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1631","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"src":"4221:23:16"},"scope":1987,"src":"4142:306:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1824,"nodeType":"Block","src":"4699:136:16","statements":[{"assignments":[1808,1811],"declarations":[{"constant":false,"id":1808,"mutability":"mutable","name":"recovered","nameLocation":"4718:9:16","nodeType":"VariableDeclaration","scope":1824,"src":"4710:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1807,"name":"address","nodeType":"ElementaryTypeName","src":"4710:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1811,"mutability":"mutable","name":"error","nameLocation":"4742:5:16","nodeType":"VariableDeclaration","scope":1824,"src":"4729:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1631","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":1810,"nodeType":"UserDefinedTypeName","pathNode":{"id":1809,"name":"RecoverError","nameLocations":["4729:12:16"],"nodeType":"IdentifierPath","referencedDeclaration":1631,"src":"4729:12:16"},"referencedDeclaration":1631,"src":"4729:12:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1631","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"id":1817,"initialValue":{"arguments":[{"id":1813,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1798,"src":"4762:4:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1814,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1800,"src":"4768:1:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1815,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1802,"src":"4771:2:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1812,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[1721,1795,1889],"referencedDeclaration":1795,"src":"4751:10:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$1631_$","typeString":"function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"}},"id":1816,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4751:23:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1631_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"nodeType":"VariableDeclarationStatement","src":"4709:65:16"},{"expression":{"arguments":[{"id":1819,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1811,"src":"4796:5:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1631","typeString":"enum ECDSA.RecoverError"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$1631","typeString":"enum ECDSA.RecoverError"}],"id":1818,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1675,"src":"4784:11:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$1631_$returns$__$","typeString":"function (enum ECDSA.RecoverError) pure"}},"id":1820,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4784:18:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1821,"nodeType":"ExpressionStatement","src":"4784:18:16"},{"expression":{"id":1822,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1808,"src":"4819:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1806,"id":1823,"nodeType":"Return","src":"4812:16:16"}]},"documentation":{"id":1796,"nodeType":"StructuredDocumentation","src":"4454:154:16","text":" @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n _Available since v4.2._"},"id":1825,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"4622:7:16","nodeType":"FunctionDefinition","parameters":{"id":1803,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1798,"mutability":"mutable","name":"hash","nameLocation":"4638:4:16","nodeType":"VariableDeclaration","scope":1825,"src":"4630:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1797,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4630:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1800,"mutability":"mutable","name":"r","nameLocation":"4652:1:16","nodeType":"VariableDeclaration","scope":1825,"src":"4644:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1799,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4644:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1802,"mutability":"mutable","name":"vs","nameLocation":"4663:2:16","nodeType":"VariableDeclaration","scope":1825,"src":"4655:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1801,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4655:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4629:37:16"},"returnParameters":{"id":1806,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1805,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1825,"src":"4690:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1804,"name":"address","nodeType":"ElementaryTypeName","src":"4690:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4689:9:16"},"scope":1987,"src":"4613:222:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1888,"nodeType":"Block","src":"5120:1345:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1844,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1834,"src":"6016:1:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1843,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6008:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1842,"name":"uint256","nodeType":"ElementaryTypeName","src":"6008:7:16","typeDescriptions":{}}},"id":1845,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6008:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130","id":1846,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6021:66:16","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1","typeString":"int_const 5789...(69 digits omitted)...7168"},"value":"0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"},"src":"6008:79:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1857,"nodeType":"IfStatement","src":"6004:161:16","trueBody":{"id":1856,"nodeType":"Block","src":"6089:76:16","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":1850,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6119:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1849,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6111:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1848,"name":"address","nodeType":"ElementaryTypeName","src":"6111:7:16","typeDescriptions":{}}},"id":1851,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6111:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1852,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1631,"src":"6123:12:16","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1631_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1853,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6136:17:16","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":1629,"src":"6123:30:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1631","typeString":"enum ECDSA.RecoverError"}}],"id":1854,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6110:44:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1631_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":1841,"id":1855,"nodeType":"Return","src":"6103:51:16"}]}},{"assignments":[1859],"declarations":[{"constant":false,"id":1859,"mutability":"mutable","name":"signer","nameLocation":"6267:6:16","nodeType":"VariableDeclaration","scope":1888,"src":"6259:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1858,"name":"address","nodeType":"ElementaryTypeName","src":"6259:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1866,"initialValue":{"arguments":[{"id":1861,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1828,"src":"6286:4:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1862,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1830,"src":"6292:1:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1863,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1832,"src":"6295:1:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1864,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1834,"src":"6298:1:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1860,"name":"ecrecover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-6,"src":"6276:9:16","typeDescriptions":{"typeIdentifier":"t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":1865,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6276:24:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6259:41:16"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1867,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1859,"src":"6314:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1870,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6332:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1869,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6324:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1868,"name":"address","nodeType":"ElementaryTypeName","src":"6324:7:16","typeDescriptions":{}}},"id":1871,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6324:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6314:20:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1882,"nodeType":"IfStatement","src":"6310:101:16","trueBody":{"id":1881,"nodeType":"Block","src":"6336:75:16","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":1875,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6366:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1874,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6358:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1873,"name":"address","nodeType":"ElementaryTypeName","src":"6358:7:16","typeDescriptions":{}}},"id":1876,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6358:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1877,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1631,"src":"6370:12:16","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1631_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1878,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6383:16:16","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":1627,"src":"6370:29:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1631","typeString":"enum ECDSA.RecoverError"}}],"id":1879,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6357:43:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1631_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":1841,"id":1880,"nodeType":"Return","src":"6350:50:16"}]}},{"expression":{"components":[{"id":1883,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1859,"src":"6429:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1884,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1631,"src":"6437:12:16","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1631_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1885,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6450:7:16","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":1626,"src":"6437:20:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1631","typeString":"enum ECDSA.RecoverError"}}],"id":1886,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6428:30:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1631_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":1841,"id":1887,"nodeType":"Return","src":"6421:37:16"}]},"documentation":{"id":1826,"nodeType":"StructuredDocumentation","src":"4841:163:16","text":" @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately.\n _Available since v4.3._"},"id":1889,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"5018:10:16","nodeType":"FunctionDefinition","parameters":{"id":1835,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1828,"mutability":"mutable","name":"hash","nameLocation":"5037:4:16","nodeType":"VariableDeclaration","scope":1889,"src":"5029:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1827,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5029:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1830,"mutability":"mutable","name":"v","nameLocation":"5049:1:16","nodeType":"VariableDeclaration","scope":1889,"src":"5043:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1829,"name":"uint8","nodeType":"ElementaryTypeName","src":"5043:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1832,"mutability":"mutable","name":"r","nameLocation":"5060:1:16","nodeType":"VariableDeclaration","scope":1889,"src":"5052:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1831,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5052:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1834,"mutability":"mutable","name":"s","nameLocation":"5071:1:16","nodeType":"VariableDeclaration","scope":1889,"src":"5063:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1833,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5063:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5028:45:16"},"returnParameters":{"id":1841,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1837,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1889,"src":"5097:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1836,"name":"address","nodeType":"ElementaryTypeName","src":"5097:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1840,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1889,"src":"5106:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1631","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":1839,"nodeType":"UserDefinedTypeName","pathNode":{"id":1838,"name":"RecoverError","nameLocations":["5106:12:16"],"nodeType":"IdentifierPath","referencedDeclaration":1631,"src":"5106:12:16"},"referencedDeclaration":1631,"src":"5106:12:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1631","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"src":"5096:23:16"},"scope":1987,"src":"5009:1456:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1921,"nodeType":"Block","src":"6692:138:16","statements":[{"assignments":[1904,1907],"declarations":[{"constant":false,"id":1904,"mutability":"mutable","name":"recovered","nameLocation":"6711:9:16","nodeType":"VariableDeclaration","scope":1921,"src":"6703:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1903,"name":"address","nodeType":"ElementaryTypeName","src":"6703:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1907,"mutability":"mutable","name":"error","nameLocation":"6735:5:16","nodeType":"VariableDeclaration","scope":1921,"src":"6722:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1631","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":1906,"nodeType":"UserDefinedTypeName","pathNode":{"id":1905,"name":"RecoverError","nameLocations":["6722:12:16"],"nodeType":"IdentifierPath","referencedDeclaration":1631,"src":"6722:12:16"},"referencedDeclaration":1631,"src":"6722:12:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1631","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"id":1914,"initialValue":{"arguments":[{"id":1909,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1892,"src":"6755:4:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1910,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1894,"src":"6761:1:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1911,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1896,"src":"6764:1:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1912,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1898,"src":"6767:1:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1908,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[1721,1795,1889],"referencedDeclaration":1889,"src":"6744:10:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$1631_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"}},"id":1913,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6744:25:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1631_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"nodeType":"VariableDeclarationStatement","src":"6702:67:16"},{"expression":{"arguments":[{"id":1916,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1907,"src":"6791:5:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1631","typeString":"enum ECDSA.RecoverError"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$1631","typeString":"enum ECDSA.RecoverError"}],"id":1915,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1675,"src":"6779:11:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$1631_$returns$__$","typeString":"function (enum ECDSA.RecoverError) pure"}},"id":1917,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6779:18:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1918,"nodeType":"ExpressionStatement","src":"6779:18:16"},{"expression":{"id":1919,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1904,"src":"6814:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1902,"id":1920,"nodeType":"Return","src":"6807:16:16"}]},"documentation":{"id":1890,"nodeType":"StructuredDocumentation","src":"6471:122:16","text":" @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":1922,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"6607:7:16","nodeType":"FunctionDefinition","parameters":{"id":1899,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1892,"mutability":"mutable","name":"hash","nameLocation":"6623:4:16","nodeType":"VariableDeclaration","scope":1922,"src":"6615:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1891,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6615:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1894,"mutability":"mutable","name":"v","nameLocation":"6635:1:16","nodeType":"VariableDeclaration","scope":1922,"src":"6629:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1893,"name":"uint8","nodeType":"ElementaryTypeName","src":"6629:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1896,"mutability":"mutable","name":"r","nameLocation":"6646:1:16","nodeType":"VariableDeclaration","scope":1922,"src":"6638:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1895,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6638:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1898,"mutability":"mutable","name":"s","nameLocation":"6657:1:16","nodeType":"VariableDeclaration","scope":1922,"src":"6649:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1897,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6649:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6614:45:16"},"returnParameters":{"id":1902,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1901,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1922,"src":"6683:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1900,"name":"address","nodeType":"ElementaryTypeName","src":"6683:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6682:9:16"},"scope":1987,"src":"6598:232:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1931,"nodeType":"Block","src":"7206:310:16","statements":[{"AST":{"nodeType":"YulBlock","src":"7362:148:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7383:4:16","type":"","value":"0x00"},{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a3332","kind":"string","nodeType":"YulLiteral","src":"7389:34:16","type":"","value":"\u0019Ethereum Signed Message:\n32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7376:6:16"},"nodeType":"YulFunctionCall","src":"7376:48:16"},"nodeType":"YulExpressionStatement","src":"7376:48:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7444:4:16","type":"","value":"0x1c"},{"name":"hash","nodeType":"YulIdentifier","src":"7450:4:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7437:6:16"},"nodeType":"YulFunctionCall","src":"7437:18:16"},"nodeType":"YulExpressionStatement","src":"7437:18:16"},{"nodeType":"YulAssignment","src":"7468:32:16","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7489:4:16","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"7495:4:16","type":"","value":"0x3c"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"7479:9:16"},"nodeType":"YulFunctionCall","src":"7479:21:16"},"variableNames":[{"name":"message","nodeType":"YulIdentifier","src":"7468:7:16"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1925,"isOffset":false,"isSlot":false,"src":"7450:4:16","valueSize":1},{"declaration":1928,"isOffset":false,"isSlot":false,"src":"7468:7:16","valueSize":1}],"id":1930,"nodeType":"InlineAssembly","src":"7353:157:16"}]},"documentation":{"id":1923,"nodeType":"StructuredDocumentation","src":"6836:279:16","text":" @dev Returns an Ethereum Signed Message, created from a `hash`. This\n produces hash corresponding to the one signed with the\n https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n JSON-RPC method as part of EIP-191.\n See {recover}."},"id":1932,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"7129:22:16","nodeType":"FunctionDefinition","parameters":{"id":1926,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1925,"mutability":"mutable","name":"hash","nameLocation":"7160:4:16","nodeType":"VariableDeclaration","scope":1932,"src":"7152:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1924,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7152:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7151:14:16"},"returnParameters":{"id":1929,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1928,"mutability":"mutable","name":"message","nameLocation":"7197:7:16","nodeType":"VariableDeclaration","scope":1932,"src":"7189:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1927,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7189:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7188:17:16"},"scope":1987,"src":"7120:396:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1953,"nodeType":"Block","src":"7881:116:16","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a","id":1943,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7925:32:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},"value":"\u0019Ethereum Signed Message:\n"},{"arguments":[{"expression":{"id":1946,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1935,"src":"7976:1:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7978:6:16","memberName":"length","nodeType":"MemberAccess","src":"7976:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1944,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1621,"src":"7959:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$1621_$","typeString":"type(library Strings)"}},"id":1945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7967:8:16","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":1451,"src":"7959:16:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":1948,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7959:26:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1949,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1935,"src":"7987:1:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1941,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"7908:3:16","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1942,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7912:12:16","memberName":"encodePacked","nodeType":"MemberAccess","src":"7908:16:16","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1950,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7908:81:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1940,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"7898:9:16","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1951,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7898:92:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1939,"id":1952,"nodeType":"Return","src":"7891:99:16"}]},"documentation":{"id":1933,"nodeType":"StructuredDocumentation","src":"7522:274:16","text":" @dev Returns an Ethereum Signed Message, created from `s`. This\n produces hash corresponding to the one signed with the\n https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n JSON-RPC method as part of EIP-191.\n See {recover}."},"id":1954,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"7810:22:16","nodeType":"FunctionDefinition","parameters":{"id":1936,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1935,"mutability":"mutable","name":"s","nameLocation":"7846:1:16","nodeType":"VariableDeclaration","scope":1954,"src":"7833:14:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1934,"name":"bytes","nodeType":"ElementaryTypeName","src":"7833:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7832:16:16"},"returnParameters":{"id":1939,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1938,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1954,"src":"7872:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1937,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7872:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7871:9:16"},"scope":1987,"src":"7801:196:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1965,"nodeType":"Block","src":"8443:290:16","statements":[{"AST":{"nodeType":"YulBlock","src":"8505:222:16","statements":[{"nodeType":"YulVariableDeclaration","src":"8519:22:16","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8536:4:16","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8530:5:16"},"nodeType":"YulFunctionCall","src":"8530:11:16"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"8523:3:16","type":""}]},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"8561:3:16"},{"hexValue":"1901","kind":"string","nodeType":"YulLiteral","src":"8566:10:16","type":"","value":"\u0019\u0001"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8554:6:16"},"nodeType":"YulFunctionCall","src":"8554:23:16"},"nodeType":"YulExpressionStatement","src":"8554:23:16"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"8601:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"8606:4:16","type":"","value":"0x02"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8597:3:16"},"nodeType":"YulFunctionCall","src":"8597:14:16"},{"name":"domainSeparator","nodeType":"YulIdentifier","src":"8613:15:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8590:6:16"},"nodeType":"YulFunctionCall","src":"8590:39:16"},"nodeType":"YulExpressionStatement","src":"8590:39:16"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"8653:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"8658:4:16","type":"","value":"0x22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8649:3:16"},"nodeType":"YulFunctionCall","src":"8649:14:16"},{"name":"structHash","nodeType":"YulIdentifier","src":"8665:10:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8642:6:16"},"nodeType":"YulFunctionCall","src":"8642:34:16"},"nodeType":"YulExpressionStatement","src":"8642:34:16"},{"nodeType":"YulAssignment","src":"8689:28:16","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"8707:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"8712:4:16","type":"","value":"0x42"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"8697:9:16"},"nodeType":"YulFunctionCall","src":"8697:20:16"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"8689:4:16"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1962,"isOffset":false,"isSlot":false,"src":"8689:4:16","valueSize":1},{"declaration":1957,"isOffset":false,"isSlot":false,"src":"8613:15:16","valueSize":1},{"declaration":1959,"isOffset":false,"isSlot":false,"src":"8665:10:16","valueSize":1}],"id":1964,"nodeType":"InlineAssembly","src":"8496:231:16"}]},"documentation":{"id":1955,"nodeType":"StructuredDocumentation","src":"8003:328:16","text":" @dev Returns an Ethereum Signed Typed Data, created from a\n `domainSeparator` and a `structHash`. This produces hash corresponding\n to the one signed with the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`]\n JSON-RPC method as part of EIP-712.\n See {recover}."},"id":1966,"implemented":true,"kind":"function","modifiers":[],"name":"toTypedDataHash","nameLocation":"8345:15:16","nodeType":"FunctionDefinition","parameters":{"id":1960,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1957,"mutability":"mutable","name":"domainSeparator","nameLocation":"8369:15:16","nodeType":"VariableDeclaration","scope":1966,"src":"8361:23:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1956,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8361:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1959,"mutability":"mutable","name":"structHash","nameLocation":"8394:10:16","nodeType":"VariableDeclaration","scope":1966,"src":"8386:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1958,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8386:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8360:45:16"},"returnParameters":{"id":1963,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1962,"mutability":"mutable","name":"data","nameLocation":"8437:4:16","nodeType":"VariableDeclaration","scope":1966,"src":"8429:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1961,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8429:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8428:14:16"},"scope":1987,"src":"8336:397:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1985,"nodeType":"Block","src":"9048:80:16","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"1900","id":1979,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9092:10:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},"value":"\u0019\u0000"},{"id":1980,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1969,"src":"9104:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1981,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1971,"src":"9115:4:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1977,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"9075:3:16","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1978,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9079:12:16","memberName":"encodePacked","nodeType":"MemberAccess","src":"9075:16:16","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1982,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9075:45:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1976,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"9065:9:16","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1983,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9065:56:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1975,"id":1984,"nodeType":"Return","src":"9058:63:16"}]},"documentation":{"id":1967,"nodeType":"StructuredDocumentation","src":"8739:193:16","text":" @dev Returns an Ethereum Signed Data with intended validator, created from a\n `validator` and `data` according to the version 0 of EIP-191.\n See {recover}."},"id":1986,"implemented":true,"kind":"function","modifiers":[],"name":"toDataWithIntendedValidatorHash","nameLocation":"8946:31:16","nodeType":"FunctionDefinition","parameters":{"id":1972,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1969,"mutability":"mutable","name":"validator","nameLocation":"8986:9:16","nodeType":"VariableDeclaration","scope":1986,"src":"8978:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1968,"name":"address","nodeType":"ElementaryTypeName","src":"8978:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1971,"mutability":"mutable","name":"data","nameLocation":"9010:4:16","nodeType":"VariableDeclaration","scope":1986,"src":"8997:17:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1970,"name":"bytes","nodeType":"ElementaryTypeName","src":"8997:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8977:38:16"},"returnParameters":{"id":1975,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1974,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1986,"src":"9039:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1973,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9039:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"9038:9:16"},"scope":1987,"src":"8937:191:16","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1988,"src":"369:8761:16","usedErrors":[]}],"src":"112:9019:16"},"id":16},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[1999]},"id":2000,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1989,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"100:23:17"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":1990,"nodeType":"StructuredDocumentation","src":"125:279:17","text":" @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":1999,"linearizedBaseContracts":[1999],"name":"IERC165","nameLocation":"415:7:17","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1991,"nodeType":"StructuredDocumentation","src":"429:340:17","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":1998,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"783:17:17","nodeType":"FunctionDefinition","parameters":{"id":1994,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1993,"mutability":"mutable","name":"interfaceId","nameLocation":"808:11:17","nodeType":"VariableDeclaration","scope":1998,"src":"801:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1992,"name":"bytes4","nodeType":"ElementaryTypeName","src":"801:6:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"800:20:17"},"returnParameters":{"id":1997,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1996,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1998,"src":"844:4:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1995,"name":"bool","nodeType":"ElementaryTypeName","src":"844:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"843:6:17"},"scope":1999,"src":"774:76:17","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2000,"src":"405:447:17","usedErrors":[]}],"src":"100:753:17"},"id":17},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[2865]},"id":2866,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2001,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"103:23:18"},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":2002,"nodeType":"StructuredDocumentation","src":"128:73:18","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":2865,"linearizedBaseContracts":[2865],"name":"Math","nameLocation":"210:4:18","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":2006,"members":[{"id":2003,"name":"Down","nameLocation":"245:4:18","nodeType":"EnumValue","src":"245:4:18"},{"id":2004,"name":"Up","nameLocation":"287:2:18","nodeType":"EnumValue","src":"287:2:18"},{"id":2005,"name":"Zero","nameLocation":"318:4:18","nodeType":"EnumValue","src":"318:4:18"}],"name":"Rounding","nameLocation":"226:8:18","nodeType":"EnumDefinition","src":"221:122:18"},{"body":{"id":2023,"nodeType":"Block","src":"480:37:18","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2016,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2009,"src":"497:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2017,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2011,"src":"501:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"497:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":2020,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2011,"src":"509:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"497:13:18","trueExpression":{"id":2019,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2009,"src":"505:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2015,"id":2022,"nodeType":"Return","src":"490:20:18"}]},"documentation":{"id":2007,"nodeType":"StructuredDocumentation","src":"349:59:18","text":" @dev Returns the largest of two numbers."},"id":2024,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"422:3:18","nodeType":"FunctionDefinition","parameters":{"id":2012,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2009,"mutability":"mutable","name":"a","nameLocation":"434:1:18","nodeType":"VariableDeclaration","scope":2024,"src":"426:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2008,"name":"uint256","nodeType":"ElementaryTypeName","src":"426:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2011,"mutability":"mutable","name":"b","nameLocation":"445:1:18","nodeType":"VariableDeclaration","scope":2024,"src":"437:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2010,"name":"uint256","nodeType":"ElementaryTypeName","src":"437:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"425:22:18"},"returnParameters":{"id":2015,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2014,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2024,"src":"471:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2013,"name":"uint256","nodeType":"ElementaryTypeName","src":"471:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"470:9:18"},"scope":2865,"src":"413:104:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2041,"nodeType":"Block","src":"655:37:18","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2034,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2027,"src":"672:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2035,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2029,"src":"676:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"672:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":2038,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2029,"src":"684:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"672:13:18","trueExpression":{"id":2037,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2027,"src":"680:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2033,"id":2040,"nodeType":"Return","src":"665:20:18"}]},"documentation":{"id":2025,"nodeType":"StructuredDocumentation","src":"523:60:18","text":" @dev Returns the smallest of two numbers."},"id":2042,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"597:3:18","nodeType":"FunctionDefinition","parameters":{"id":2030,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2027,"mutability":"mutable","name":"a","nameLocation":"609:1:18","nodeType":"VariableDeclaration","scope":2042,"src":"601:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2026,"name":"uint256","nodeType":"ElementaryTypeName","src":"601:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2029,"mutability":"mutable","name":"b","nameLocation":"620:1:18","nodeType":"VariableDeclaration","scope":2042,"src":"612:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2028,"name":"uint256","nodeType":"ElementaryTypeName","src":"612:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"600:22:18"},"returnParameters":{"id":2033,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2032,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2042,"src":"646:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2031,"name":"uint256","nodeType":"ElementaryTypeName","src":"646:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"645:9:18"},"scope":2865,"src":"588:104:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2064,"nodeType":"Block","src":"876:82:18","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2052,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2045,"src":"931:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":2053,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2047,"src":"935:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"931:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2055,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"930:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2056,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2045,"src":"941:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":2057,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2047,"src":"945:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"941:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2059,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"940:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":2060,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"950:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"940:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"930:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2051,"id":2063,"nodeType":"Return","src":"923:28:18"}]},"documentation":{"id":2043,"nodeType":"StructuredDocumentation","src":"698:102:18","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":2065,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"814:7:18","nodeType":"FunctionDefinition","parameters":{"id":2048,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2045,"mutability":"mutable","name":"a","nameLocation":"830:1:18","nodeType":"VariableDeclaration","scope":2065,"src":"822:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2044,"name":"uint256","nodeType":"ElementaryTypeName","src":"822:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2047,"mutability":"mutable","name":"b","nameLocation":"841:1:18","nodeType":"VariableDeclaration","scope":2065,"src":"833:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2046,"name":"uint256","nodeType":"ElementaryTypeName","src":"833:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"821:22:18"},"returnParameters":{"id":2051,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2050,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2065,"src":"867:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2049,"name":"uint256","nodeType":"ElementaryTypeName","src":"867:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"866:9:18"},"scope":2865,"src":"805:153:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2089,"nodeType":"Block","src":"1228:123:18","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2075,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2068,"src":"1316:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2076,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1321:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1316:6:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2079,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2068,"src":"1330:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2080,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1334:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1330:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2082,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1329:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2083,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2070,"src":"1339:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1329:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2085,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1343:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1329:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1316:28:18","trueExpression":{"hexValue":"30","id":2078,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1325:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2074,"id":2088,"nodeType":"Return","src":"1309:35:18"}]},"documentation":{"id":2066,"nodeType":"StructuredDocumentation","src":"964:188:18","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."},"id":2090,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"1166:7:18","nodeType":"FunctionDefinition","parameters":{"id":2071,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2068,"mutability":"mutable","name":"a","nameLocation":"1182:1:18","nodeType":"VariableDeclaration","scope":2090,"src":"1174:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2067,"name":"uint256","nodeType":"ElementaryTypeName","src":"1174:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2070,"mutability":"mutable","name":"b","nameLocation":"1193:1:18","nodeType":"VariableDeclaration","scope":2090,"src":"1185:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2069,"name":"uint256","nodeType":"ElementaryTypeName","src":"1185:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1173:22:18"},"returnParameters":{"id":2074,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2073,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2090,"src":"1219:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2072,"name":"uint256","nodeType":"ElementaryTypeName","src":"1219:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1218:9:18"},"scope":2865,"src":"1157:194:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2212,"nodeType":"Block","src":"1765:4115:18","statements":[{"id":2211,"nodeType":"UncheckedBlock","src":"1775:4099:18","statements":[{"assignments":[2103],"declarations":[{"constant":false,"id":2103,"mutability":"mutable","name":"prod0","nameLocation":"2104:5:18","nodeType":"VariableDeclaration","scope":2211,"src":"2096:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2102,"name":"uint256","nodeType":"ElementaryTypeName","src":"2096:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2104,"nodeType":"VariableDeclarationStatement","src":"2096:13:18"},{"assignments":[2106],"declarations":[{"constant":false,"id":2106,"mutability":"mutable","name":"prod1","nameLocation":"2176:5:18","nodeType":"VariableDeclaration","scope":2211,"src":"2168:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2105,"name":"uint256","nodeType":"ElementaryTypeName","src":"2168:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2107,"nodeType":"VariableDeclarationStatement","src":"2168:13:18"},{"AST":{"nodeType":"YulBlock","src":"2248:157:18","statements":[{"nodeType":"YulVariableDeclaration","src":"2266:30:18","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2283:1:18"},{"name":"y","nodeType":"YulIdentifier","src":"2286:1:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2293:1:18","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2289:3:18"},"nodeType":"YulFunctionCall","src":"2289:6:18"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"2276:6:18"},"nodeType":"YulFunctionCall","src":"2276:20:18"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"2270:2:18","type":""}]},{"nodeType":"YulAssignment","src":"2313:18:18","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2326:1:18"},{"name":"y","nodeType":"YulIdentifier","src":"2329:1:18"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2322:3:18"},"nodeType":"YulFunctionCall","src":"2322:9:18"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"2313:5:18"}]},{"nodeType":"YulAssignment","src":"2348:43:18","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2365:2:18"},{"name":"prod0","nodeType":"YulIdentifier","src":"2369:5:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2361:3:18"},"nodeType":"YulFunctionCall","src":"2361:14:18"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2380:2:18"},{"name":"prod0","nodeType":"YulIdentifier","src":"2384:5:18"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2377:2:18"},"nodeType":"YulFunctionCall","src":"2377:13:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2357:3:18"},"nodeType":"YulFunctionCall","src":"2357:34:18"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"2348:5:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2103,"isOffset":false,"isSlot":false,"src":"2313:5:18","valueSize":1},{"declaration":2103,"isOffset":false,"isSlot":false,"src":"2369:5:18","valueSize":1},{"declaration":2103,"isOffset":false,"isSlot":false,"src":"2384:5:18","valueSize":1},{"declaration":2106,"isOffset":false,"isSlot":false,"src":"2348:5:18","valueSize":1},{"declaration":2093,"isOffset":false,"isSlot":false,"src":"2283:1:18","valueSize":1},{"declaration":2093,"isOffset":false,"isSlot":false,"src":"2326:1:18","valueSize":1},{"declaration":2095,"isOffset":false,"isSlot":false,"src":"2286:1:18","valueSize":1},{"declaration":2095,"isOffset":false,"isSlot":false,"src":"2329:1:18","valueSize":1}],"id":2108,"nodeType":"InlineAssembly","src":"2239:166:18"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2109,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2106,"src":"2486:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2495:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2486:10:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2117,"nodeType":"IfStatement","src":"2482:368:18","trueBody":{"id":2116,"nodeType":"Block","src":"2498:352:18","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2112,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2103,"src":"2816:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2113,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2097,"src":"2824:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2816:19:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2101,"id":2115,"nodeType":"Return","src":"2809:26:18"}]}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2119,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2097,"src":"2960:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2120,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2106,"src":"2974:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2960:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d6174683a206d756c446976206f766572666c6f77","id":2122,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2981:23:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851","typeString":"literal_string \"Math: mulDiv overflow\""},"value":"Math: mulDiv overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851","typeString":"literal_string \"Math: mulDiv overflow\""}],"id":2118,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2952:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2952:53:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2124,"nodeType":"ExpressionStatement","src":"2952:53:18"},{"assignments":[2126],"declarations":[{"constant":false,"id":2126,"mutability":"mutable","name":"remainder","nameLocation":"3269:9:18","nodeType":"VariableDeclaration","scope":2211,"src":"3261:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2125,"name":"uint256","nodeType":"ElementaryTypeName","src":"3261:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2127,"nodeType":"VariableDeclarationStatement","src":"3261:17:18"},{"AST":{"nodeType":"YulBlock","src":"3301:291:18","statements":[{"nodeType":"YulAssignment","src":"3370:38:18","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3390:1:18"},{"name":"y","nodeType":"YulIdentifier","src":"3393:1:18"},{"name":"denominator","nodeType":"YulIdentifier","src":"3396:11:18"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"3383:6:18"},"nodeType":"YulFunctionCall","src":"3383:25:18"},"variableNames":[{"name":"remainder","nodeType":"YulIdentifier","src":"3370:9:18"}]},{"nodeType":"YulAssignment","src":"3490:41:18","value":{"arguments":[{"name":"prod1","nodeType":"YulIdentifier","src":"3503:5:18"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"3513:9:18"},{"name":"prod0","nodeType":"YulIdentifier","src":"3524:5:18"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3510:2:18"},"nodeType":"YulFunctionCall","src":"3510:20:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3499:3:18"},"nodeType":"YulFunctionCall","src":"3499:32:18"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"3490:5:18"}]},{"nodeType":"YulAssignment","src":"3548:30:18","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"3561:5:18"},{"name":"remainder","nodeType":"YulIdentifier","src":"3568:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3557:3:18"},"nodeType":"YulFunctionCall","src":"3557:21:18"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"3548:5:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2097,"isOffset":false,"isSlot":false,"src":"3396:11:18","valueSize":1},{"declaration":2103,"isOffset":false,"isSlot":false,"src":"3524:5:18","valueSize":1},{"declaration":2103,"isOffset":false,"isSlot":false,"src":"3548:5:18","valueSize":1},{"declaration":2103,"isOffset":false,"isSlot":false,"src":"3561:5:18","valueSize":1},{"declaration":2106,"isOffset":false,"isSlot":false,"src":"3490:5:18","valueSize":1},{"declaration":2106,"isOffset":false,"isSlot":false,"src":"3503:5:18","valueSize":1},{"declaration":2126,"isOffset":false,"isSlot":false,"src":"3370:9:18","valueSize":1},{"declaration":2126,"isOffset":false,"isSlot":false,"src":"3513:9:18","valueSize":1},{"declaration":2126,"isOffset":false,"isSlot":false,"src":"3568:9:18","valueSize":1},{"declaration":2093,"isOffset":false,"isSlot":false,"src":"3390:1:18","valueSize":1},{"declaration":2095,"isOffset":false,"isSlot":false,"src":"3393:1:18","valueSize":1}],"id":2128,"nodeType":"InlineAssembly","src":"3292:300:18"},{"assignments":[2130],"declarations":[{"constant":false,"id":2130,"mutability":"mutable","name":"twos","nameLocation":"3907:4:18","nodeType":"VariableDeclaration","scope":2211,"src":"3899:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2129,"name":"uint256","nodeType":"ElementaryTypeName","src":"3899:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2138,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2131,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2097,"src":"3914:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"~","prefix":true,"src":"3929:12:18","subExpression":{"id":2132,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2097,"src":"3930:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2134,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3944:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3929:16:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2136,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3928:18:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3914:32:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3899:47:18"},{"AST":{"nodeType":"YulBlock","src":"3969:362:18","statements":[{"nodeType":"YulAssignment","src":"4034:37:18","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"4053:11:18"},{"name":"twos","nodeType":"YulIdentifier","src":"4066:4:18"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4049:3:18"},"nodeType":"YulFunctionCall","src":"4049:22:18"},"variableNames":[{"name":"denominator","nodeType":"YulIdentifier","src":"4034:11:18"}]},{"nodeType":"YulAssignment","src":"4138:25:18","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"4151:5:18"},{"name":"twos","nodeType":"YulIdentifier","src":"4158:4:18"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4147:3:18"},"nodeType":"YulFunctionCall","src":"4147:16:18"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"4138:5:18"}]},{"nodeType":"YulAssignment","src":"4278:39:18","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4298:1:18","type":"","value":"0"},{"name":"twos","nodeType":"YulIdentifier","src":"4301:4:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4294:3:18"},"nodeType":"YulFunctionCall","src":"4294:12:18"},{"name":"twos","nodeType":"YulIdentifier","src":"4308:4:18"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4290:3:18"},"nodeType":"YulFunctionCall","src":"4290:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"4315:1:18","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4286:3:18"},"nodeType":"YulFunctionCall","src":"4286:31:18"},"variableNames":[{"name":"twos","nodeType":"YulIdentifier","src":"4278:4:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2097,"isOffset":false,"isSlot":false,"src":"4034:11:18","valueSize":1},{"declaration":2097,"isOffset":false,"isSlot":false,"src":"4053:11:18","valueSize":1},{"declaration":2103,"isOffset":false,"isSlot":false,"src":"4138:5:18","valueSize":1},{"declaration":2103,"isOffset":false,"isSlot":false,"src":"4151:5:18","valueSize":1},{"declaration":2130,"isOffset":false,"isSlot":false,"src":"4066:4:18","valueSize":1},{"declaration":2130,"isOffset":false,"isSlot":false,"src":"4158:4:18","valueSize":1},{"declaration":2130,"isOffset":false,"isSlot":false,"src":"4278:4:18","valueSize":1},{"declaration":2130,"isOffset":false,"isSlot":false,"src":"4301:4:18","valueSize":1},{"declaration":2130,"isOffset":false,"isSlot":false,"src":"4308:4:18","valueSize":1}],"id":2139,"nodeType":"InlineAssembly","src":"3960:371:18"},{"expression":{"id":2144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2140,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2103,"src":"4397:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2141,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2106,"src":"4406:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2142,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2130,"src":"4414:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4406:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4397:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2145,"nodeType":"ExpressionStatement","src":"4397:21:18"},{"assignments":[2147],"declarations":[{"constant":false,"id":2147,"mutability":"mutable","name":"inverse","nameLocation":"4744:7:18","nodeType":"VariableDeclaration","scope":2211,"src":"4736:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2146,"name":"uint256","nodeType":"ElementaryTypeName","src":"4736:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2154,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":2148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4755:1:18","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2149,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2097,"src":"4759:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4755:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2151,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4754:17:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":2152,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4774:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"4754:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4736:39:18"},{"expression":{"id":2161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2155,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2147,"src":"4992:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2156,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5003:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2157,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2097,"src":"5007:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2158,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2147,"src":"5021:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5007:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5003:25:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4992:36:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2162,"nodeType":"ExpressionStatement","src":"4992:36:18"},{"expression":{"id":2169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2163,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2147,"src":"5061:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2164,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5072:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2165,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2097,"src":"5076:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2166,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2147,"src":"5090:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5076:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5072:25:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5061:36:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2170,"nodeType":"ExpressionStatement","src":"5061:36:18"},{"expression":{"id":2177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2171,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2147,"src":"5131:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5142:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2173,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2097,"src":"5146:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2174,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2147,"src":"5160:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5146:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5142:25:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5131:36:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2178,"nodeType":"ExpressionStatement","src":"5131:36:18"},{"expression":{"id":2185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2179,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2147,"src":"5201:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2180,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5212:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2181,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2097,"src":"5216:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2182,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2147,"src":"5230:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5216:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5212:25:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5201:36:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2186,"nodeType":"ExpressionStatement","src":"5201:36:18"},{"expression":{"id":2193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2187,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2147,"src":"5271:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2188,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5282:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2189,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2097,"src":"5286:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2190,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2147,"src":"5300:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5286:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5282:25:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5271:36:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2194,"nodeType":"ExpressionStatement","src":"5271:36:18"},{"expression":{"id":2201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2195,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2147,"src":"5342:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2196,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5353:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2197,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2097,"src":"5357:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2198,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2147,"src":"5371:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5357:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5353:25:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5342:36:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2202,"nodeType":"ExpressionStatement","src":"5342:36:18"},{"expression":{"id":2207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2203,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2100,"src":"5812:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2204,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2103,"src":"5821:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2205,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2147,"src":"5829:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5821:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5812:24:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2208,"nodeType":"ExpressionStatement","src":"5812:24:18"},{"expression":{"id":2209,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2100,"src":"5857:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2101,"id":2210,"nodeType":"Return","src":"5850:13:18"}]}]},"documentation":{"id":2091,"nodeType":"StructuredDocumentation","src":"1357:305:18","text":" @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."},"id":2213,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"1676:6:18","nodeType":"FunctionDefinition","parameters":{"id":2098,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2093,"mutability":"mutable","name":"x","nameLocation":"1691:1:18","nodeType":"VariableDeclaration","scope":2213,"src":"1683:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2092,"name":"uint256","nodeType":"ElementaryTypeName","src":"1683:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2095,"mutability":"mutable","name":"y","nameLocation":"1702:1:18","nodeType":"VariableDeclaration","scope":2213,"src":"1694:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2094,"name":"uint256","nodeType":"ElementaryTypeName","src":"1694:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2097,"mutability":"mutable","name":"denominator","nameLocation":"1713:11:18","nodeType":"VariableDeclaration","scope":2213,"src":"1705:19:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2096,"name":"uint256","nodeType":"ElementaryTypeName","src":"1705:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1682:43:18"},"returnParameters":{"id":2101,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2100,"mutability":"mutable","name":"result","nameLocation":"1757:6:18","nodeType":"VariableDeclaration","scope":2213,"src":"1749:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2099,"name":"uint256","nodeType":"ElementaryTypeName","src":"1749:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1748:16:18"},"scope":2865,"src":"1667:4213:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2256,"nodeType":"Block","src":"6122:189:18","statements":[{"assignments":[2229],"declarations":[{"constant":false,"id":2229,"mutability":"mutable","name":"result","nameLocation":"6140:6:18","nodeType":"VariableDeclaration","scope":2256,"src":"6132:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2228,"name":"uint256","nodeType":"ElementaryTypeName","src":"6132:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2235,"initialValue":{"arguments":[{"id":2231,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2216,"src":"6156:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2232,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2218,"src":"6159:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2233,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2220,"src":"6162:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2230,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[2213,2257],"referencedDeclaration":2213,"src":"6149:6:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":2234,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6149:25:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6132:42:18"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$2006","typeString":"enum Math.Rounding"},"id":2239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2236,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2223,"src":"6188:8:18","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2006","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2237,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2006,"src":"6200:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$2006_$","typeString":"type(enum Math.Rounding)"}},"id":2238,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6209:2:18","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":2004,"src":"6200:11:18","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2006","typeString":"enum Math.Rounding"}},"src":"6188:23:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2241,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2216,"src":"6222:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2242,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2218,"src":"6225:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2243,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2220,"src":"6228:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2240,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"6215:6:18","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":2244,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6215:25:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2245,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6243:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6215:29:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6188:56:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2253,"nodeType":"IfStatement","src":"6184:98:18","trueBody":{"id":2252,"nodeType":"Block","src":"6246:36:18","statements":[{"expression":{"id":2250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2248,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2229,"src":"6260:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2249,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6270:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6260:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2251,"nodeType":"ExpressionStatement","src":"6260:11:18"}]}},{"expression":{"id":2254,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2229,"src":"6298:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2227,"id":2255,"nodeType":"Return","src":"6291:13:18"}]},"documentation":{"id":2214,"nodeType":"StructuredDocumentation","src":"5886:121:18","text":" @notice Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":2257,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"6021:6:18","nodeType":"FunctionDefinition","parameters":{"id":2224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2216,"mutability":"mutable","name":"x","nameLocation":"6036:1:18","nodeType":"VariableDeclaration","scope":2257,"src":"6028:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2215,"name":"uint256","nodeType":"ElementaryTypeName","src":"6028:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2218,"mutability":"mutable","name":"y","nameLocation":"6047:1:18","nodeType":"VariableDeclaration","scope":2257,"src":"6039:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2217,"name":"uint256","nodeType":"ElementaryTypeName","src":"6039:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2220,"mutability":"mutable","name":"denominator","nameLocation":"6058:11:18","nodeType":"VariableDeclaration","scope":2257,"src":"6050:19:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2219,"name":"uint256","nodeType":"ElementaryTypeName","src":"6050:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2223,"mutability":"mutable","name":"rounding","nameLocation":"6080:8:18","nodeType":"VariableDeclaration","scope":2257,"src":"6071:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2006","typeString":"enum Math.Rounding"},"typeName":{"id":2222,"nodeType":"UserDefinedTypeName","pathNode":{"id":2221,"name":"Rounding","nameLocations":["6071:8:18"],"nodeType":"IdentifierPath","referencedDeclaration":2006,"src":"6071:8:18"},"referencedDeclaration":2006,"src":"6071:8:18","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2006","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"6027:62:18"},"returnParameters":{"id":2227,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2226,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2257,"src":"6113:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2225,"name":"uint256","nodeType":"ElementaryTypeName","src":"6113:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6112:9:18"},"scope":2865,"src":"6012:299:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2368,"nodeType":"Block","src":"6587:1585:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2265,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2260,"src":"6601:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2266,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6606:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6601:6:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2271,"nodeType":"IfStatement","src":"6597:45:18","trueBody":{"id":2270,"nodeType":"Block","src":"6609:33:18","statements":[{"expression":{"hexValue":"30","id":2268,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6630:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2264,"id":2269,"nodeType":"Return","src":"6623:8:18"}]}},{"assignments":[2273],"declarations":[{"constant":false,"id":2273,"mutability":"mutable","name":"result","nameLocation":"7329:6:18","nodeType":"VariableDeclaration","scope":2368,"src":"7321:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2272,"name":"uint256","nodeType":"ElementaryTypeName","src":"7321:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2282,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2274,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7338:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2276,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2260,"src":"7349:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2275,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[2537,2573],"referencedDeclaration":2537,"src":"7344:4:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2277,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7344:7:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2278,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7355:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7344:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2280,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7343:14:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7338:19:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7321:36:18"},{"id":2367,"nodeType":"UncheckedBlock","src":"7758:408:18","statements":[{"expression":{"id":2292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2283,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2273,"src":"7782:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2284,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2273,"src":"7792:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2285,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2260,"src":"7801:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2286,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2273,"src":"7805:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7801:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7792:19:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2289,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7791:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2290,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7816:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7791:26:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7782:35:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2293,"nodeType":"ExpressionStatement","src":"7782:35:18"},{"expression":{"id":2303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2294,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2273,"src":"7831:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2295,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2273,"src":"7841:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2296,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2260,"src":"7850:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2297,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2273,"src":"7854:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7850:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7841:19:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2300,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7840:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2301,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7865:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7840:26:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7831:35:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2304,"nodeType":"ExpressionStatement","src":"7831:35:18"},{"expression":{"id":2314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2305,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2273,"src":"7880:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2306,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2273,"src":"7890:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2307,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2260,"src":"7899:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2308,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2273,"src":"7903:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7899:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7890:19:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2311,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7889:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2312,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7914:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7889:26:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7880:35:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2315,"nodeType":"ExpressionStatement","src":"7880:35:18"},{"expression":{"id":2325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2316,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2273,"src":"7929:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2317,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2273,"src":"7939:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2318,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2260,"src":"7948:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2319,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2273,"src":"7952:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7948:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7939:19:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2322,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7938:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2323,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7963:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7938:26:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7929:35:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2326,"nodeType":"ExpressionStatement","src":"7929:35:18"},{"expression":{"id":2336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2327,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2273,"src":"7978:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2328,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2273,"src":"7988:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2329,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2260,"src":"7997:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2330,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2273,"src":"8001:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7997:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7988:19:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2333,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7987:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2334,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8012:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7987:26:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7978:35:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2337,"nodeType":"ExpressionStatement","src":"7978:35:18"},{"expression":{"id":2347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2338,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2273,"src":"8027:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2339,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2273,"src":"8037:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2340,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2260,"src":"8046:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2341,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2273,"src":"8050:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8046:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8037:19:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2344,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8036:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2345,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8061:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8036:26:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8027:35:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2348,"nodeType":"ExpressionStatement","src":"8027:35:18"},{"expression":{"id":2358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2349,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2273,"src":"8076:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2350,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2273,"src":"8086:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2351,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2260,"src":"8095:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2352,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2273,"src":"8099:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8095:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8086:19:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2355,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8085:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2356,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8110:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8085:26:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8076:35:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2359,"nodeType":"ExpressionStatement","src":"8076:35:18"},{"expression":{"arguments":[{"id":2361,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2273,"src":"8136:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2362,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2260,"src":"8144:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2363,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2273,"src":"8148:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8144:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2360,"name":"min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2042,"src":"8132:3:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2365,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8132:23:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2264,"id":2366,"nodeType":"Return","src":"8125:30:18"}]}]},"documentation":{"id":2258,"nodeType":"StructuredDocumentation","src":"6317:208:18","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."},"id":2369,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"6539:4:18","nodeType":"FunctionDefinition","parameters":{"id":2261,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2260,"mutability":"mutable","name":"a","nameLocation":"6552:1:18","nodeType":"VariableDeclaration","scope":2369,"src":"6544:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2259,"name":"uint256","nodeType":"ElementaryTypeName","src":"6544:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6543:11:18"},"returnParameters":{"id":2264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2263,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2369,"src":"6578:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2262,"name":"uint256","nodeType":"ElementaryTypeName","src":"6578:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6577:9:18"},"scope":2865,"src":"6530:1642:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2404,"nodeType":"Block","src":"8348:161:18","statements":[{"id":2403,"nodeType":"UncheckedBlock","src":"8358:145:18","statements":[{"assignments":[2381],"declarations":[{"constant":false,"id":2381,"mutability":"mutable","name":"result","nameLocation":"8390:6:18","nodeType":"VariableDeclaration","scope":2403,"src":"8382:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2380,"name":"uint256","nodeType":"ElementaryTypeName","src":"8382:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2385,"initialValue":{"arguments":[{"id":2383,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2372,"src":"8404:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2382,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[2369,2405],"referencedDeclaration":2369,"src":"8399:4:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2384,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8399:7:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8382:24:18"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2386,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2381,"src":"8427:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$2006","typeString":"enum Math.Rounding"},"id":2390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2387,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2375,"src":"8437:8:18","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2006","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2388,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2006,"src":"8449:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$2006_$","typeString":"type(enum Math.Rounding)"}},"id":2389,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8458:2:18","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":2004,"src":"8449:11:18","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2006","typeString":"enum Math.Rounding"}},"src":"8437:23:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2391,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2381,"src":"8464:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2392,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2381,"src":"8473:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8464:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2394,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2372,"src":"8482:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8464:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8437:46:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":2398,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8490:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":2399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8437:54:18","trueExpression":{"hexValue":"31","id":2397,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8486:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2400,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8436:56:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"8427:65:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2379,"id":2402,"nodeType":"Return","src":"8420:72:18"}]}]},"documentation":{"id":2370,"nodeType":"StructuredDocumentation","src":"8178:89:18","text":" @notice Calculates sqrt(a), following the selected rounding direction."},"id":2405,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"8281:4:18","nodeType":"FunctionDefinition","parameters":{"id":2376,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2372,"mutability":"mutable","name":"a","nameLocation":"8294:1:18","nodeType":"VariableDeclaration","scope":2405,"src":"8286:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2371,"name":"uint256","nodeType":"ElementaryTypeName","src":"8286:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2375,"mutability":"mutable","name":"rounding","nameLocation":"8306:8:18","nodeType":"VariableDeclaration","scope":2405,"src":"8297:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2006","typeString":"enum Math.Rounding"},"typeName":{"id":2374,"nodeType":"UserDefinedTypeName","pathNode":{"id":2373,"name":"Rounding","nameLocations":["8297:8:18"],"nodeType":"IdentifierPath","referencedDeclaration":2006,"src":"8297:8:18"},"referencedDeclaration":2006,"src":"8297:8:18","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2006","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"8285:30:18"},"returnParameters":{"id":2379,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2378,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2405,"src":"8339:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2377,"name":"uint256","nodeType":"ElementaryTypeName","src":"8339:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8338:9:18"},"scope":2865,"src":"8272:237:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2536,"nodeType":"Block","src":"8694:922:18","statements":[{"assignments":[2414],"declarations":[{"constant":false,"id":2414,"mutability":"mutable","name":"result","nameLocation":"8712:6:18","nodeType":"VariableDeclaration","scope":2536,"src":"8704:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2413,"name":"uint256","nodeType":"ElementaryTypeName","src":"8704:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2416,"initialValue":{"hexValue":"30","id":2415,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8721:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8704:18:18"},{"id":2533,"nodeType":"UncheckedBlock","src":"8732:855:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2417,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2408,"src":"8760:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":2418,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8769:3:18","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8760:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2420,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8775:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8760:16:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2431,"nodeType":"IfStatement","src":"8756:99:18","trueBody":{"id":2430,"nodeType":"Block","src":"8778:77:18","statements":[{"expression":{"id":2424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2422,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2408,"src":"8796:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":2423,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8806:3:18","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8796:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2425,"nodeType":"ExpressionStatement","src":"8796:13:18"},{"expression":{"id":2428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2426,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2414,"src":"8827:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"313238","id":2427,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8837:3:18","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8827:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2429,"nodeType":"ExpressionStatement","src":"8827:13:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2432,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2408,"src":"8872:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":2433,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8881:2:18","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8872:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2435,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8886:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8872:15:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2446,"nodeType":"IfStatement","src":"8868:96:18","trueBody":{"id":2445,"nodeType":"Block","src":"8889:75:18","statements":[{"expression":{"id":2439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2437,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2408,"src":"8907:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":2438,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8917:2:18","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8907:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2440,"nodeType":"ExpressionStatement","src":"8907:12:18"},{"expression":{"id":2443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2441,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2414,"src":"8937:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":2442,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8947:2:18","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8937:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2444,"nodeType":"ExpressionStatement","src":"8937:12:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2447,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2408,"src":"8981:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":2448,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8990:2:18","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"8981:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2450,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8995:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8981:15:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2461,"nodeType":"IfStatement","src":"8977:96:18","trueBody":{"id":2460,"nodeType":"Block","src":"8998:75:18","statements":[{"expression":{"id":2454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2452,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2408,"src":"9016:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":2453,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9026:2:18","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"9016:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2455,"nodeType":"ExpressionStatement","src":"9016:12:18"},{"expression":{"id":2458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2456,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2414,"src":"9046:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":2457,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9056:2:18","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"9046:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2459,"nodeType":"ExpressionStatement","src":"9046:12:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2462,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2408,"src":"9090:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":2463,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9099:2:18","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9090:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2465,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9104:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9090:15:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2476,"nodeType":"IfStatement","src":"9086:96:18","trueBody":{"id":2475,"nodeType":"Block","src":"9107:75:18","statements":[{"expression":{"id":2469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2467,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2408,"src":"9125:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":2468,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9135:2:18","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9125:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2470,"nodeType":"ExpressionStatement","src":"9125:12:18"},{"expression":{"id":2473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2471,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2414,"src":"9155:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":2472,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9165:2:18","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9155:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2474,"nodeType":"ExpressionStatement","src":"9155:12:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2477,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2408,"src":"9199:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":2478,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9208:1:18","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9199:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2480,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9212:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9199:14:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2491,"nodeType":"IfStatement","src":"9195:93:18","trueBody":{"id":2490,"nodeType":"Block","src":"9215:73:18","statements":[{"expression":{"id":2484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2482,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2408,"src":"9233:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":2483,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9243:1:18","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9233:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2485,"nodeType":"ExpressionStatement","src":"9233:11:18"},{"expression":{"id":2488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2486,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2414,"src":"9262:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":2487,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9272:1:18","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9262:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2489,"nodeType":"ExpressionStatement","src":"9262:11:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2492,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2408,"src":"9305:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"34","id":2493,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9314:1:18","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9305:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9318:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9305:14:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2506,"nodeType":"IfStatement","src":"9301:93:18","trueBody":{"id":2505,"nodeType":"Block","src":"9321:73:18","statements":[{"expression":{"id":2499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2497,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2408,"src":"9339:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":2498,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9349:1:18","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9339:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2500,"nodeType":"ExpressionStatement","src":"9339:11:18"},{"expression":{"id":2503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2501,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2414,"src":"9368:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":2502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9378:1:18","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9368:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2504,"nodeType":"ExpressionStatement","src":"9368:11:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2507,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2408,"src":"9411:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"32","id":2508,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9420:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9411:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2510,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9424:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9411:14:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2521,"nodeType":"IfStatement","src":"9407:93:18","trueBody":{"id":2520,"nodeType":"Block","src":"9427:73:18","statements":[{"expression":{"id":2514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2512,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2408,"src":"9445:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"32","id":2513,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9455:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9445:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2515,"nodeType":"ExpressionStatement","src":"9445:11:18"},{"expression":{"id":2518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2516,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2414,"src":"9474:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":2517,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9484:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9474:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2519,"nodeType":"ExpressionStatement","src":"9474:11:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2522,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2408,"src":"9517:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2523,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9526:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9517:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2525,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9530:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9517:14:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2532,"nodeType":"IfStatement","src":"9513:64:18","trueBody":{"id":2531,"nodeType":"Block","src":"9533:44:18","statements":[{"expression":{"id":2529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2527,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2414,"src":"9551:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2528,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9561:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9551:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2530,"nodeType":"ExpressionStatement","src":"9551:11:18"}]}}]},{"expression":{"id":2534,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2414,"src":"9603:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2412,"id":2535,"nodeType":"Return","src":"9596:13:18"}]},"documentation":{"id":2406,"nodeType":"StructuredDocumentation","src":"8515:113:18","text":" @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."},"id":2537,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"8642:4:18","nodeType":"FunctionDefinition","parameters":{"id":2409,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2408,"mutability":"mutable","name":"value","nameLocation":"8655:5:18","nodeType":"VariableDeclaration","scope":2537,"src":"8647:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2407,"name":"uint256","nodeType":"ElementaryTypeName","src":"8647:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8646:15:18"},"returnParameters":{"id":2412,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2411,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2537,"src":"8685:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2410,"name":"uint256","nodeType":"ElementaryTypeName","src":"8685:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8684:9:18"},"scope":2865,"src":"8633:983:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2572,"nodeType":"Block","src":"9849:165:18","statements":[{"id":2571,"nodeType":"UncheckedBlock","src":"9859:149:18","statements":[{"assignments":[2549],"declarations":[{"constant":false,"id":2549,"mutability":"mutable","name":"result","nameLocation":"9891:6:18","nodeType":"VariableDeclaration","scope":2571,"src":"9883:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2548,"name":"uint256","nodeType":"ElementaryTypeName","src":"9883:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2553,"initialValue":{"arguments":[{"id":2551,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2540,"src":"9905:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2550,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[2537,2573],"referencedDeclaration":2537,"src":"9900:4:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2552,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9900:11:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9883:28:18"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2554,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2549,"src":"9932:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$2006","typeString":"enum Math.Rounding"},"id":2558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2555,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2543,"src":"9942:8:18","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2006","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2556,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2006,"src":"9954:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$2006_$","typeString":"type(enum Math.Rounding)"}},"id":2557,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9963:2:18","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":2004,"src":"9954:11:18","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2006","typeString":"enum Math.Rounding"}},"src":"9942:23:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2559,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9969:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":2560,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2549,"src":"9974:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9969:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2562,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2540,"src":"9983:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9969:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9942:46:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":2566,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9995:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":2567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9942:54:18","trueExpression":{"hexValue":"31","id":2565,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9991:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2568,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9941:56:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"9932:65:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2547,"id":2570,"nodeType":"Return","src":"9925:72:18"}]}]},"documentation":{"id":2538,"nodeType":"StructuredDocumentation","src":"9622:142:18","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":2573,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"9778:4:18","nodeType":"FunctionDefinition","parameters":{"id":2544,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2540,"mutability":"mutable","name":"value","nameLocation":"9791:5:18","nodeType":"VariableDeclaration","scope":2573,"src":"9783:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2539,"name":"uint256","nodeType":"ElementaryTypeName","src":"9783:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2543,"mutability":"mutable","name":"rounding","nameLocation":"9807:8:18","nodeType":"VariableDeclaration","scope":2573,"src":"9798:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2006","typeString":"enum Math.Rounding"},"typeName":{"id":2542,"nodeType":"UserDefinedTypeName","pathNode":{"id":2541,"name":"Rounding","nameLocations":["9798:8:18"],"nodeType":"IdentifierPath","referencedDeclaration":2006,"src":"9798:8:18"},"referencedDeclaration":2006,"src":"9798:8:18","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2006","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"9782:34:18"},"returnParameters":{"id":2547,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2546,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2573,"src":"9840:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2545,"name":"uint256","nodeType":"ElementaryTypeName","src":"9840:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9839:9:18"},"scope":2865,"src":"9769:245:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2701,"nodeType":"Block","src":"10201:854:18","statements":[{"assignments":[2582],"declarations":[{"constant":false,"id":2582,"mutability":"mutable","name":"result","nameLocation":"10219:6:18","nodeType":"VariableDeclaration","scope":2701,"src":"10211:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2581,"name":"uint256","nodeType":"ElementaryTypeName","src":"10211:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2584,"initialValue":{"hexValue":"30","id":2583,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10228:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10211:18:18"},{"id":2698,"nodeType":"UncheckedBlock","src":"10239:787:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2585,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2576,"src":"10267:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":2588,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2586,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10276:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":2587,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10282:2:18","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10276:8:18","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10267:17:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2601,"nodeType":"IfStatement","src":"10263:103:18","trueBody":{"id":2600,"nodeType":"Block","src":"10286:80:18","statements":[{"expression":{"id":2594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2590,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2576,"src":"10304:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":2593,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2591,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10313:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":2592,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10319:2:18","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10313:8:18","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10304:17:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2595,"nodeType":"ExpressionStatement","src":"10304:17:18"},{"expression":{"id":2598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2596,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2582,"src":"10339:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":2597,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10349:2:18","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10339:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2599,"nodeType":"ExpressionStatement","src":"10339:12:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2602,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2576,"src":"10383:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":2605,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2603,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10392:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":2604,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10398:2:18","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10392:8:18","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10383:17:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2618,"nodeType":"IfStatement","src":"10379:103:18","trueBody":{"id":2617,"nodeType":"Block","src":"10402:80:18","statements":[{"expression":{"id":2611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2607,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2576,"src":"10420:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":2610,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2608,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10429:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":2609,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10435:2:18","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10429:8:18","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10420:17:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2612,"nodeType":"ExpressionStatement","src":"10420:17:18"},{"expression":{"id":2615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2613,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2582,"src":"10455:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":2614,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10465:2:18","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10455:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2616,"nodeType":"ExpressionStatement","src":"10455:12:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2619,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2576,"src":"10499:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":2622,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2620,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10508:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":2621,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10514:2:18","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10508:8:18","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10499:17:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2635,"nodeType":"IfStatement","src":"10495:103:18","trueBody":{"id":2634,"nodeType":"Block","src":"10518:80:18","statements":[{"expression":{"id":2628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2624,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2576,"src":"10536:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":2627,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2625,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10545:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":2626,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10551:2:18","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10545:8:18","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10536:17:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2629,"nodeType":"ExpressionStatement","src":"10536:17:18"},{"expression":{"id":2632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2630,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2582,"src":"10571:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":2631,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10581:2:18","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10571:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2633,"nodeType":"ExpressionStatement","src":"10571:12:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2636,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2576,"src":"10615:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":2639,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2637,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10624:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":2638,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10630:1:18","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10624:7:18","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10615:16:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2652,"nodeType":"IfStatement","src":"10611:100:18","trueBody":{"id":2651,"nodeType":"Block","src":"10633:78:18","statements":[{"expression":{"id":2645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2641,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2576,"src":"10651:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":2644,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10660:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":2643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10666:1:18","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10660:7:18","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10651:16:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2646,"nodeType":"ExpressionStatement","src":"10651:16:18"},{"expression":{"id":2649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2647,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2582,"src":"10685:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":2648,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10695:1:18","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10685:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2650,"nodeType":"ExpressionStatement","src":"10685:11:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2653,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2576,"src":"10728:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":2656,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2654,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10737:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":2655,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10743:1:18","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10737:7:18","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10728:16:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2669,"nodeType":"IfStatement","src":"10724:100:18","trueBody":{"id":2668,"nodeType":"Block","src":"10746:78:18","statements":[{"expression":{"id":2662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2658,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2576,"src":"10764:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":2661,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2659,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10773:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":2660,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10779:1:18","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10773:7:18","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10764:16:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2663,"nodeType":"ExpressionStatement","src":"10764:16:18"},{"expression":{"id":2666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2664,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2582,"src":"10798:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":2665,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10808:1:18","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10798:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2667,"nodeType":"ExpressionStatement","src":"10798:11:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2670,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2576,"src":"10841:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":2673,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2671,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10850:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":2672,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10856:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10850:7:18","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10841:16:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2686,"nodeType":"IfStatement","src":"10837:100:18","trueBody":{"id":2685,"nodeType":"Block","src":"10859:78:18","statements":[{"expression":{"id":2679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2675,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2576,"src":"10877:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":2678,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2676,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10886:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":2677,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10892:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10886:7:18","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10877:16:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2680,"nodeType":"ExpressionStatement","src":"10877:16:18"},{"expression":{"id":2683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2681,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2582,"src":"10911:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":2682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10921:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10911:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2684,"nodeType":"ExpressionStatement","src":"10911:11:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2687,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2576,"src":"10954:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":2690,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2688,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10963:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":2689,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10969:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10963:7:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"10954:16:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2697,"nodeType":"IfStatement","src":"10950:66:18","trueBody":{"id":2696,"nodeType":"Block","src":"10972:44:18","statements":[{"expression":{"id":2694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2692,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2582,"src":"10990:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2693,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11000:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10990:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2695,"nodeType":"ExpressionStatement","src":"10990:11:18"}]}}]},{"expression":{"id":2699,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2582,"src":"11042:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2580,"id":2700,"nodeType":"Return","src":"11035:13:18"}]},"documentation":{"id":2574,"nodeType":"StructuredDocumentation","src":"10020:114:18","text":" @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."},"id":2702,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"10148:5:18","nodeType":"FunctionDefinition","parameters":{"id":2577,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2576,"mutability":"mutable","name":"value","nameLocation":"10162:5:18","nodeType":"VariableDeclaration","scope":2702,"src":"10154:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2575,"name":"uint256","nodeType":"ElementaryTypeName","src":"10154:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10153:15:18"},"returnParameters":{"id":2580,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2579,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2702,"src":"10192:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2578,"name":"uint256","nodeType":"ElementaryTypeName","src":"10192:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10191:9:18"},"scope":2865,"src":"10139:916:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2737,"nodeType":"Block","src":"11290:167:18","statements":[{"id":2736,"nodeType":"UncheckedBlock","src":"11300:151:18","statements":[{"assignments":[2714],"declarations":[{"constant":false,"id":2714,"mutability":"mutable","name":"result","nameLocation":"11332:6:18","nodeType":"VariableDeclaration","scope":2736,"src":"11324:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2713,"name":"uint256","nodeType":"ElementaryTypeName","src":"11324:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2718,"initialValue":{"arguments":[{"id":2716,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2705,"src":"11347:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2715,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[2702,2738],"referencedDeclaration":2702,"src":"11341:5:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2717,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11341:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11324:29:18"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2719,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2714,"src":"11374:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$2006","typeString":"enum Math.Rounding"},"id":2723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2720,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2708,"src":"11384:8:18","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2006","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2721,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2006,"src":"11396:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$2006_$","typeString":"type(enum Math.Rounding)"}},"id":2722,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11405:2:18","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":2004,"src":"11396:11:18","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2006","typeString":"enum Math.Rounding"}},"src":"11384:23:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2724,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11411:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":2725,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2714,"src":"11417:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11411:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2727,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2705,"src":"11426:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11411:20:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11384:47:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":2731,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11438:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":2732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"11384:55:18","trueExpression":{"hexValue":"31","id":2730,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11434:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2733,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11383:57:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11374:66:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2712,"id":2735,"nodeType":"Return","src":"11367:73:18"}]}]},"documentation":{"id":2703,"nodeType":"StructuredDocumentation","src":"11061:143:18","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":2738,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"11218:5:18","nodeType":"FunctionDefinition","parameters":{"id":2709,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2705,"mutability":"mutable","name":"value","nameLocation":"11232:5:18","nodeType":"VariableDeclaration","scope":2738,"src":"11224:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2704,"name":"uint256","nodeType":"ElementaryTypeName","src":"11224:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2708,"mutability":"mutable","name":"rounding","nameLocation":"11248:8:18","nodeType":"VariableDeclaration","scope":2738,"src":"11239:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2006","typeString":"enum Math.Rounding"},"typeName":{"id":2707,"nodeType":"UserDefinedTypeName","pathNode":{"id":2706,"name":"Rounding","nameLocations":["11239:8:18"],"nodeType":"IdentifierPath","referencedDeclaration":2006,"src":"11239:8:18"},"referencedDeclaration":2006,"src":"11239:8:18","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2006","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11223:34:18"},"returnParameters":{"id":2712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2711,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2738,"src":"11281:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2710,"name":"uint256","nodeType":"ElementaryTypeName","src":"11281:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11280:9:18"},"scope":2865,"src":"11209:248:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2824,"nodeType":"Block","src":"11771:600:18","statements":[{"assignments":[2747],"declarations":[{"constant":false,"id":2747,"mutability":"mutable","name":"result","nameLocation":"11789:6:18","nodeType":"VariableDeclaration","scope":2824,"src":"11781:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2746,"name":"uint256","nodeType":"ElementaryTypeName","src":"11781:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2749,"initialValue":{"hexValue":"30","id":2748,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11798:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11781:18:18"},{"id":2821,"nodeType":"UncheckedBlock","src":"11809:533:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2750,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2741,"src":"11837:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":2751,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11846:3:18","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11837:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2753,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11852:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11837:16:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2764,"nodeType":"IfStatement","src":"11833:98:18","trueBody":{"id":2763,"nodeType":"Block","src":"11855:76:18","statements":[{"expression":{"id":2757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2755,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2741,"src":"11873:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":2756,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11883:3:18","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11873:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2758,"nodeType":"ExpressionStatement","src":"11873:13:18"},{"expression":{"id":2761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2759,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2747,"src":"11904:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":2760,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11914:2:18","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11904:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2762,"nodeType":"ExpressionStatement","src":"11904:12:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2765,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2741,"src":"11948:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":2766,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11957:2:18","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11948:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2768,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11962:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11948:15:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2779,"nodeType":"IfStatement","src":"11944:95:18","trueBody":{"id":2778,"nodeType":"Block","src":"11965:74:18","statements":[{"expression":{"id":2772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2770,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2741,"src":"11983:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":2771,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11993:2:18","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11983:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2773,"nodeType":"ExpressionStatement","src":"11983:12:18"},{"expression":{"id":2776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2774,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2747,"src":"12013:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":2775,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12023:1:18","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12013:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2777,"nodeType":"ExpressionStatement","src":"12013:11:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2784,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2780,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2741,"src":"12056:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":2781,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12065:2:18","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12056:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2783,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12070:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12056:15:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2794,"nodeType":"IfStatement","src":"12052:95:18","trueBody":{"id":2793,"nodeType":"Block","src":"12073:74:18","statements":[{"expression":{"id":2787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2785,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2741,"src":"12091:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":2786,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12101:2:18","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12091:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2788,"nodeType":"ExpressionStatement","src":"12091:12:18"},{"expression":{"id":2791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2789,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2747,"src":"12121:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":2790,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12131:1:18","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12121:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2792,"nodeType":"ExpressionStatement","src":"12121:11:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2795,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2741,"src":"12164:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":2796,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12173:2:18","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12164:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2798,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12178:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12164:15:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2809,"nodeType":"IfStatement","src":"12160:95:18","trueBody":{"id":2808,"nodeType":"Block","src":"12181:74:18","statements":[{"expression":{"id":2802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2800,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2741,"src":"12199:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":2801,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12209:2:18","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12199:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2803,"nodeType":"ExpressionStatement","src":"12199:12:18"},{"expression":{"id":2806,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2804,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2747,"src":"12229:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":2805,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12239:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12229:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2807,"nodeType":"ExpressionStatement","src":"12229:11:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2810,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2741,"src":"12272:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":2811,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12281:1:18","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12272:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2813,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12285:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12272:14:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2820,"nodeType":"IfStatement","src":"12268:64:18","trueBody":{"id":2819,"nodeType":"Block","src":"12288:44:18","statements":[{"expression":{"id":2817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2815,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2747,"src":"12306:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2816,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12316:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12306:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2818,"nodeType":"ExpressionStatement","src":"12306:11:18"}]}}]},{"expression":{"id":2822,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2747,"src":"12358:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2745,"id":2823,"nodeType":"Return","src":"12351:13:18"}]},"documentation":{"id":2739,"nodeType":"StructuredDocumentation","src":"11463:240:18","text":" @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":2825,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"11717:6:18","nodeType":"FunctionDefinition","parameters":{"id":2742,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2741,"mutability":"mutable","name":"value","nameLocation":"11732:5:18","nodeType":"VariableDeclaration","scope":2825,"src":"11724:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2740,"name":"uint256","nodeType":"ElementaryTypeName","src":"11724:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11723:15:18"},"returnParameters":{"id":2745,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2744,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2825,"src":"11762:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2743,"name":"uint256","nodeType":"ElementaryTypeName","src":"11762:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11761:9:18"},"scope":2865,"src":"11708:663:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2863,"nodeType":"Block","src":"12608:174:18","statements":[{"id":2862,"nodeType":"UncheckedBlock","src":"12618:158:18","statements":[{"assignments":[2837],"declarations":[{"constant":false,"id":2837,"mutability":"mutable","name":"result","nameLocation":"12650:6:18","nodeType":"VariableDeclaration","scope":2862,"src":"12642:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2836,"name":"uint256","nodeType":"ElementaryTypeName","src":"12642:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2841,"initialValue":{"arguments":[{"id":2839,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2828,"src":"12666:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2838,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[2825,2864],"referencedDeclaration":2825,"src":"12659:6:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2840,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12659:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12642:30:18"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2842,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2837,"src":"12693:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$2006","typeString":"enum Math.Rounding"},"id":2846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2843,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2831,"src":"12703:8:18","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2006","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2844,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2006,"src":"12715:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$2006_$","typeString":"type(enum Math.Rounding)"}},"id":2845,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12724:2:18","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":2004,"src":"12715:11:18","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2006","typeString":"enum Math.Rounding"}},"src":"12703:23:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2852,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2847,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12730:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2848,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2837,"src":"12736:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":2849,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12746:1:18","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"12736:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2851,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12735:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12730:18:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2853,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2828,"src":"12751:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12730:26:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12703:53:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":2857,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12763:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":2858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"12703:61:18","trueExpression":{"hexValue":"31","id":2856,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12759:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2859,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12702:63:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12693:72:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2835,"id":2861,"nodeType":"Return","src":"12686:79:18"}]}]},"documentation":{"id":2826,"nodeType":"StructuredDocumentation","src":"12377:144:18","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":2864,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"12535:6:18","nodeType":"FunctionDefinition","parameters":{"id":2832,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2828,"mutability":"mutable","name":"value","nameLocation":"12550:5:18","nodeType":"VariableDeclaration","scope":2864,"src":"12542:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2827,"name":"uint256","nodeType":"ElementaryTypeName","src":"12542:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2831,"mutability":"mutable","name":"rounding","nameLocation":"12566:8:18","nodeType":"VariableDeclaration","scope":2864,"src":"12557:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2006","typeString":"enum Math.Rounding"},"typeName":{"id":2830,"nodeType":"UserDefinedTypeName","pathNode":{"id":2829,"name":"Rounding","nameLocations":["12557:8:18"],"nodeType":"IdentifierPath","referencedDeclaration":2006,"src":"12557:8:18"},"referencedDeclaration":2006,"src":"12557:8:18","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2006","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"12541:34:18"},"returnParameters":{"id":2835,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2834,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2864,"src":"12599:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2833,"name":"uint256","nodeType":"ElementaryTypeName","src":"12599:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12598:9:18"},"scope":2865,"src":"12526:256:18","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2866,"src":"202:12582:18","usedErrors":[]}],"src":"103:12682:18"},"id":18},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SignedMath":[2970]},"id":2971,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2867,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"109:23:19"},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":2868,"nodeType":"StructuredDocumentation","src":"134:80:19","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":2970,"linearizedBaseContracts":[2970],"name":"SignedMath","nameLocation":"223:10:19","nodeType":"ContractDefinition","nodes":[{"body":{"id":2885,"nodeType":"Block","src":"375:37:19","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2878,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2871,"src":"392:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2879,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2873,"src":"396:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"392:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":2882,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2873,"src":"404:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":2883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"392:13:19","trueExpression":{"id":2881,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2871,"src":"400:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":2877,"id":2884,"nodeType":"Return","src":"385:20:19"}]},"documentation":{"id":2869,"nodeType":"StructuredDocumentation","src":"240:66:19","text":" @dev Returns the largest of two signed numbers."},"id":2886,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"320:3:19","nodeType":"FunctionDefinition","parameters":{"id":2874,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2871,"mutability":"mutable","name":"a","nameLocation":"331:1:19","nodeType":"VariableDeclaration","scope":2886,"src":"324:8:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2870,"name":"int256","nodeType":"ElementaryTypeName","src":"324:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":2873,"mutability":"mutable","name":"b","nameLocation":"341:1:19","nodeType":"VariableDeclaration","scope":2886,"src":"334:8:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2872,"name":"int256","nodeType":"ElementaryTypeName","src":"334:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"323:20:19"},"returnParameters":{"id":2877,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2876,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2886,"src":"367:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2875,"name":"int256","nodeType":"ElementaryTypeName","src":"367:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"366:8:19"},"scope":2970,"src":"311:101:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2903,"nodeType":"Block","src":"554:37:19","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2896,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2889,"src":"571:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2897,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2891,"src":"575:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"571:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":2900,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2891,"src":"583:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":2901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"571:13:19","trueExpression":{"id":2899,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2889,"src":"579:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":2895,"id":2902,"nodeType":"Return","src":"564:20:19"}]},"documentation":{"id":2887,"nodeType":"StructuredDocumentation","src":"418:67:19","text":" @dev Returns the smallest of two signed numbers."},"id":2904,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"499:3:19","nodeType":"FunctionDefinition","parameters":{"id":2892,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2889,"mutability":"mutable","name":"a","nameLocation":"510:1:19","nodeType":"VariableDeclaration","scope":2904,"src":"503:8:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2888,"name":"int256","nodeType":"ElementaryTypeName","src":"503:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":2891,"mutability":"mutable","name":"b","nameLocation":"520:1:19","nodeType":"VariableDeclaration","scope":2904,"src":"513:8:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2890,"name":"int256","nodeType":"ElementaryTypeName","src":"513:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"502:20:19"},"returnParameters":{"id":2895,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2894,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2904,"src":"546:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2893,"name":"int256","nodeType":"ElementaryTypeName","src":"546:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"545:8:19"},"scope":2970,"src":"490:101:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2947,"nodeType":"Block","src":"796:162:19","statements":[{"assignments":[2915],"declarations":[{"constant":false,"id":2915,"mutability":"mutable","name":"x","nameLocation":"865:1:19","nodeType":"VariableDeclaration","scope":2947,"src":"858:8:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2914,"name":"int256","nodeType":"ElementaryTypeName","src":"858:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":2928,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2916,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2907,"src":"870:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":2917,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2909,"src":"874:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"870:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2919,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"869:7:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2920,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2907,"src":"881:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":2921,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2909,"src":"885:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"881:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2923,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"880:7:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2924,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"891:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"880:12:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2926,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"879:14:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"869:24:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"858:35:19"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2929,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2915,"src":"910:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2934,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2915,"src":"930:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2933,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"922:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2932,"name":"uint256","nodeType":"ElementaryTypeName","src":"922:7:19","typeDescriptions":{}}},"id":2935,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"922:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":2936,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"936:3:19","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"922:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2931,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"915:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":2930,"name":"int256","nodeType":"ElementaryTypeName","src":"915:6:19","typeDescriptions":{}}},"id":2938,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"915:25:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2939,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2907,"src":"944:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":2940,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2909,"src":"948:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"944:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2942,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"943:7:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"915:35:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2944,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"914:37:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"910:41:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":2913,"id":2946,"nodeType":"Return","src":"903:48:19"}]},"documentation":{"id":2905,"nodeType":"StructuredDocumentation","src":"597:126:19","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":2948,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"737:7:19","nodeType":"FunctionDefinition","parameters":{"id":2910,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2907,"mutability":"mutable","name":"a","nameLocation":"752:1:19","nodeType":"VariableDeclaration","scope":2948,"src":"745:8:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2906,"name":"int256","nodeType":"ElementaryTypeName","src":"745:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":2909,"mutability":"mutable","name":"b","nameLocation":"762:1:19","nodeType":"VariableDeclaration","scope":2948,"src":"755:8:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2908,"name":"int256","nodeType":"ElementaryTypeName","src":"755:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"744:20:19"},"returnParameters":{"id":2913,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2912,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2948,"src":"788:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2911,"name":"int256","nodeType":"ElementaryTypeName","src":"788:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"787:8:19"},"scope":2970,"src":"728:230:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2968,"nodeType":"Block","src":"1102:158:19","statements":[{"id":2967,"nodeType":"UncheckedBlock","src":"1112:142:19","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2958,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2951,"src":"1227:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30","id":2959,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1227:6:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":2963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"1240:2:19","subExpression":{"id":2962,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2951,"src":"1241:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":2964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1227:15:19","trueExpression":{"id":2961,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2951,"src":"1236:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2957,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1219:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2956,"name":"uint256","nodeType":"ElementaryTypeName","src":"1219:7:19","typeDescriptions":{}}},"id":2965,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1219:24:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2955,"id":2966,"nodeType":"Return","src":"1212:31:19"}]}]},"documentation":{"id":2949,"nodeType":"StructuredDocumentation","src":"964:78:19","text":" @dev Returns the absolute unsigned value of a signed value."},"id":2969,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1056:3:19","nodeType":"FunctionDefinition","parameters":{"id":2952,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2951,"mutability":"mutable","name":"n","nameLocation":"1067:1:19","nodeType":"VariableDeclaration","scope":2969,"src":"1060:8:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2950,"name":"int256","nodeType":"ElementaryTypeName","src":"1060:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1059:10:19"},"returnParameters":{"id":2955,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2954,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2969,"src":"1093:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2953,"name":"uint256","nodeType":"ElementaryTypeName","src":"1093:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1092:9:19"},"scope":2970,"src":"1047:213:19","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2971,"src":"215:1047:19","usedErrors":[]}],"src":"109:1154:19"},"id":19},"contracts/core/BaseAccount.sol":{"ast":{"absolutePath":"contracts/core/BaseAccount.sol","exportedSymbols":{"BaseAccount":[3112],"IAccount":[3367],"IAggregator":[3401],"IEntryPoint":[3605],"INonceManager":[3624],"IStakeManager":[3764],"UserOperation":[3791],"UserOperationLib":[3961],"ValidationData":[3121],"_intersectTimeRange":[3265],"_packValidationData":[3302,3340],"_parseValidationData":[3180],"calldataKeccak":[3350]},"id":3113,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2972,"literals":["solidity","^","0.8",".18"],"nodeType":"PragmaDirective","src":"32:24:20"},{"absolutePath":"contracts/interfaces/IAccount.sol","file":"../interfaces/IAccount.sol","id":2973,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3113,"sourceUnit":3368,"src":"141:36:20","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IEntryPoint.sol","file":"../interfaces/IEntryPoint.sol","id":2974,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3113,"sourceUnit":3606,"src":"178:39:20","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/core/Helpers.sol","file":"./Helpers.sol","id":2975,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3113,"sourceUnit":3351,"src":"218:23:20","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2977,"name":"IAccount","nameLocations":["509:8:20"],"nodeType":"IdentifierPath","referencedDeclaration":3367,"src":"509:8:20"},"id":2978,"nodeType":"InheritanceSpecifier","src":"509:8:20"}],"canonicalName":"BaseAccount","contractDependencies":[],"contractKind":"contract","documentation":{"id":2976,"nodeType":"StructuredDocumentation","src":"243:232:20","text":" Basic account implementation.\n this contract provides the basic logic for implementing the IAccount interface  - validateUserOp\n specific account implementation should inherit it and provide the account-specific logic"},"fullyImplemented":false,"id":3112,"linearizedBaseContracts":[3112,3367],"name":"BaseAccount","nameLocation":"494:11:20","nodeType":"ContractDefinition","nodes":[{"global":false,"id":2982,"libraryName":{"id":2979,"name":"UserOperationLib","nameLocations":["530:16:20"],"nodeType":"IdentifierPath","referencedDeclaration":3961,"src":"530:16:20"},"nodeType":"UsingForDirective","src":"524:41:20","typeName":{"id":2981,"nodeType":"UserDefinedTypeName","pathNode":{"id":2980,"name":"UserOperation","nameLocations":["551:13:20"],"nodeType":"IdentifierPath","referencedDeclaration":3791,"src":"551:13:20"},"referencedDeclaration":3791,"src":"551:13:20","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3791_storage_ptr","typeString":"struct UserOperation"}}},{"constant":true,"id":2985,"mutability":"constant","name":"SIG_VALIDATION_FAILED","nameLocation":"718:21:20","nodeType":"VariableDeclaration","scope":3112,"src":"692:51:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2983,"name":"uint256","nodeType":"ElementaryTypeName","src":"692:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":2984,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"742:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"internal"},{"body":{"id":3001,"nodeType":"Block","src":"989:63:20","statements":[{"expression":{"arguments":[{"arguments":[{"id":2996,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1036:4:20","typeDescriptions":{"typeIdentifier":"t_contract$_BaseAccount_$3112","typeString":"contract BaseAccount"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaseAccount_$3112","typeString":"contract BaseAccount"}],"id":2995,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1028:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2994,"name":"address","nodeType":"ElementaryTypeName","src":"1028:7:20","typeDescriptions":{}}},"id":2997,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1028:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":2998,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1043:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2991,"name":"entryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3009,"src":"1006:10:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_contract$_IEntryPoint_$3605_$","typeString":"function () view returns (contract IEntryPoint)"}},"id":2992,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1006:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$3605","typeString":"contract IEntryPoint"}},"id":2993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1019:8:20","memberName":"getNonce","nodeType":"MemberAccess","referencedDeclaration":3617,"src":"1006:21:20","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_uint192_$returns$_t_uint256_$","typeString":"function (address,uint192) view external returns (uint256)"}},"id":2999,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1006:39:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2990,"id":3000,"nodeType":"Return","src":"999:46:20"}]},"documentation":{"id":2986,"nodeType":"StructuredDocumentation","src":"750:176:20","text":" Return the account nonce.\n This method returns the next sequential nonce.\n For a nonce of a specific key, use `entrypoint.getNonce(account, key)`"},"functionSelector":"d087d288","id":3002,"implemented":true,"kind":"function","modifiers":[],"name":"getNonce","nameLocation":"940:8:20","nodeType":"FunctionDefinition","parameters":{"id":2987,"nodeType":"ParameterList","parameters":[],"src":"948:2:20"},"returnParameters":{"id":2990,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2989,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3002,"src":"980:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2988,"name":"uint256","nodeType":"ElementaryTypeName","src":"980:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"979:9:20"},"scope":3112,"src":"931:121:20","stateMutability":"view","virtual":true,"visibility":"public"},{"documentation":{"id":3003,"nodeType":"StructuredDocumentation","src":"1058:137:20","text":" return the entryPoint used by this account.\n subclass should return the current entryPoint used by this account."},"functionSelector":"b0d691fe","id":3009,"implemented":false,"kind":"function","modifiers":[],"name":"entryPoint","nameLocation":"1209:10:20","nodeType":"FunctionDefinition","parameters":{"id":3004,"nodeType":"ParameterList","parameters":[],"src":"1219:2:20"},"returnParameters":{"id":3008,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3007,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3009,"src":"1251:11:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$3605","typeString":"contract IEntryPoint"},"typeName":{"id":3006,"nodeType":"UserDefinedTypeName","pathNode":{"id":3005,"name":"IEntryPoint","nameLocations":["1251:11:20"],"nodeType":"IdentifierPath","referencedDeclaration":3605,"src":"1251:11:20"},"referencedDeclaration":3605,"src":"1251:11:20","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$3605","typeString":"contract IEntryPoint"}},"visibility":"internal"}],"src":"1250:13:20"},"scope":3112,"src":"1200:64:20","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[3366],"body":{"id":3042,"nodeType":"Block","src":"1621:186:20","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3023,"name":"_requireFromEntryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3060,"src":"1631:22:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":3024,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1631:24:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3025,"nodeType":"ExpressionStatement","src":"1631:24:20"},{"expression":{"id":3031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3026,"name":"validationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3021,"src":"1665:14:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3028,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3013,"src":"1701:6:20","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3791_calldata_ptr","typeString":"struct UserOperation calldata"}},{"id":3029,"name":"userOpHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3015,"src":"1709:10:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_UserOperation_$3791_calldata_ptr","typeString":"struct UserOperation calldata"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3027,"name":"_validateSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3071,"src":"1682:18:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_UserOperation_$3791_calldata_ptr_$_t_bytes32_$returns$_t_uint256_$","typeString":"function (struct UserOperation calldata,bytes32) returns (uint256)"}},"id":3030,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1682:38:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1665:55:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3032,"nodeType":"ExpressionStatement","src":"1665:55:20"},{"expression":{"arguments":[{"expression":{"id":3034,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3013,"src":"1745:6:20","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3791_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":3035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1752:5:20","memberName":"nonce","nodeType":"MemberAccess","referencedDeclaration":3772,"src":"1745:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3033,"name":"_validateNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3078,"src":"1730:14:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$__$","typeString":"function (uint256) view"}},"id":3036,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1730:28:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3037,"nodeType":"ExpressionStatement","src":"1730:28:20"},{"expression":{"arguments":[{"id":3039,"name":"missingAccountFunds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3017,"src":"1780:19:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3038,"name":"_payPrefund","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3111,"src":"1768:11:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":3040,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1768:32:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3041,"nodeType":"ExpressionStatement","src":"1768:32:20"}]},"documentation":{"id":3010,"nodeType":"StructuredDocumentation","src":"1270:179:20","text":" Validate user's signature and nonce.\n subclass doesn't need to override this method. Instead, it should override the specific internal validation methods."},"functionSelector":"3a871cdd","id":3043,"implemented":true,"kind":"function","modifiers":[],"name":"validateUserOp","nameLocation":"1463:14:20","nodeType":"FunctionDefinition","overrides":{"id":3019,"nodeType":"OverrideSpecifier","overrides":[],"src":"1571:8:20"},"parameters":{"id":3018,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3013,"mutability":"mutable","name":"userOp","nameLocation":"1501:6:20","nodeType":"VariableDeclaration","scope":3043,"src":"1478:29:20","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3791_calldata_ptr","typeString":"struct UserOperation"},"typeName":{"id":3012,"nodeType":"UserDefinedTypeName","pathNode":{"id":3011,"name":"UserOperation","nameLocations":["1478:13:20"],"nodeType":"IdentifierPath","referencedDeclaration":3791,"src":"1478:13:20"},"referencedDeclaration":3791,"src":"1478:13:20","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3791_storage_ptr","typeString":"struct UserOperation"}},"visibility":"internal"},{"constant":false,"id":3015,"mutability":"mutable","name":"userOpHash","nameLocation":"1517:10:20","nodeType":"VariableDeclaration","scope":3043,"src":"1509:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3014,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1509:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3017,"mutability":"mutable","name":"missingAccountFunds","nameLocation":"1537:19:20","nodeType":"VariableDeclaration","scope":3043,"src":"1529:27:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3016,"name":"uint256","nodeType":"ElementaryTypeName","src":"1529:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1477:80:20"},"returnParameters":{"id":3022,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3021,"mutability":"mutable","name":"validationData","nameLocation":"1605:14:20","nodeType":"VariableDeclaration","scope":3043,"src":"1597:22:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3020,"name":"uint256","nodeType":"ElementaryTypeName","src":"1597:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1596:24:20"},"scope":3112,"src":"1454:353:20","stateMutability":"nonpayable","virtual":true,"visibility":"external"},{"body":{"id":3059,"nodeType":"Block","src":"1944:93:20","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3048,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1962:3:20","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1966:6:20","memberName":"sender","nodeType":"MemberAccess","src":"1962:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":3052,"name":"entryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3009,"src":"1984:10:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_contract$_IEntryPoint_$3605_$","typeString":"function () view returns (contract IEntryPoint)"}},"id":3053,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1984:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$3605","typeString":"contract IEntryPoint"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IEntryPoint_$3605","typeString":"contract IEntryPoint"}],"id":3051,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1976:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3050,"name":"address","nodeType":"ElementaryTypeName","src":"1976:7:20","typeDescriptions":{}}},"id":3054,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1976:21:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1962:35:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"6163636f756e743a206e6f742066726f6d20456e747279506f696e74","id":3056,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1999:30:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_f684c2c0c9ec797849b62669189fe025e9077c00ba7812987ce38c0071ad7a50","typeString":"literal_string \"account: not from EntryPoint\""},"value":"account: not from EntryPoint"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f684c2c0c9ec797849b62669189fe025e9077c00ba7812987ce38c0071ad7a50","typeString":"literal_string \"account: not from EntryPoint\""}],"id":3047,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1954:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3057,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1954:76:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3058,"nodeType":"ExpressionStatement","src":"1954:76:20"}]},"documentation":{"id":3044,"nodeType":"StructuredDocumentation","src":"1813:70:20","text":" ensure the request comes from the known entrypoint."},"id":3060,"implemented":true,"kind":"function","modifiers":[],"name":"_requireFromEntryPoint","nameLocation":"1897:22:20","nodeType":"FunctionDefinition","parameters":{"id":3045,"nodeType":"ParameterList","parameters":[],"src":"1919:2:20"},"returnParameters":{"id":3046,"nodeType":"ParameterList","parameters":[],"src":"1944:0:20"},"scope":3112,"src":"1888:149:20","stateMutability":"view","virtual":true,"visibility":"internal"},{"documentation":{"id":3061,"nodeType":"StructuredDocumentation","src":"2043:904:20","text":" validate the signature is valid for this message.\n @param userOp validate the userOp.signature field\n @param userOpHash convenient field: the hash of the request, to check the signature against\n          (also hashes the entrypoint and chain id)\n @return validationData signature and time-range of this operation\n      <20-byte> sigAuthorizer - 0 for valid signature, 1 to mark signature failure,\n         otherwise, an address of an \"authorizer\" contract.\n      <6-byte> validUntil - last timestamp this operation is valid. 0 for \"indefinite\"\n      <6-byte> validAfter - first timestamp this operation is valid\n      If the account doesn't use time-range, it is enough to return SIG_VALIDATION_FAILED value (1) for signature failure.\n      Note that the validation code cannot use block.timestamp (or block.number) directly."},"id":3071,"implemented":false,"kind":"function","modifiers":[],"name":"_validateSignature","nameLocation":"2961:18:20","nodeType":"FunctionDefinition","parameters":{"id":3067,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3064,"mutability":"mutable","name":"userOp","nameLocation":"3003:6:20","nodeType":"VariableDeclaration","scope":3071,"src":"2980:29:20","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3791_calldata_ptr","typeString":"struct UserOperation"},"typeName":{"id":3063,"nodeType":"UserDefinedTypeName","pathNode":{"id":3062,"name":"UserOperation","nameLocations":["2980:13:20"],"nodeType":"IdentifierPath","referencedDeclaration":3791,"src":"2980:13:20"},"referencedDeclaration":3791,"src":"2980:13:20","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3791_storage_ptr","typeString":"struct UserOperation"}},"visibility":"internal"},{"constant":false,"id":3066,"mutability":"mutable","name":"userOpHash","nameLocation":"3019:10:20","nodeType":"VariableDeclaration","scope":3071,"src":"3011:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3065,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3011:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2979:51:20"},"returnParameters":{"id":3070,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3069,"mutability":"mutable","name":"validationData","nameLocation":"3065:14:20","nodeType":"VariableDeclaration","scope":3071,"src":"3057:22:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3068,"name":"uint256","nodeType":"ElementaryTypeName","src":"3057:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3056:24:20"},"scope":3112,"src":"2952:129:20","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":3077,"nodeType":"Block","src":"3793:7:20","statements":[]},"documentation":{"id":3072,"nodeType":"StructuredDocumentation","src":"3087:640:20","text":" Validate the nonce of the UserOperation.\n This method may validate the nonce requirement of this account.\n e.g.\n To limit the nonce to use sequenced UserOps only (no \"out of order\" UserOps):\n      `require(nonce < type(uint64).max)`\n For a hypothetical account that *requires* the nonce to be out-of-order:\n      `require(nonce & type(uint64).max == 0)`\n The actual nonce uniqueness is managed by the EntryPoint, and thus no other\n action is needed by the account itself.\n @param nonce to validate\n solhint-disable-next-line no-empty-blocks"},"id":3078,"implemented":true,"kind":"function","modifiers":[],"name":"_validateNonce","nameLocation":"3741:14:20","nodeType":"FunctionDefinition","parameters":{"id":3075,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3074,"mutability":"mutable","name":"nonce","nameLocation":"3764:5:20","nodeType":"VariableDeclaration","scope":3078,"src":"3756:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3073,"name":"uint256","nodeType":"ElementaryTypeName","src":"3756:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3755:15:20"},"returnParameters":{"id":3076,"nodeType":"ParameterList","parameters":[],"src":"3793:0:20"},"scope":3112,"src":"3732:68:20","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":3110,"nodeType":"Block","src":"4375:270:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3084,"name":"missingAccountFunds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3081,"src":"4389:19:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3085,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4412:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4389:24:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3109,"nodeType":"IfStatement","src":"4385:254:20","trueBody":{"id":3108,"nodeType":"Block","src":"4415:224:20","statements":[{"assignments":[3088,null],"declarations":[{"constant":false,"id":3088,"mutability":"mutable","name":"success","nameLocation":"4435:7:20","nodeType":"VariableDeclaration","scope":3108,"src":"4430:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3087,"name":"bool","nodeType":"ElementaryTypeName","src":"4430:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":3104,"initialValue":{"arguments":[{"hexValue":"","id":3102,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4526:2:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"arguments":[{"expression":{"id":3091,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4455:3:20","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4459:6:20","memberName":"sender","nodeType":"MemberAccess","src":"4455:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3090,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4447:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":3089,"name":"address","nodeType":"ElementaryTypeName","src":"4447:8:20","stateMutability":"payable","typeDescriptions":{}}},"id":3093,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4447:19:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":3094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4467:4:20","memberName":"call","nodeType":"MemberAccess","src":"4447:24:20","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value","gas"],"nodeType":"FunctionCallOptions","options":[{"id":3095,"name":"missingAccountFunds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3081,"src":"4480:19:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"arguments":[{"id":3098,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4512:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3097,"name":"uint256","nodeType":"ElementaryTypeName","src":"4512:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":3096,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4507:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3099,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4507:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":3100,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4521:3:20","memberName":"max","nodeType":"MemberAccess","src":"4507:17:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"4447:78:20","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$gasvalue","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3103,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4447:82:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"4429:100:20"},{"expression":{"components":[{"id":3105,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3088,"src":"4544:7:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":3106,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4543:9:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3107,"nodeType":"ExpressionStatement","src":"4543:9:20"}]}}]},"documentation":{"id":3079,"nodeType":"StructuredDocumentation","src":"3806:497:20","text":" sends to the entrypoint (msg.sender) the missing funds for this transaction.\n subclass MAY override this method for better funds management\n (e.g. send to the entryPoint more than the minimum required, so that in future transactions\n it will not be required to send again)\n @param missingAccountFunds the minimum value this method should send the entrypoint.\n  this value MAY be zero, in case there is enough deposit, or the userOp has a paymaster."},"id":3111,"implemented":true,"kind":"function","modifiers":[],"name":"_payPrefund","nameLocation":"4317:11:20","nodeType":"FunctionDefinition","parameters":{"id":3082,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3081,"mutability":"mutable","name":"missingAccountFunds","nameLocation":"4337:19:20","nodeType":"VariableDeclaration","scope":3111,"src":"4329:27:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3080,"name":"uint256","nodeType":"ElementaryTypeName","src":"4329:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4328:29:20"},"returnParameters":{"id":3083,"nodeType":"ParameterList","parameters":[],"src":"4375:0:20"},"scope":3112,"src":"4308:337:20","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":3113,"src":"476:4171:20","usedErrors":[]}],"src":"32:4615:20"},"id":20},"contracts/core/Helpers.sol":{"ast":{"absolutePath":"contracts/core/Helpers.sol","exportedSymbols":{"ValidationData":[3121],"_intersectTimeRange":[3265],"_packValidationData":[3302,3340],"_parseValidationData":[3180],"calldataKeccak":[3350]},"id":3351,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3114,"literals":["solidity","^","0.8",".18"],"nodeType":"PragmaDirective","src":"32:24:21"},{"canonicalName":"ValidationData","id":3121,"members":[{"constant":false,"id":3116,"mutability":"mutable","name":"aggregator","nameLocation":"726:10:21","nodeType":"VariableDeclaration","scope":3121,"src":"718:18:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3115,"name":"address","nodeType":"ElementaryTypeName","src":"718:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3118,"mutability":"mutable","name":"validAfter","nameLocation":"753:10:21","nodeType":"VariableDeclaration","scope":3121,"src":"746:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":3117,"name":"uint48","nodeType":"ElementaryTypeName","src":"746:6:21","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":3120,"mutability":"mutable","name":"validUntil","nameLocation":"780:10:21","nodeType":"VariableDeclaration","scope":3121,"src":"773:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":3119,"name":"uint48","nodeType":"ElementaryTypeName","src":"773:6:21","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"name":"ValidationData","nameLocation":"693:14:21","nodeType":"StructDefinition","scope":3351,"src":"686:111:21","visibility":"public"},{"body":{"id":3179,"nodeType":"Block","src":"993:346:21","statements":[{"assignments":[3130],"declarations":[{"constant":false,"id":3130,"mutability":"mutable","name":"aggregator","nameLocation":"1011:10:21","nodeType":"VariableDeclaration","scope":3179,"src":"1003:18:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3129,"name":"address","nodeType":"ElementaryTypeName","src":"1003:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3138,"initialValue":{"arguments":[{"arguments":[{"id":3135,"name":"validationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3123,"src":"1040:14:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3134,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1032:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":3133,"name":"uint160","nodeType":"ElementaryTypeName","src":"1032:7:21","typeDescriptions":{}}},"id":3136,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1032:23:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":3132,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1024:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3131,"name":"address","nodeType":"ElementaryTypeName","src":"1024:7:21","typeDescriptions":{}}},"id":3137,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1024:32:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"1003:53:21"},{"assignments":[3140],"declarations":[{"constant":false,"id":3140,"mutability":"mutable","name":"validUntil","nameLocation":"1073:10:21","nodeType":"VariableDeclaration","scope":3179,"src":"1066:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":3139,"name":"uint48","nodeType":"ElementaryTypeName","src":"1066:6:21","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"id":3147,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3143,"name":"validationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3123,"src":"1093:14:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313630","id":3144,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1111:3:21","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},"src":"1093:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3142,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1086:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":3141,"name":"uint48","nodeType":"ElementaryTypeName","src":"1086:6:21","typeDescriptions":{}}},"id":3146,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1086:29:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"VariableDeclarationStatement","src":"1066:49:21"},{"condition":{"commonType":{"typeIdentifier":"t_uint48","typeString":"uint48"},"id":3150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3148,"name":"validUntil","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3140,"src":"1129:10:21","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3149,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1143:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1129:15:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3160,"nodeType":"IfStatement","src":"1125:75:21","trueBody":{"id":3159,"nodeType":"Block","src":"1146:54:21","statements":[{"expression":{"id":3157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3151,"name":"validUntil","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3140,"src":"1160:10:21","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"arguments":[{"id":3154,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1178:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":3153,"name":"uint48","nodeType":"ElementaryTypeName","src":"1178:6:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":3152,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1173:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3155,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1173:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":3156,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1186:3:21","memberName":"max","nodeType":"MemberAccess","src":"1173:16:21","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"1160:29:21","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"id":3158,"nodeType":"ExpressionStatement","src":"1160:29:21"}]}},{"assignments":[3162],"declarations":[{"constant":false,"id":3162,"mutability":"mutable","name":"validAfter","nameLocation":"1216:10:21","nodeType":"VariableDeclaration","scope":3179,"src":"1209:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":3161,"name":"uint48","nodeType":"ElementaryTypeName","src":"1209:6:21","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"id":3172,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3165,"name":"validationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3123,"src":"1236:14:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"id":3168,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3438","id":3166,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1255:2:21","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"313630","id":3167,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1260:3:21","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},"src":"1255:8:21","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"}}],"id":3169,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1254:10:21","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"}},"src":"1236:28:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3164,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1229:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":3163,"name":"uint48","nodeType":"ElementaryTypeName","src":"1229:6:21","typeDescriptions":{}}},"id":3171,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1229:36:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"VariableDeclarationStatement","src":"1209:56:21"},{"expression":{"arguments":[{"id":3174,"name":"aggregator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3130,"src":"1297:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3175,"name":"validAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3162,"src":"1309:10:21","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},{"id":3176,"name":"validUntil","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3140,"src":"1321:10:21","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint48","typeString":"uint48"},{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":3173,"name":"ValidationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3121,"src":"1282:14:21","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_ValidationData_$3121_storage_ptr_$","typeString":"type(struct ValidationData storage pointer)"}},"id":3177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1282:50:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$3121_memory_ptr","typeString":"struct ValidationData memory"}},"functionReturnParameters":3128,"id":3178,"nodeType":"Return","src":"1275:57:21"}]},"id":3180,"implemented":true,"kind":"freeFunction","modifiers":[],"name":"_parseValidationData","nameLocation":"909:20:21","nodeType":"FunctionDefinition","parameters":{"id":3124,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3123,"mutability":"mutable","name":"validationData","nameLocation":"935:14:21","nodeType":"VariableDeclaration","scope":3180,"src":"930:19:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3122,"name":"uint","nodeType":"ElementaryTypeName","src":"930:4:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"929:21:21"},"returnParameters":{"id":3128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3127,"mutability":"mutable","name":"data","nameLocation":"987:4:21","nodeType":"VariableDeclaration","scope":3180,"src":"965:26:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$3121_memory_ptr","typeString":"struct ValidationData"},"typeName":{"id":3126,"nodeType":"UserDefinedTypeName","pathNode":{"id":3125,"name":"ValidationData","nameLocations":["965:14:21"],"nodeType":"IdentifierPath","referencedDeclaration":3121,"src":"965:14:21"},"referencedDeclaration":3121,"src":"965:14:21","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$3121_storage_ptr","typeString":"struct ValidationData"}},"visibility":"internal"}],"src":"964:28:21"},"scope":3351,"src":"900:439:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3264,"nodeType":"Block","src":"1511:804:21","statements":[{"assignments":[3192],"declarations":[{"constant":false,"id":3192,"mutability":"mutable","name":"accountValidationData","nameLocation":"1543:21:21","nodeType":"VariableDeclaration","scope":3264,"src":"1521:43:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$3121_memory_ptr","typeString":"struct ValidationData"},"typeName":{"id":3191,"nodeType":"UserDefinedTypeName","pathNode":{"id":3190,"name":"ValidationData","nameLocations":["1521:14:21"],"nodeType":"IdentifierPath","referencedDeclaration":3121,"src":"1521:14:21"},"referencedDeclaration":3121,"src":"1521:14:21","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$3121_storage_ptr","typeString":"struct ValidationData"}},"visibility":"internal"}],"id":3196,"initialValue":{"arguments":[{"id":3194,"name":"validationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3182,"src":"1588:14:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3193,"name":"_parseValidationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3180,"src":"1567:20:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_struct$_ValidationData_$3121_memory_ptr_$","typeString":"function (uint256) pure returns (struct ValidationData memory)"}},"id":3195,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1567:36:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$3121_memory_ptr","typeString":"struct ValidationData memory"}},"nodeType":"VariableDeclarationStatement","src":"1521:82:21"},{"assignments":[3199],"declarations":[{"constant":false,"id":3199,"mutability":"mutable","name":"pmValidationData","nameLocation":"1635:16:21","nodeType":"VariableDeclaration","scope":3264,"src":"1613:38:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$3121_memory_ptr","typeString":"struct ValidationData"},"typeName":{"id":3198,"nodeType":"UserDefinedTypeName","pathNode":{"id":3197,"name":"ValidationData","nameLocations":["1613:14:21"],"nodeType":"IdentifierPath","referencedDeclaration":3121,"src":"1613:14:21"},"referencedDeclaration":3121,"src":"1613:14:21","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$3121_storage_ptr","typeString":"struct ValidationData"}},"visibility":"internal"}],"id":3203,"initialValue":{"arguments":[{"id":3201,"name":"paymasterValidationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3184,"src":"1675:23:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3200,"name":"_parseValidationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3180,"src":"1654:20:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_struct$_ValidationData_$3121_memory_ptr_$","typeString":"function (uint256) pure returns (struct ValidationData memory)"}},"id":3202,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1654:45:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$3121_memory_ptr","typeString":"struct ValidationData memory"}},"nodeType":"VariableDeclarationStatement","src":"1613:86:21"},{"assignments":[3205],"declarations":[{"constant":false,"id":3205,"mutability":"mutable","name":"aggregator","nameLocation":"1717:10:21","nodeType":"VariableDeclaration","scope":3264,"src":"1709:18:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3204,"name":"address","nodeType":"ElementaryTypeName","src":"1709:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3208,"initialValue":{"expression":{"id":3206,"name":"accountValidationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3192,"src":"1730:21:21","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$3121_memory_ptr","typeString":"struct ValidationData memory"}},"id":3207,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1752:10:21","memberName":"aggregator","nodeType":"MemberAccess","referencedDeclaration":3116,"src":"1730:32:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"1709:53:21"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3209,"name":"aggregator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3205,"src":"1776:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":3212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1798:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3211,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1790:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3210,"name":"address","nodeType":"ElementaryTypeName","src":"1790:7:21","typeDescriptions":{}}},"id":3213,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1790:10:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1776:24:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3221,"nodeType":"IfStatement","src":"1772:95:21","trueBody":{"id":3220,"nodeType":"Block","src":"1802:65:21","statements":[{"expression":{"id":3218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3215,"name":"aggregator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3205,"src":"1816:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":3216,"name":"pmValidationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3199,"src":"1829:16:21","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$3121_memory_ptr","typeString":"struct ValidationData memory"}},"id":3217,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1846:10:21","memberName":"aggregator","nodeType":"MemberAccess","referencedDeclaration":3116,"src":"1829:27:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1816:40:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3219,"nodeType":"ExpressionStatement","src":"1816:40:21"}]}},{"assignments":[3223],"declarations":[{"constant":false,"id":3223,"mutability":"mutable","name":"validAfter","nameLocation":"1883:10:21","nodeType":"VariableDeclaration","scope":3264,"src":"1876:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":3222,"name":"uint48","nodeType":"ElementaryTypeName","src":"1876:6:21","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"id":3226,"initialValue":{"expression":{"id":3224,"name":"accountValidationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3192,"src":"1896:21:21","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$3121_memory_ptr","typeString":"struct ValidationData memory"}},"id":3225,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1918:10:21","memberName":"validAfter","nodeType":"MemberAccess","referencedDeclaration":3118,"src":"1896:32:21","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"VariableDeclarationStatement","src":"1876:52:21"},{"assignments":[3228],"declarations":[{"constant":false,"id":3228,"mutability":"mutable","name":"validUntil","nameLocation":"1945:10:21","nodeType":"VariableDeclaration","scope":3264,"src":"1938:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":3227,"name":"uint48","nodeType":"ElementaryTypeName","src":"1938:6:21","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"id":3231,"initialValue":{"expression":{"id":3229,"name":"accountValidationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3192,"src":"1958:21:21","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$3121_memory_ptr","typeString":"struct ValidationData memory"}},"id":3230,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1980:10:21","memberName":"validUntil","nodeType":"MemberAccess","referencedDeclaration":3120,"src":"1958:32:21","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"VariableDeclarationStatement","src":"1938:52:21"},{"assignments":[3233],"declarations":[{"constant":false,"id":3233,"mutability":"mutable","name":"pmValidAfter","nameLocation":"2007:12:21","nodeType":"VariableDeclaration","scope":3264,"src":"2000:19:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":3232,"name":"uint48","nodeType":"ElementaryTypeName","src":"2000:6:21","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"id":3236,"initialValue":{"expression":{"id":3234,"name":"pmValidationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3199,"src":"2022:16:21","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$3121_memory_ptr","typeString":"struct ValidationData memory"}},"id":3235,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2039:10:21","memberName":"validAfter","nodeType":"MemberAccess","referencedDeclaration":3118,"src":"2022:27:21","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"VariableDeclarationStatement","src":"2000:49:21"},{"assignments":[3238],"declarations":[{"constant":false,"id":3238,"mutability":"mutable","name":"pmValidUntil","nameLocation":"2066:12:21","nodeType":"VariableDeclaration","scope":3264,"src":"2059:19:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":3237,"name":"uint48","nodeType":"ElementaryTypeName","src":"2059:6:21","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"id":3241,"initialValue":{"expression":{"id":3239,"name":"pmValidationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3199,"src":"2081:16:21","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$3121_memory_ptr","typeString":"struct ValidationData memory"}},"id":3240,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2098:10:21","memberName":"validUntil","nodeType":"MemberAccess","referencedDeclaration":3120,"src":"2081:27:21","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"VariableDeclarationStatement","src":"2059:49:21"},{"condition":{"commonType":{"typeIdentifier":"t_uint48","typeString":"uint48"},"id":3244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3242,"name":"validAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3223,"src":"2123:10:21","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3243,"name":"pmValidAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3233,"src":"2136:12:21","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"2123:25:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3249,"nodeType":"IfStatement","src":"2119:56:21","trueBody":{"expression":{"id":3247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3245,"name":"validAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3223,"src":"2150:10:21","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3246,"name":"pmValidAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3233,"src":"2163:12:21","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"2150:25:21","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"id":3248,"nodeType":"ExpressionStatement","src":"2150:25:21"}},{"condition":{"commonType":{"typeIdentifier":"t_uint48","typeString":"uint48"},"id":3252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3250,"name":"validUntil","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3228,"src":"2189:10:21","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3251,"name":"pmValidUntil","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3238,"src":"2202:12:21","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"2189:25:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3257,"nodeType":"IfStatement","src":"2185:56:21","trueBody":{"expression":{"id":3255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3253,"name":"validUntil","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3228,"src":"2216:10:21","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3254,"name":"pmValidUntil","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3238,"src":"2229:12:21","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"2216:25:21","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"id":3256,"nodeType":"ExpressionStatement","src":"2216:25:21"}},{"expression":{"arguments":[{"id":3259,"name":"aggregator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3205,"src":"2273:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3260,"name":"validAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3223,"src":"2285:10:21","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},{"id":3261,"name":"validUntil","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3228,"src":"2297:10:21","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint48","typeString":"uint48"},{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":3258,"name":"ValidationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3121,"src":"2258:14:21","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_ValidationData_$3121_storage_ptr_$","typeString":"type(struct ValidationData storage pointer)"}},"id":3262,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2258:50:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$3121_memory_ptr","typeString":"struct ValidationData memory"}},"functionReturnParameters":3189,"id":3263,"nodeType":"Return","src":"2251:57:21"}]},"id":3265,"implemented":true,"kind":"freeFunction","modifiers":[],"name":"_intersectTimeRange","nameLocation":"1397:19:21","nodeType":"FunctionDefinition","parameters":{"id":3185,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3182,"mutability":"mutable","name":"validationData","nameLocation":"1425:14:21","nodeType":"VariableDeclaration","scope":3265,"src":"1417:22:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3181,"name":"uint256","nodeType":"ElementaryTypeName","src":"1417:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3184,"mutability":"mutable","name":"paymasterValidationData","nameLocation":"1449:23:21","nodeType":"VariableDeclaration","scope":3265,"src":"1441:31:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3183,"name":"uint256","nodeType":"ElementaryTypeName","src":"1441:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1416:57:21"},"returnParameters":{"id":3189,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3188,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3265,"src":"1488:21:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$3121_memory_ptr","typeString":"struct ValidationData"},"typeName":{"id":3187,"nodeType":"UserDefinedTypeName","pathNode":{"id":3186,"name":"ValidationData","nameLocations":["1488:14:21"],"nodeType":"IdentifierPath","referencedDeclaration":3121,"src":"1488:14:21"},"referencedDeclaration":3121,"src":"1488:14:21","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$3121_storage_ptr","typeString":"struct ValidationData"}},"visibility":"internal"}],"src":"1487:23:21"},"scope":3351,"src":"1388:927:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3301,"nodeType":"Block","src":"2507:127:21","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":3276,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3269,"src":"2532:4:21","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$3121_memory_ptr","typeString":"struct ValidationData memory"}},"id":3277,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2537:10:21","memberName":"aggregator","nodeType":"MemberAccess","referencedDeclaration":3116,"src":"2532:15:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3275,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2524:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":3274,"name":"uint160","nodeType":"ElementaryTypeName","src":"2524:7:21","typeDescriptions":{}}},"id":3278,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2524:24:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":3281,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3269,"src":"2560:4:21","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$3121_memory_ptr","typeString":"struct ValidationData memory"}},"id":3282,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2565:10:21","memberName":"validUntil","nodeType":"MemberAccess","referencedDeclaration":3120,"src":"2560:15:21","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":3280,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2552:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3279,"name":"uint256","nodeType":"ElementaryTypeName","src":"2552:7:21","typeDescriptions":{}}},"id":3283,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2552:24:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313630","id":3284,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2580:3:21","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},"src":"2552:31:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3286,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2551:33:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2524:60:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":3290,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3269,"src":"2596:4:21","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$3121_memory_ptr","typeString":"struct ValidationData memory"}},"id":3291,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2601:10:21","memberName":"validAfter","nodeType":"MemberAccess","referencedDeclaration":3118,"src":"2596:15:21","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":3289,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2588:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3288,"name":"uint256","nodeType":"ElementaryTypeName","src":"2588:7:21","typeDescriptions":{}}},"id":3292,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2588:24:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"id":3295,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"313630","id":3293,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2617:3:21","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3438","id":3294,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2623:2:21","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"src":"2617:8:21","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"}}],"id":3296,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2616:10:21","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"}},"src":"2588:38:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3298,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2587:40:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2524:103:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3273,"id":3300,"nodeType":"Return","src":"2517:110:21"}]},"documentation":{"id":3266,"nodeType":"StructuredDocumentation","src":"2317:105:21","text":" helper to pack the return value for validateUserOp\n @param data - the ValidationData to pack"},"id":3302,"implemented":true,"kind":"freeFunction","modifiers":[],"name":"_packValidationData","nameLocation":"2436:19:21","nodeType":"FunctionDefinition","parameters":{"id":3270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3269,"mutability":"mutable","name":"data","nameLocation":"2478:4:21","nodeType":"VariableDeclaration","scope":3302,"src":"2456:26:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$3121_memory_ptr","typeString":"struct ValidationData"},"typeName":{"id":3268,"nodeType":"UserDefinedTypeName","pathNode":{"id":3267,"name":"ValidationData","nameLocations":["2456:14:21"],"nodeType":"IdentifierPath","referencedDeclaration":3121,"src":"2456:14:21"},"referencedDeclaration":3121,"src":"2456:14:21","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$3121_storage_ptr","typeString":"struct ValidationData"}},"visibility":"internal"}],"src":"2455:28:21"},"returnParameters":{"id":3273,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3272,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3302,"src":"2498:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3271,"name":"uint256","nodeType":"ElementaryTypeName","src":"2498:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2497:9:21"},"scope":3351,"src":"2427:207:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3339,"nodeType":"Block","src":"3058:112:21","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"condition":{"id":3314,"name":"sigFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3305,"src":"3076:9:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":3316,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3092:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":3317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"3076:17:21","trueExpression":{"hexValue":"31","id":3315,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3088:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":3318,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3075:19:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3321,"name":"validUntil","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3307,"src":"3106:10:21","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":3320,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3098:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3319,"name":"uint256","nodeType":"ElementaryTypeName","src":"3098:7:21","typeDescriptions":{}}},"id":3322,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3098:19:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313630","id":3323,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3121:3:21","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},"src":"3098:26:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3325,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3097:28:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3075:50:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3329,"name":"validAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3309,"src":"3137:10:21","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":3328,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3129:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3327,"name":"uint256","nodeType":"ElementaryTypeName","src":"3129:7:21","typeDescriptions":{}}},"id":3330,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3129:19:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"id":3333,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"313630","id":3331,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3153:3:21","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3438","id":3332,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3159:2:21","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"src":"3153:8:21","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"}}],"id":3334,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"3152:10:21","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"}},"src":"3129:33:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3336,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3128:35:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3075:88:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3313,"id":3338,"nodeType":"Return","src":"3068:95:21"}]},"documentation":{"id":3303,"nodeType":"StructuredDocumentation","src":"2636:311:21","text":" helper to pack the return value for validateUserOp, when not using an aggregator\n @param sigFailed - true for signature failure, false for success\n @param validUntil last timestamp this UserOperation is valid (or zero for infinite)\n @param validAfter first timestamp this UserOperation is valid"},"id":3340,"implemented":true,"kind":"freeFunction","modifiers":[],"name":"_packValidationData","nameLocation":"2961:19:21","nodeType":"FunctionDefinition","parameters":{"id":3310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3305,"mutability":"mutable","name":"sigFailed","nameLocation":"2986:9:21","nodeType":"VariableDeclaration","scope":3340,"src":"2981:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3304,"name":"bool","nodeType":"ElementaryTypeName","src":"2981:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3307,"mutability":"mutable","name":"validUntil","nameLocation":"3004:10:21","nodeType":"VariableDeclaration","scope":3340,"src":"2997:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":3306,"name":"uint48","nodeType":"ElementaryTypeName","src":"2997:6:21","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":3309,"mutability":"mutable","name":"validAfter","nameLocation":"3023:10:21","nodeType":"VariableDeclaration","scope":3340,"src":"3016:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":3308,"name":"uint48","nodeType":"ElementaryTypeName","src":"3016:6:21","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"2980:54:21"},"returnParameters":{"id":3313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3312,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3340,"src":"3049:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3311,"name":"uint256","nodeType":"ElementaryTypeName","src":"3049:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3048:9:21"},"scope":3351,"src":"2952:218:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3349,"nodeType":"Block","src":"3425:193:21","statements":[{"AST":{"nodeType":"YulBlock","src":"3444:168:21","statements":[{"nodeType":"YulVariableDeclaration","src":"3458:22:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3475:4:21","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3469:5:21"},"nodeType":"YulFunctionCall","src":"3469:11:21"},"variables":[{"name":"mem","nodeType":"YulTypedName","src":"3462:3:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3493:22:21","value":{"name":"data.length","nodeType":"YulIdentifier","src":"3504:11:21"},"variables":[{"name":"len","nodeType":"YulTypedName","src":"3497:3:21","type":""}]},{"expression":{"arguments":[{"name":"mem","nodeType":"YulIdentifier","src":"3541:3:21"},{"name":"data.offset","nodeType":"YulIdentifier","src":"3546:11:21"},{"name":"len","nodeType":"YulIdentifier","src":"3559:3:21"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"3528:12:21"},"nodeType":"YulFunctionCall","src":"3528:35:21"},"nodeType":"YulExpressionStatement","src":"3528:35:21"},{"nodeType":"YulAssignment","src":"3576:26:21","value":{"arguments":[{"name":"mem","nodeType":"YulIdentifier","src":"3593:3:21"},{"name":"len","nodeType":"YulIdentifier","src":"3598:3:21"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3583:9:21"},"nodeType":"YulFunctionCall","src":"3583:19:21"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"3576:3:21"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3343,"isOffset":false,"isSlot":false,"src":"3504:11:21","suffix":"length","valueSize":1},{"declaration":3343,"isOffset":true,"isSlot":false,"src":"3546:11:21","suffix":"offset","valueSize":1},{"declaration":3346,"isOffset":false,"isSlot":false,"src":"3576:3:21","valueSize":1}],"id":3348,"nodeType":"InlineAssembly","src":"3435:177:21"}]},"documentation":{"id":3341,"nodeType":"StructuredDocumentation","src":"3172:176:21","text":" keccak function over calldata.\n @dev copy calldata into memory, do keccak and drop allocated memory. Strangely, this is more efficient than letting solidity do it."},"id":3350,"implemented":true,"kind":"freeFunction","modifiers":[],"name":"calldataKeccak","nameLocation":"3362:14:21","nodeType":"FunctionDefinition","parameters":{"id":3344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3343,"mutability":"mutable","name":"data","nameLocation":"3392:4:21","nodeType":"VariableDeclaration","scope":3350,"src":"3377:19:21","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3342,"name":"bytes","nodeType":"ElementaryTypeName","src":"3377:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3376:21:21"},"returnParameters":{"id":3347,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3346,"mutability":"mutable","name":"ret","nameLocation":"3420:3:21","nodeType":"VariableDeclaration","scope":3350,"src":"3412:11:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3345,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3412:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3411:13:21"},"scope":3351,"src":"3353:265:21","stateMutability":"pure","virtual":false,"visibility":"internal"}],"src":"32:3587:21"},"id":21},"contracts/interfaces/IAccount.sol":{"ast":{"absolutePath":"contracts/interfaces/IAccount.sol","exportedSymbols":{"IAccount":[3367],"UserOperation":[3791],"UserOperationLib":[3961],"calldataKeccak":[3350]},"id":3368,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3352,"literals":["solidity","^","0.8",".18"],"nodeType":"PragmaDirective","src":"32:24:22"},{"absolutePath":"contracts/interfaces/UserOperation.sol","file":"./UserOperation.sol","id":3353,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3368,"sourceUnit":3962,"src":"58:29:22","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IAccount","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":3367,"linearizedBaseContracts":[3367],"name":"IAccount","nameLocation":"99:8:22","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3354,"nodeType":"StructuredDocumentation","src":"115:1861:22","text":" Validate user's signature and nonce\n the entryPoint will make the call to the recipient only if this validation call returns successfully.\n signature failure should be reported by returning SIG_VALIDATION_FAILED (1).\n This allows making a \"simulation call\" without a valid signature\n Other failures (e.g. nonce mismatch, or invalid signature format) should still revert to signal failure.\n @dev Must validate caller is the entryPoint.\n      Must validate the signature and nonce\n @param userOp the operation that is about to be executed.\n @param userOpHash hash of the user's request data. can be used as the basis for signature.\n @param missingAccountFunds missing funds on the account's deposit in the entrypoint.\n      This is the minimum amount to transfer to the sender(entryPoint) to be able to make the call.\n      The excess is left as a deposit in the entrypoint, for future calls.\n      can be withdrawn anytime using \"entryPoint.withdrawTo()\"\n      In case there is a paymaster in the request (or the current deposit is high enough), this value will be zero.\n @return validationData packaged ValidationData structure. use `_packValidationData` and `_unpackValidationData` to encode and decode\n      <20-byte> sigAuthorizer - 0 for valid signature, 1 to mark signature failure,\n         otherwise, an address of an \"authorizer\" contract.\n      <6-byte> validUntil - last timestamp this operation is valid. 0 for \"indefinite\"\n      <6-byte> validAfter - first timestamp this operation is valid\n      If an account doesn't use time-range, it is enough to return SIG_VALIDATION_FAILED value (1) for signature failure.\n      Note that the validation code cannot use block.timestamp (or block.number) directly."},"functionSelector":"3a871cdd","id":3366,"implemented":false,"kind":"function","modifiers":[],"name":"validateUserOp","nameLocation":"1990:14:22","nodeType":"FunctionDefinition","parameters":{"id":3362,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3357,"mutability":"mutable","name":"userOp","nameLocation":"2028:6:22","nodeType":"VariableDeclaration","scope":3366,"src":"2005:29:22","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3791_calldata_ptr","typeString":"struct UserOperation"},"typeName":{"id":3356,"nodeType":"UserDefinedTypeName","pathNode":{"id":3355,"name":"UserOperation","nameLocations":["2005:13:22"],"nodeType":"IdentifierPath","referencedDeclaration":3791,"src":"2005:13:22"},"referencedDeclaration":3791,"src":"2005:13:22","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3791_storage_ptr","typeString":"struct UserOperation"}},"visibility":"internal"},{"constant":false,"id":3359,"mutability":"mutable","name":"userOpHash","nameLocation":"2044:10:22","nodeType":"VariableDeclaration","scope":3366,"src":"2036:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3358,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2036:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3361,"mutability":"mutable","name":"missingAccountFunds","nameLocation":"2064:19:22","nodeType":"VariableDeclaration","scope":3366,"src":"2056:27:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3360,"name":"uint256","nodeType":"ElementaryTypeName","src":"2056:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2004:80:22"},"returnParameters":{"id":3365,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3364,"mutability":"mutable","name":"validationData","nameLocation":"2111:14:22","nodeType":"VariableDeclaration","scope":3366,"src":"2103:22:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3363,"name":"uint256","nodeType":"ElementaryTypeName","src":"2103:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2102:24:22"},"scope":3367,"src":"1981:146:22","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":3368,"src":"89:2040:22","usedErrors":[]}],"src":"32:2097:22"},"id":22},"contracts/interfaces/IAggregator.sol":{"ast":{"absolutePath":"contracts/interfaces/IAggregator.sol","exportedSymbols":{"IAggregator":[3401],"UserOperation":[3791],"UserOperationLib":[3961],"calldataKeccak":[3350]},"id":3402,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3369,"literals":["solidity","^","0.8",".18"],"nodeType":"PragmaDirective","src":"32:24:23"},{"absolutePath":"contracts/interfaces/UserOperation.sol","file":"./UserOperation.sol","id":3370,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3402,"sourceUnit":3962,"src":"58:29:23","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IAggregator","contractDependencies":[],"contractKind":"interface","documentation":{"id":3371,"nodeType":"StructuredDocumentation","src":"89:84:23","text":" Aggregated Signatures validator.\n 集約した署名を検証する。 "},"fullyImplemented":false,"id":3401,"linearizedBaseContracts":[3401],"name":"IAggregator","nameLocation":"184:11:23","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3372,"nodeType":"StructuredDocumentation","src":"203:136:23","text":" validate aggregated signature.\n revert if the aggregated signature does not match the given list of operations."},"functionSelector":"e3563a4f","id":3381,"implemented":false,"kind":"function","modifiers":[],"name":"validateSignatures","nameLocation":"353:18:23","nodeType":"FunctionDefinition","parameters":{"id":3379,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3376,"mutability":"mutable","name":"userOps","nameLocation":"397:7:23","nodeType":"VariableDeclaration","scope":3381,"src":"372:32:23","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOperation_$3791_calldata_ptr_$dyn_calldata_ptr","typeString":"struct UserOperation[]"},"typeName":{"baseType":{"id":3374,"nodeType":"UserDefinedTypeName","pathNode":{"id":3373,"name":"UserOperation","nameLocations":["372:13:23"],"nodeType":"IdentifierPath","referencedDeclaration":3791,"src":"372:13:23"},"referencedDeclaration":3791,"src":"372:13:23","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3791_storage_ptr","typeString":"struct UserOperation"}},"id":3375,"nodeType":"ArrayTypeName","src":"372:15:23","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOperation_$3791_storage_$dyn_storage_ptr","typeString":"struct UserOperation[]"}},"visibility":"internal"},{"constant":false,"id":3378,"mutability":"mutable","name":"signature","nameLocation":"421:9:23","nodeType":"VariableDeclaration","scope":3381,"src":"406:24:23","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3377,"name":"bytes","nodeType":"ElementaryTypeName","src":"406:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"371:60:23"},"returnParameters":{"id":3380,"nodeType":"ParameterList","parameters":[],"src":"445:0:23"},"scope":3401,"src":"344:102:23","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3382,"nodeType":"StructuredDocumentation","src":"452:576:23","text":" validate signature of a single userOp\n This method is should be called by bundler after EntryPoint.simulateValidation() returns (reverts) with ValidationResultWithAggregation\n First it validates the signature over the userOp. Then it returns data to be used when creating the handleOps.\n @param userOp the userOperation received from the user.\n @return sigForUserOp the value to put into the signature field of the userOp when calling handleOps.\n    (usually empty, unless account and aggregator support some kind of \"multisig\""},"functionSelector":"64c530cd","id":3390,"implemented":false,"kind":"function","modifiers":[],"name":"validateUserOpSignature","nameLocation":"1042:23:23","nodeType":"FunctionDefinition","parameters":{"id":3386,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3385,"mutability":"mutable","name":"userOp","nameLocation":"1089:6:23","nodeType":"VariableDeclaration","scope":3390,"src":"1066:29:23","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3791_calldata_ptr","typeString":"struct UserOperation"},"typeName":{"id":3384,"nodeType":"UserDefinedTypeName","pathNode":{"id":3383,"name":"UserOperation","nameLocations":["1066:13:23"],"nodeType":"IdentifierPath","referencedDeclaration":3791,"src":"1066:13:23"},"referencedDeclaration":3791,"src":"1066:13:23","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3791_storage_ptr","typeString":"struct UserOperation"}},"visibility":"internal"}],"src":"1065:31:23"},"returnParameters":{"id":3389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3388,"mutability":"mutable","name":"sigForUserOp","nameLocation":"1133:12:23","nodeType":"VariableDeclaration","scope":3390,"src":"1120:25:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3387,"name":"bytes","nodeType":"ElementaryTypeName","src":"1120:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1119:27:23"},"scope":3401,"src":"1033:114:23","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3391,"nodeType":"StructuredDocumentation","src":"1153:368:23","text":" aggregate multiple signatures into a single value.\n This method is called off-chain to calculate the signature to pass with handleOps()\n bundler MAY use optimized custom code perform this aggregation\n @param userOps array of UserOperations to collect the signatures from.\n @return aggregatedSignature the aggregated signature"},"functionSelector":"275e2d79","id":3400,"implemented":false,"kind":"function","modifiers":[],"name":"aggregateSignatures","nameLocation":"1535:19:23","nodeType":"FunctionDefinition","parameters":{"id":3396,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3395,"mutability":"mutable","name":"userOps","nameLocation":"1580:7:23","nodeType":"VariableDeclaration","scope":3400,"src":"1555:32:23","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOperation_$3791_calldata_ptr_$dyn_calldata_ptr","typeString":"struct UserOperation[]"},"typeName":{"baseType":{"id":3393,"nodeType":"UserDefinedTypeName","pathNode":{"id":3392,"name":"UserOperation","nameLocations":["1555:13:23"],"nodeType":"IdentifierPath","referencedDeclaration":3791,"src":"1555:13:23"},"referencedDeclaration":3791,"src":"1555:13:23","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3791_storage_ptr","typeString":"struct UserOperation"}},"id":3394,"nodeType":"ArrayTypeName","src":"1555:15:23","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOperation_$3791_storage_$dyn_storage_ptr","typeString":"struct UserOperation[]"}},"visibility":"internal"}],"src":"1554:34:23"},"returnParameters":{"id":3399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3398,"mutability":"mutable","name":"aggregatedSignature","nameLocation":"1625:19:23","nodeType":"VariableDeclaration","scope":3400,"src":"1612:32:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3397,"name":"bytes","nodeType":"ElementaryTypeName","src":"1612:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1611:34:23"},"scope":3401,"src":"1526:120:23","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":3402,"src":"174:1474:23","usedErrors":[]}],"src":"32:1616:23"},"id":23},"contracts/interfaces/IEntryPoint.sol":{"ast":{"absolutePath":"contracts/interfaces/IEntryPoint.sol","exportedSymbols":{"IAggregator":[3401],"IEntryPoint":[3605],"INonceManager":[3624],"IStakeManager":[3764],"UserOperation":[3791],"UserOperationLib":[3961],"calldataKeccak":[3350]},"id":3606,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3403,"literals":["solidity","^","0.8",".18"],"nodeType":"PragmaDirective","src":"32:24:24"},{"absolutePath":"contracts/interfaces/UserOperation.sol","file":"./UserOperation.sol","id":3404,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3606,"sourceUnit":3962,"src":"180:29:24","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IStakeManager.sol","file":"./IStakeManager.sol","id":3405,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3606,"sourceUnit":3765,"src":"210:29:24","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IAggregator.sol","file":"./IAggregator.sol","id":3406,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3606,"sourceUnit":3402,"src":"240:27:24","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/INonceManager.sol","file":"./INonceManager.sol","id":3407,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3606,"sourceUnit":3625,"src":"268:29:24","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":3408,"name":"IStakeManager","nameLocations":["324:13:24"],"nodeType":"IdentifierPath","referencedDeclaration":3764,"src":"324:13:24"},"id":3409,"nodeType":"InheritanceSpecifier","src":"324:13:24"},{"baseName":{"id":3410,"name":"INonceManager","nameLocations":["339:13:24"],"nodeType":"IdentifierPath","referencedDeclaration":3624,"src":"339:13:24"},"id":3411,"nodeType":"InheritanceSpecifier","src":"339:13:24"}],"canonicalName":"IEntryPoint","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":3605,"linearizedBaseContracts":[3605,3624,3764],"name":"IEntryPoint","nameLocation":"309:11:24","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"eventSelector":"49628fd1471006c1482da88028e9ce4dbb080b815c9b0344d39e5a8e6ec1419f","id":3427,"name":"UserOperationEvent","nameLocation":"1060:18:24","nodeType":"EventDefinition","parameters":{"id":3426,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3413,"indexed":true,"mutability":"mutable","name":"userOpHash","nameLocation":"1095:10:24","nodeType":"VariableDeclaration","scope":3427,"src":"1079:26:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3412,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1079:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3415,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1123:6:24","nodeType":"VariableDeclaration","scope":3427,"src":"1107:22:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3414,"name":"address","nodeType":"ElementaryTypeName","src":"1107:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3417,"indexed":true,"mutability":"mutable","name":"paymaster","nameLocation":"1147:9:24","nodeType":"VariableDeclaration","scope":3427,"src":"1131:25:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3416,"name":"address","nodeType":"ElementaryTypeName","src":"1131:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3419,"indexed":false,"mutability":"mutable","name":"nonce","nameLocation":"1166:5:24","nodeType":"VariableDeclaration","scope":3427,"src":"1158:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3418,"name":"uint256","nodeType":"ElementaryTypeName","src":"1158:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3421,"indexed":false,"mutability":"mutable","name":"success","nameLocation":"1178:7:24","nodeType":"VariableDeclaration","scope":3427,"src":"1173:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3420,"name":"bool","nodeType":"ElementaryTypeName","src":"1173:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3423,"indexed":false,"mutability":"mutable","name":"actualGasCost","nameLocation":"1195:13:24","nodeType":"VariableDeclaration","scope":3427,"src":"1187:21:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3422,"name":"uint256","nodeType":"ElementaryTypeName","src":"1187:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3425,"indexed":false,"mutability":"mutable","name":"actualGasUsed","nameLocation":"1218:13:24","nodeType":"VariableDeclaration","scope":3427,"src":"1210:21:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3424,"name":"uint256","nodeType":"ElementaryTypeName","src":"1210:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1078:154:24"},"src":"1054:179:24"},{"anonymous":false,"documentation":{"id":3428,"nodeType":"StructuredDocumentation","src":"1239:333:24","text":" account \"sender\" was deployed.\n @param userOpHash the userOp that deployed this account. UserOperationEvent will follow.\n @param sender the account that is deployed\n @param factory the factory used to deploy this account (in the initCode)\n @param paymaster the paymaster used by this UserOp"},"eventSelector":"d51a9c61267aa6196961883ecf5ff2da6619c37dac0fa92122513fb32c032d2d","id":3438,"name":"AccountDeployed","nameLocation":"1583:15:24","nodeType":"EventDefinition","parameters":{"id":3437,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3430,"indexed":true,"mutability":"mutable","name":"userOpHash","nameLocation":"1615:10:24","nodeType":"VariableDeclaration","scope":3438,"src":"1599:26:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3429,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1599:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3432,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1643:6:24","nodeType":"VariableDeclaration","scope":3438,"src":"1627:22:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3431,"name":"address","nodeType":"ElementaryTypeName","src":"1627:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3434,"indexed":false,"mutability":"mutable","name":"factory","nameLocation":"1659:7:24","nodeType":"VariableDeclaration","scope":3438,"src":"1651:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3433,"name":"address","nodeType":"ElementaryTypeName","src":"1651:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3436,"indexed":false,"mutability":"mutable","name":"paymaster","nameLocation":"1676:9:24","nodeType":"VariableDeclaration","scope":3438,"src":"1668:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3435,"name":"address","nodeType":"ElementaryTypeName","src":"1668:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1598:88:24"},"src":"1577:110:24"},{"anonymous":false,"documentation":{"id":3439,"nodeType":"StructuredDocumentation","src":"1693:337:24","text":" An event emitted if the UserOperation \"callData\" reverted with non-zero length\n @param userOpHash the request unique identifier.\n @param sender the sender of this request\n @param nonce the nonce used in the request\n @param revertReason - the return bytes from the (reverted) call to \"callData\"."},"eventSelector":"1c4fada7374c0a9ee8841fc38afe82932dc0f8e69012e927f061a8bae611a201","id":3449,"name":"UserOperationRevertReason","nameLocation":"2041:25:24","nodeType":"EventDefinition","parameters":{"id":3448,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3441,"indexed":true,"mutability":"mutable","name":"userOpHash","nameLocation":"2083:10:24","nodeType":"VariableDeclaration","scope":3449,"src":"2067:26:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3440,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2067:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3443,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"2111:6:24","nodeType":"VariableDeclaration","scope":3449,"src":"2095:22:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3442,"name":"address","nodeType":"ElementaryTypeName","src":"2095:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3445,"indexed":false,"mutability":"mutable","name":"nonce","nameLocation":"2127:5:24","nodeType":"VariableDeclaration","scope":3449,"src":"2119:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3444,"name":"uint256","nodeType":"ElementaryTypeName","src":"2119:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3447,"indexed":false,"mutability":"mutable","name":"revertReason","nameLocation":"2140:12:24","nodeType":"VariableDeclaration","scope":3449,"src":"2134:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3446,"name":"bytes","nodeType":"ElementaryTypeName","src":"2134:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2066:87:24"},"src":"2035:119:24"},{"anonymous":false,"documentation":{"id":3450,"nodeType":"StructuredDocumentation","src":"2160:158:24","text":" an event emitted by handleOps(), before starting the execution loop.\n any event emitted before this event, is part of the validation."},"eventSelector":"bb47ee3e183a558b1a2ff0874b079f3fc5478b7454eacf2bfc5af2ff5878f972","id":3452,"name":"BeforeExecution","nameLocation":"2329:15:24","nodeType":"EventDefinition","parameters":{"id":3451,"nodeType":"ParameterList","parameters":[],"src":"2344:2:24"},"src":"2323:24:24"},{"anonymous":false,"documentation":{"id":3453,"nodeType":"StructuredDocumentation","src":"2353:101:24","text":" signature aggregator used by the following UserOperationEvents within this bundle."},"eventSelector":"575ff3acadd5ab348fe1855e217e0f3678f8d767d7494c9f9fefbee2e17cca4d","id":3457,"name":"SignatureAggregatorChanged","nameLocation":"2465:26:24","nodeType":"EventDefinition","parameters":{"id":3456,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3455,"indexed":true,"mutability":"mutable","name":"aggregator","nameLocation":"2508:10:24","nodeType":"VariableDeclaration","scope":3457,"src":"2492:26:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3454,"name":"address","nodeType":"ElementaryTypeName","src":"2492:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2491:28:24"},"src":"2459:61:24"},{"documentation":{"id":3458,"nodeType":"StructuredDocumentation","src":"2526:756:24","text":" a custom revert error of handleOps, to identify the offending op.\n  NOTE: if simulateValidation passes successfully, there should be no reason for handleOps to fail on it.\n  @param opIndex - index into the array of ops to the failed one (in simulateValidation, this is always zero)\n  @param reason - revert reason\n      The string starts with a unique code \"AAmn\", where \"m\" is \"1\" for factory, \"2\" for account and \"3\" for paymaster issues,\n      so a failure can be attributed to the correct entity.\n   Should be caught in off-chain handleOps simulation and not happen on-chain.\n   Useful for mitigating DoS attempts against batchers or for troubleshooting of factory/account/paymaster reverts."},"errorSelector":"220266b6","id":3464,"name":"FailedOp","nameLocation":"3293:8:24","nodeType":"ErrorDefinition","parameters":{"id":3463,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3460,"mutability":"mutable","name":"opIndex","nameLocation":"3310:7:24","nodeType":"VariableDeclaration","scope":3464,"src":"3302:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3459,"name":"uint256","nodeType":"ElementaryTypeName","src":"3302:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3462,"mutability":"mutable","name":"reason","nameLocation":"3326:6:24","nodeType":"VariableDeclaration","scope":3464,"src":"3319:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3461,"name":"string","nodeType":"ElementaryTypeName","src":"3319:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3301:32:24"},"src":"3287:47:24"},{"documentation":{"id":3465,"nodeType":"StructuredDocumentation","src":"3340:114:24","text":" error case when a signature aggregator fails to verify the aggregated signature it had created."},"errorSelector":"86a9f750","id":3469,"name":"SignatureValidationFailed","nameLocation":"3465:25:24","nodeType":"ErrorDefinition","parameters":{"id":3468,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3467,"mutability":"mutable","name":"aggregator","nameLocation":"3499:10:24","nodeType":"VariableDeclaration","scope":3469,"src":"3491:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3466,"name":"address","nodeType":"ElementaryTypeName","src":"3491:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3490:20:24"},"src":"3459:52:24"},{"documentation":{"id":3470,"nodeType":"StructuredDocumentation","src":"3517:327:24","text":" Successful result from simulateValidation.\n @param returnInfo gas and time-range returned values\n @param senderInfo stake information about the sender\n @param factoryInfo stake information about the factory (if any)\n @param paymasterInfo stake information about the paymaster (if any)"},"errorSelector":"e0cff05f","id":3484,"name":"ValidationResult","nameLocation":"3855:16:24","nodeType":"ErrorDefinition","parameters":{"id":3483,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3473,"mutability":"mutable","name":"returnInfo","nameLocation":"3883:10:24","nodeType":"VariableDeclaration","scope":3484,"src":"3872:21:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_ReturnInfo_$3581_memory_ptr","typeString":"struct IEntryPoint.ReturnInfo"},"typeName":{"id":3472,"nodeType":"UserDefinedTypeName","pathNode":{"id":3471,"name":"ReturnInfo","nameLocations":["3872:10:24"],"nodeType":"IdentifierPath","referencedDeclaration":3581,"src":"3872:10:24"},"referencedDeclaration":3581,"src":"3872:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_ReturnInfo_$3581_storage_ptr","typeString":"struct IEntryPoint.ReturnInfo"}},"visibility":"internal"},{"constant":false,"id":3476,"mutability":"mutable","name":"senderInfo","nameLocation":"3913:10:24","nodeType":"VariableDeclaration","scope":3484,"src":"3903:20:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$3716_memory_ptr","typeString":"struct IStakeManager.StakeInfo"},"typeName":{"id":3475,"nodeType":"UserDefinedTypeName","pathNode":{"id":3474,"name":"StakeInfo","nameLocations":["3903:9:24"],"nodeType":"IdentifierPath","referencedDeclaration":3716,"src":"3903:9:24"},"referencedDeclaration":3716,"src":"3903:9:24","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$3716_storage_ptr","typeString":"struct IStakeManager.StakeInfo"}},"visibility":"internal"},{"constant":false,"id":3479,"mutability":"mutable","name":"factoryInfo","nameLocation":"3935:11:24","nodeType":"VariableDeclaration","scope":3484,"src":"3925:21:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$3716_memory_ptr","typeString":"struct IStakeManager.StakeInfo"},"typeName":{"id":3478,"nodeType":"UserDefinedTypeName","pathNode":{"id":3477,"name":"StakeInfo","nameLocations":["3925:9:24"],"nodeType":"IdentifierPath","referencedDeclaration":3716,"src":"3925:9:24"},"referencedDeclaration":3716,"src":"3925:9:24","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$3716_storage_ptr","typeString":"struct IStakeManager.StakeInfo"}},"visibility":"internal"},{"constant":false,"id":3482,"mutability":"mutable","name":"paymasterInfo","nameLocation":"3958:13:24","nodeType":"VariableDeclaration","scope":3484,"src":"3948:23:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$3716_memory_ptr","typeString":"struct IStakeManager.StakeInfo"},"typeName":{"id":3481,"nodeType":"UserDefinedTypeName","pathNode":{"id":3480,"name":"StakeInfo","nameLocations":["3948:9:24"],"nodeType":"IdentifierPath","referencedDeclaration":3716,"src":"3948:9:24"},"referencedDeclaration":3716,"src":"3948:9:24","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$3716_storage_ptr","typeString":"struct IStakeManager.StakeInfo"}},"visibility":"internal"}],"src":"3871:101:24"},"src":"3849:124:24"},{"documentation":{"id":3485,"nodeType":"StructuredDocumentation","src":"3979:561:24","text":" Successful result from simulateValidation, if the account returns a signature aggregator\n @param returnInfo gas and time-range returned values\n @param senderInfo stake information about the sender\n @param factoryInfo stake information about the factory (if any)\n @param paymasterInfo stake information about the paymaster (if any)\n @param aggregatorInfo signature aggregation info (if the account requires signature aggregator)\n      bundler MUST use it to verify the signature, or reject the UserOperation"},"errorSelector":"faecb4e4","id":3502,"name":"ValidationResultWithAggregation","nameLocation":"4551:31:24","nodeType":"ErrorDefinition","parameters":{"id":3501,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3488,"mutability":"mutable","name":"returnInfo","nameLocation":"4594:10:24","nodeType":"VariableDeclaration","scope":3502,"src":"4583:21:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_ReturnInfo_$3581_memory_ptr","typeString":"struct IEntryPoint.ReturnInfo"},"typeName":{"id":3487,"nodeType":"UserDefinedTypeName","pathNode":{"id":3486,"name":"ReturnInfo","nameLocations":["4583:10:24"],"nodeType":"IdentifierPath","referencedDeclaration":3581,"src":"4583:10:24"},"referencedDeclaration":3581,"src":"4583:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_ReturnInfo_$3581_storage_ptr","typeString":"struct IEntryPoint.ReturnInfo"}},"visibility":"internal"},{"constant":false,"id":3491,"mutability":"mutable","name":"senderInfo","nameLocation":"4624:10:24","nodeType":"VariableDeclaration","scope":3502,"src":"4614:20:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$3716_memory_ptr","typeString":"struct IStakeManager.StakeInfo"},"typeName":{"id":3490,"nodeType":"UserDefinedTypeName","pathNode":{"id":3489,"name":"StakeInfo","nameLocations":["4614:9:24"],"nodeType":"IdentifierPath","referencedDeclaration":3716,"src":"4614:9:24"},"referencedDeclaration":3716,"src":"4614:9:24","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$3716_storage_ptr","typeString":"struct IStakeManager.StakeInfo"}},"visibility":"internal"},{"constant":false,"id":3494,"mutability":"mutable","name":"factoryInfo","nameLocation":"4646:11:24","nodeType":"VariableDeclaration","scope":3502,"src":"4636:21:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$3716_memory_ptr","typeString":"struct IStakeManager.StakeInfo"},"typeName":{"id":3493,"nodeType":"UserDefinedTypeName","pathNode":{"id":3492,"name":"StakeInfo","nameLocations":["4636:9:24"],"nodeType":"IdentifierPath","referencedDeclaration":3716,"src":"4636:9:24"},"referencedDeclaration":3716,"src":"4636:9:24","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$3716_storage_ptr","typeString":"struct IStakeManager.StakeInfo"}},"visibility":"internal"},{"constant":false,"id":3497,"mutability":"mutable","name":"paymasterInfo","nameLocation":"4669:13:24","nodeType":"VariableDeclaration","scope":3502,"src":"4659:23:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$3716_memory_ptr","typeString":"struct IStakeManager.StakeInfo"},"typeName":{"id":3496,"nodeType":"UserDefinedTypeName","pathNode":{"id":3495,"name":"StakeInfo","nameLocations":["4659:9:24"],"nodeType":"IdentifierPath","referencedDeclaration":3716,"src":"4659:9:24"},"referencedDeclaration":3716,"src":"4659:9:24","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$3716_storage_ptr","typeString":"struct IStakeManager.StakeInfo"}},"visibility":"internal"},{"constant":false,"id":3500,"mutability":"mutable","name":"aggregatorInfo","nameLocation":"4712:14:24","nodeType":"VariableDeclaration","scope":3502,"src":"4692:34:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_AggregatorStakeInfo_$3587_memory_ptr","typeString":"struct IEntryPoint.AggregatorStakeInfo"},"typeName":{"id":3499,"nodeType":"UserDefinedTypeName","pathNode":{"id":3498,"name":"AggregatorStakeInfo","nameLocations":["4692:19:24"],"nodeType":"IdentifierPath","referencedDeclaration":3587,"src":"4692:19:24"},"referencedDeclaration":3587,"src":"4692:19:24","typeDescriptions":{"typeIdentifier":"t_struct$_AggregatorStakeInfo_$3587_storage_ptr","typeString":"struct IEntryPoint.AggregatorStakeInfo"}},"visibility":"internal"}],"src":"4582:145:24"},"src":"4545:183:24"},{"documentation":{"id":3503,"nodeType":"StructuredDocumentation","src":"4734:51:24","text":" return value of getSenderAddress"},"errorSelector":"6ca7b806","id":3507,"name":"SenderAddressResult","nameLocation":"4796:19:24","nodeType":"ErrorDefinition","parameters":{"id":3506,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3505,"mutability":"mutable","name":"sender","nameLocation":"4824:6:24","nodeType":"VariableDeclaration","scope":3507,"src":"4816:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3504,"name":"address","nodeType":"ElementaryTypeName","src":"4816:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4815:16:24"},"src":"4790:42:24"},{"documentation":{"id":3508,"nodeType":"StructuredDocumentation","src":"4838:51:24","text":" return value of simulateHandleOp"},"errorSelector":"8b7ac980","id":3522,"name":"ExecutionResult","nameLocation":"4900:15:24","nodeType":"ErrorDefinition","parameters":{"id":3521,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3510,"mutability":"mutable","name":"preOpGas","nameLocation":"4924:8:24","nodeType":"VariableDeclaration","scope":3522,"src":"4916:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3509,"name":"uint256","nodeType":"ElementaryTypeName","src":"4916:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3512,"mutability":"mutable","name":"paid","nameLocation":"4942:4:24","nodeType":"VariableDeclaration","scope":3522,"src":"4934:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3511,"name":"uint256","nodeType":"ElementaryTypeName","src":"4934:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3514,"mutability":"mutable","name":"validAfter","nameLocation":"4955:10:24","nodeType":"VariableDeclaration","scope":3522,"src":"4948:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":3513,"name":"uint48","nodeType":"ElementaryTypeName","src":"4948:6:24","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":3516,"mutability":"mutable","name":"validUntil","nameLocation":"4974:10:24","nodeType":"VariableDeclaration","scope":3522,"src":"4967:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":3515,"name":"uint48","nodeType":"ElementaryTypeName","src":"4967:6:24","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":3518,"mutability":"mutable","name":"targetSuccess","nameLocation":"4991:13:24","nodeType":"VariableDeclaration","scope":3522,"src":"4986:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3517,"name":"bool","nodeType":"ElementaryTypeName","src":"4986:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3520,"mutability":"mutable","name":"targetResult","nameLocation":"5012:12:24","nodeType":"VariableDeclaration","scope":3522,"src":"5006:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3519,"name":"bytes","nodeType":"ElementaryTypeName","src":"5006:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4915:110:24"},"src":"4894:132:24"},{"canonicalName":"IEntryPoint.UserOpsPerAggregator","id":3532,"members":[{"constant":false,"id":3526,"mutability":"mutable","name":"userOps","nameLocation":"5124:7:24","nodeType":"VariableDeclaration","scope":3532,"src":"5108:23:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOperation_$3791_storage_$dyn_storage_ptr","typeString":"struct UserOperation[]"},"typeName":{"baseType":{"id":3524,"nodeType":"UserDefinedTypeName","pathNode":{"id":3523,"name":"UserOperation","nameLocations":["5108:13:24"],"nodeType":"IdentifierPath","referencedDeclaration":3791,"src":"5108:13:24"},"referencedDeclaration":3791,"src":"5108:13:24","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3791_storage_ptr","typeString":"struct UserOperation"}},"id":3525,"nodeType":"ArrayTypeName","src":"5108:15:24","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOperation_$3791_storage_$dyn_storage_ptr","typeString":"struct UserOperation[]"}},"visibility":"internal"},{"constant":false,"id":3529,"mutability":"mutable","name":"aggregator","nameLocation":"5184:10:24","nodeType":"VariableDeclaration","scope":3532,"src":"5172:22:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IAggregator_$3401","typeString":"contract IAggregator"},"typeName":{"id":3528,"nodeType":"UserDefinedTypeName","pathNode":{"id":3527,"name":"IAggregator","nameLocations":["5172:11:24"],"nodeType":"IdentifierPath","referencedDeclaration":3401,"src":"5172:11:24"},"referencedDeclaration":3401,"src":"5172:11:24","typeDescriptions":{"typeIdentifier":"t_contract$_IAggregator_$3401","typeString":"contract IAggregator"}},"visibility":"internal"},{"constant":false,"id":3531,"mutability":"mutable","name":"signature","nameLocation":"5242:9:24","nodeType":"VariableDeclaration","scope":3532,"src":"5236:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":3530,"name":"bytes","nodeType":"ElementaryTypeName","src":"5236:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"UserOpsPerAggregator","nameLocation":"5077:20:24","nodeType":"StructDefinition","scope":3605,"src":"5070:188:24","visibility":"public"},{"documentation":{"id":3533,"nodeType":"StructuredDocumentation","src":"5264:368:24","text":" Execute a batch of UserOperation.\n no signature aggregator is used.\n if any account requires an aggregator (that is, it returned an aggregator when\n performing simulateValidation), then handleAggregatedOps() must be used instead.\n @param ops the operations to execute\n @param beneficiary the address to receive the fees"},"functionSelector":"1fad948c","id":3542,"implemented":false,"kind":"function","modifiers":[],"name":"handleOps","nameLocation":"5646:9:24","nodeType":"FunctionDefinition","parameters":{"id":3540,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3537,"mutability":"mutable","name":"ops","nameLocation":"5681:3:24","nodeType":"VariableDeclaration","scope":3542,"src":"5656:28:24","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOperation_$3791_calldata_ptr_$dyn_calldata_ptr","typeString":"struct UserOperation[]"},"typeName":{"baseType":{"id":3535,"nodeType":"UserDefinedTypeName","pathNode":{"id":3534,"name":"UserOperation","nameLocations":["5656:13:24"],"nodeType":"IdentifierPath","referencedDeclaration":3791,"src":"5656:13:24"},"referencedDeclaration":3791,"src":"5656:13:24","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3791_storage_ptr","typeString":"struct UserOperation"}},"id":3536,"nodeType":"ArrayTypeName","src":"5656:15:24","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOperation_$3791_storage_$dyn_storage_ptr","typeString":"struct UserOperation[]"}},"visibility":"internal"},{"constant":false,"id":3539,"mutability":"mutable","name":"beneficiary","nameLocation":"5702:11:24","nodeType":"VariableDeclaration","scope":3542,"src":"5686:27:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":3538,"name":"address","nodeType":"ElementaryTypeName","src":"5686:15:24","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"src":"5655:59:24"},"returnParameters":{"id":3541,"nodeType":"ParameterList","parameters":[],"src":"5723:0:24"},"scope":3605,"src":"5637:87:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3543,"nodeType":"StructuredDocumentation","src":"5730:249:24","text":" Execute a batch of UserOperation with Aggregators\n @param opsPerAggregator the operations to execute, grouped by aggregator (or address(0) for no-aggregator accounts)\n @param beneficiary the address to receive the fees"},"functionSelector":"4b1d7cf5","id":3552,"implemented":false,"kind":"function","modifiers":[],"name":"handleAggregatedOps","nameLocation":"5993:19:24","nodeType":"FunctionDefinition","parameters":{"id":3550,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3547,"mutability":"mutable","name":"opsPerAggregator","nameLocation":"6054:16:24","nodeType":"VariableDeclaration","scope":3552,"src":"6022:48:24","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOpsPerAggregator_$3532_calldata_ptr_$dyn_calldata_ptr","typeString":"struct IEntryPoint.UserOpsPerAggregator[]"},"typeName":{"baseType":{"id":3545,"nodeType":"UserDefinedTypeName","pathNode":{"id":3544,"name":"UserOpsPerAggregator","nameLocations":["6022:20:24"],"nodeType":"IdentifierPath","referencedDeclaration":3532,"src":"6022:20:24"},"referencedDeclaration":3532,"src":"6022:20:24","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpsPerAggregator_$3532_storage_ptr","typeString":"struct IEntryPoint.UserOpsPerAggregator"}},"id":3546,"nodeType":"ArrayTypeName","src":"6022:22:24","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOpsPerAggregator_$3532_storage_$dyn_storage_ptr","typeString":"struct IEntryPoint.UserOpsPerAggregator[]"}},"visibility":"internal"},{"constant":false,"id":3549,"mutability":"mutable","name":"beneficiary","nameLocation":"6096:11:24","nodeType":"VariableDeclaration","scope":3552,"src":"6080:27:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":3548,"name":"address","nodeType":"ElementaryTypeName","src":"6080:15:24","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"src":"6012:101:24"},"returnParameters":{"id":3551,"nodeType":"ParameterList","parameters":[],"src":"6122:0:24"},"scope":3605,"src":"5984:139:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3553,"nodeType":"StructuredDocumentation","src":"6129:197:24","text":" generate a request Id - unique identifier for this request.\n the request ID is a hash over the content of the userOp (except the signature), the entrypoint and the chainid."},"functionSelector":"a6193531","id":3561,"implemented":false,"kind":"function","modifiers":[],"name":"getUserOpHash","nameLocation":"6340:13:24","nodeType":"FunctionDefinition","parameters":{"id":3557,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3556,"mutability":"mutable","name":"userOp","nameLocation":"6377:6:24","nodeType":"VariableDeclaration","scope":3561,"src":"6354:29:24","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3791_calldata_ptr","typeString":"struct UserOperation"},"typeName":{"id":3555,"nodeType":"UserDefinedTypeName","pathNode":{"id":3554,"name":"UserOperation","nameLocations":["6354:13:24"],"nodeType":"IdentifierPath","referencedDeclaration":3791,"src":"6354:13:24"},"referencedDeclaration":3791,"src":"6354:13:24","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3791_storage_ptr","typeString":"struct UserOperation"}},"visibility":"internal"}],"src":"6353:31:24"},"returnParameters":{"id":3560,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3559,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3561,"src":"6408:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3558,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6408:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6407:9:24"},"scope":3605,"src":"6331:86:24","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3562,"nodeType":"StructuredDocumentation","src":"6423:398:24","text":" Simulate a call to account.validateUserOp and paymaster.validatePaymasterUserOp.\n @dev this method always revert. Successful result is ValidationResult error. other errors are failures.\n @dev The node must also verify it doesn't use banned opcodes, and that it doesn't reference storage outside the account's data.\n @param userOp the user operation to validate."},"functionSelector":"ee219423","id":3568,"implemented":false,"kind":"function","modifiers":[],"name":"simulateValidation","nameLocation":"6835:18:24","nodeType":"FunctionDefinition","parameters":{"id":3566,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3565,"mutability":"mutable","name":"userOp","nameLocation":"6877:6:24","nodeType":"VariableDeclaration","scope":3568,"src":"6854:29:24","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3791_calldata_ptr","typeString":"struct UserOperation"},"typeName":{"id":3564,"nodeType":"UserDefinedTypeName","pathNode":{"id":3563,"name":"UserOperation","nameLocations":["6854:13:24"],"nodeType":"IdentifierPath","referencedDeclaration":3791,"src":"6854:13:24"},"referencedDeclaration":3791,"src":"6854:13:24","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3791_storage_ptr","typeString":"struct UserOperation"}},"visibility":"internal"}],"src":"6853:31:24"},"returnParameters":{"id":3567,"nodeType":"ParameterList","parameters":[],"src":"6893:0:24"},"scope":3605,"src":"6826:68:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"canonicalName":"IEntryPoint.ReturnInfo","id":3581,"members":[{"constant":false,"id":3570,"mutability":"mutable","name":"preOpGas","nameLocation":"7529:8:24","nodeType":"VariableDeclaration","scope":3581,"src":"7521:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3569,"name":"uint256","nodeType":"ElementaryTypeName","src":"7521:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3572,"mutability":"mutable","name":"prefund","nameLocation":"7555:7:24","nodeType":"VariableDeclaration","scope":3581,"src":"7547:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3571,"name":"uint256","nodeType":"ElementaryTypeName","src":"7547:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3574,"mutability":"mutable","name":"sigFailed","nameLocation":"7577:9:24","nodeType":"VariableDeclaration","scope":3581,"src":"7572:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3573,"name":"bool","nodeType":"ElementaryTypeName","src":"7572:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3576,"mutability":"mutable","name":"validAfter","nameLocation":"7603:10:24","nodeType":"VariableDeclaration","scope":3581,"src":"7596:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":3575,"name":"uint48","nodeType":"ElementaryTypeName","src":"7596:6:24","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":3578,"mutability":"mutable","name":"validUntil","nameLocation":"7630:10:24","nodeType":"VariableDeclaration","scope":3581,"src":"7623:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":3577,"name":"uint48","nodeType":"ElementaryTypeName","src":"7623:6:24","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":3580,"mutability":"mutable","name":"paymasterContext","nameLocation":"7656:16:24","nodeType":"VariableDeclaration","scope":3581,"src":"7650:22:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":3579,"name":"bytes","nodeType":"ElementaryTypeName","src":"7650:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"ReturnInfo","nameLocation":"7500:10:24","nodeType":"StructDefinition","scope":3605,"src":"7493:186:24","visibility":"public"},{"canonicalName":"IEntryPoint.AggregatorStakeInfo","id":3587,"members":[{"constant":false,"id":3583,"mutability":"mutable","name":"aggregator","nameLocation":"7859:10:24","nodeType":"VariableDeclaration","scope":3587,"src":"7851:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3582,"name":"address","nodeType":"ElementaryTypeName","src":"7851:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3586,"mutability":"mutable","name":"stakeInfo","nameLocation":"7889:9:24","nodeType":"VariableDeclaration","scope":3587,"src":"7879:19:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$3716_storage_ptr","typeString":"struct IStakeManager.StakeInfo"},"typeName":{"id":3585,"nodeType":"UserDefinedTypeName","pathNode":{"id":3584,"name":"StakeInfo","nameLocations":["7879:9:24"],"nodeType":"IdentifierPath","referencedDeclaration":3716,"src":"7879:9:24"},"referencedDeclaration":3716,"src":"7879:9:24","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$3716_storage_ptr","typeString":"struct IStakeManager.StakeInfo"}},"visibility":"internal"}],"name":"AggregatorStakeInfo","nameLocation":"7821:19:24","nodeType":"StructDefinition","scope":3605,"src":"7814:91:24","visibility":"public"},{"documentation":{"id":3588,"nodeType":"StructuredDocumentation","src":"7911:337:24","text":" Get counterfactual sender address.\n  Calculate the sender contract address that will be generated by the initCode and salt in the UserOperation.\n this method always revert, and returns the address in SenderAddressResult error\n @param initCode the constructor code to be passed into the UserOperation."},"functionSelector":"9b249f69","id":3593,"implemented":false,"kind":"function","modifiers":[],"name":"getSenderAddress","nameLocation":"8262:16:24","nodeType":"FunctionDefinition","parameters":{"id":3591,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3590,"mutability":"mutable","name":"initCode","nameLocation":"8292:8:24","nodeType":"VariableDeclaration","scope":3593,"src":"8279:21:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3589,"name":"bytes","nodeType":"ElementaryTypeName","src":"8279:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8278:23:24"},"returnParameters":{"id":3592,"nodeType":"ParameterList","parameters":[],"src":"8310:0:24"},"scope":3605,"src":"8253:58:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3594,"nodeType":"StructuredDocumentation","src":"8318:847:24","text":" simulate full execution of a UserOperation (including both validation and target execution)\n this method will always revert with \"ExecutionResult\".\n it performs full validation of the UserOperation, but ignores signature error.\n an optional target address is called after the userop succeeds, and its value is returned\n (before the entire call is reverted)\n Note that in order to collect the the success/failure of the target call, it must be executed\n with trace enabled to track the emitted events.\n @param op the UserOperation to simulate\n @param target if nonzero, a target address to call after userop simulation. If called, the targetSuccess and targetResult\n        are set to the return from that call.\n @param targetCallData callData to pass to target address"},"functionSelector":"d6383f94","id":3604,"implemented":false,"kind":"function","modifiers":[],"name":"simulateHandleOp","nameLocation":"9179:16:24","nodeType":"FunctionDefinition","parameters":{"id":3602,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3597,"mutability":"mutable","name":"op","nameLocation":"9219:2:24","nodeType":"VariableDeclaration","scope":3604,"src":"9196:25:24","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3791_calldata_ptr","typeString":"struct UserOperation"},"typeName":{"id":3596,"nodeType":"UserDefinedTypeName","pathNode":{"id":3595,"name":"UserOperation","nameLocations":["9196:13:24"],"nodeType":"IdentifierPath","referencedDeclaration":3791,"src":"9196:13:24"},"referencedDeclaration":3791,"src":"9196:13:24","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3791_storage_ptr","typeString":"struct UserOperation"}},"visibility":"internal"},{"constant":false,"id":3599,"mutability":"mutable","name":"target","nameLocation":"9231:6:24","nodeType":"VariableDeclaration","scope":3604,"src":"9223:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3598,"name":"address","nodeType":"ElementaryTypeName","src":"9223:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3601,"mutability":"mutable","name":"targetCallData","nameLocation":"9254:14:24","nodeType":"VariableDeclaration","scope":3604,"src":"9239:29:24","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3600,"name":"bytes","nodeType":"ElementaryTypeName","src":"9239:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"9195:74:24"},"returnParameters":{"id":3603,"nodeType":"ParameterList","parameters":[],"src":"9278:0:24"},"scope":3605,"src":"9170:109:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":3606,"src":"299:8982:24","usedErrors":[3464,3469,3484,3502,3507,3522]}],"src":"32:9250:24"},"id":24},"contracts/interfaces/INonceManager.sol":{"ast":{"absolutePath":"contracts/interfaces/INonceManager.sol","exportedSymbols":{"INonceManager":[3624]},"id":3625,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3607,"literals":["solidity","^","0.8",".18"],"nodeType":"PragmaDirective","src":"32:24:25"},{"abstract":false,"baseContracts":[],"canonicalName":"INonceManager","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":3624,"linearizedBaseContracts":[3624],"name":"INonceManager","nameLocation":"68:13:25","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3608,"nodeType":"StructuredDocumentation","src":"89:417:25","text":" Return the next nonce for this sender.\n Within a given key, the nonce values are sequenced (starting with zero, and incremented by one on each userop)\n But UserOp with different keys can come with arbitrary order. \n @param sender the account address\n @param key the high 192 bit of the nonce\n @return nonce a full nonce to pass for next UserOp with this sender."},"functionSelector":"35567e1a","id":3617,"implemented":false,"kind":"function","modifiers":[],"name":"getNonce","nameLocation":"520:8:25","nodeType":"FunctionDefinition","parameters":{"id":3613,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3610,"mutability":"mutable","name":"sender","nameLocation":"537:6:25","nodeType":"VariableDeclaration","scope":3617,"src":"529:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3609,"name":"address","nodeType":"ElementaryTypeName","src":"529:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3612,"mutability":"mutable","name":"key","nameLocation":"553:3:25","nodeType":"VariableDeclaration","scope":3617,"src":"545:11:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":3611,"name":"uint192","nodeType":"ElementaryTypeName","src":"545:7:25","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"528:29:25"},"returnParameters":{"id":3616,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3615,"mutability":"mutable","name":"nonce","nameLocation":"589:5:25","nodeType":"VariableDeclaration","scope":3617,"src":"581:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3614,"name":"uint256","nodeType":"ElementaryTypeName","src":"581:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"580:15:25"},"scope":3624,"src":"511:85:25","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3618,"nodeType":"StructuredDocumentation","src":"602:449:25","text":" Manually increment the nonce of the sender.\n This method is exposed just for completeness..\n Account does NOT need to call it, neither during validation, nor elsewhere,\n as the EntryPoint will update the nonce regardless.\n Possible use-case is call it with various keys to \"initialize\" their nonces to one, so that future\n UserOperations will not pay extra for the first transaction with a given key."},"functionSelector":"0bd28e3b","id":3623,"implemented":false,"kind":"function","modifiers":[],"name":"incrementNonce","nameLocation":"1065:14:25","nodeType":"FunctionDefinition","parameters":{"id":3621,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3620,"mutability":"mutable","name":"key","nameLocation":"1088:3:25","nodeType":"VariableDeclaration","scope":3623,"src":"1080:11:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":3619,"name":"uint192","nodeType":"ElementaryTypeName","src":"1080:7:25","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"1079:13:25"},"returnParameters":{"id":3622,"nodeType":"ParameterList","parameters":[],"src":"1101:0:25"},"scope":3624,"src":"1056:46:25","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":3625,"src":"58:1046:25","usedErrors":[]}],"src":"32:1072:25"},"id":25},"contracts/interfaces/IPaymaster.sol":{"ast":{"absolutePath":"contracts/interfaces/IPaymaster.sol","exportedSymbols":{"IPaymaster":[3659],"UserOperation":[3791],"UserOperationLib":[3961],"calldataKeccak":[3350]},"id":3660,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3626,"literals":["solidity","^","0.8",".18"],"nodeType":"PragmaDirective","src":"32:24:26"},{"absolutePath":"contracts/interfaces/UserOperation.sol","file":"./UserOperation.sol","id":3627,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3660,"sourceUnit":3962,"src":"58:29:26","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IPaymaster","contractDependencies":[],"contractKind":"interface","documentation":{"id":3628,"nodeType":"StructuredDocumentation","src":"89:216:26","text":" the interface exposed by a paymaster contract, who agrees to pay the gas for user's operations.\n a paymaster must hold a stake to cover the required entrypoint stake and also the gas for the transaction."},"fullyImplemented":false,"id":3659,"linearizedBaseContracts":[3659],"name":"IPaymaster","nameLocation":"316:10:26","nodeType":"ContractDefinition","nodes":[{"canonicalName":"IPaymaster.PostOpMode","id":3632,"members":[{"id":3629,"name":"opSucceeded","nameLocation":"360:11:26","nodeType":"EnumValue","src":"360:11:26"},{"id":3630,"name":"opReverted","nameLocation":"402:10:26","nodeType":"EnumValue","src":"402:10:26"},{"id":3631,"name":"postOpReverted","nameLocation":"469:14:26","nodeType":"EnumValue","src":"469:14:26"}],"name":"PostOpMode","nameLocation":"339:10:26","nodeType":"EnumDefinition","src":"334:269:26"},{"documentation":{"id":3633,"nodeType":"StructuredDocumentation","src":"609:1254:26","text":" payment validation: check if paymaster agrees to pay.\n Must verify sender is the entryPoint.\n Revert to reject this request.\n Note that bundlers will reject this method if it changes the state, unless the paymaster is trusted (whitelisted)\n The paymaster pre-pays using its deposit, and receive back a refund after the postOp method returns.\n @param userOp the user operation\n @param userOpHash hash of the user's request data.\n @param maxCost the maximum cost of this transaction (based on maximum gas and gas price from userOp)\n @return context value to send to a postOp\n      zero length to signify postOp is not required.\n @return validationData signature and time-range of this operation, encoded the same as the return value of validateUserOperation\n      <20-byte> sigAuthorizer - 0 for valid signature, 1 to mark signature failure,\n         otherwise, an address of an \"authorizer\" contract.\n      <6-byte> validUntil - last timestamp this operation is valid. 0 for \"indefinite\"\n      <6-byte> validAfter - first timestamp this operation is valid\n      Note that the validation code cannot use block.timestamp (or block.number) directly."},"functionSelector":"f465c77e","id":3647,"implemented":false,"kind":"function","modifiers":[],"name":"validatePaymasterUserOp","nameLocation":"1877:23:26","nodeType":"FunctionDefinition","parameters":{"id":3641,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3636,"mutability":"mutable","name":"userOp","nameLocation":"1924:6:26","nodeType":"VariableDeclaration","scope":3647,"src":"1901:29:26","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3791_calldata_ptr","typeString":"struct UserOperation"},"typeName":{"id":3635,"nodeType":"UserDefinedTypeName","pathNode":{"id":3634,"name":"UserOperation","nameLocations":["1901:13:26"],"nodeType":"IdentifierPath","referencedDeclaration":3791,"src":"1901:13:26"},"referencedDeclaration":3791,"src":"1901:13:26","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3791_storage_ptr","typeString":"struct UserOperation"}},"visibility":"internal"},{"constant":false,"id":3638,"mutability":"mutable","name":"userOpHash","nameLocation":"1940:10:26","nodeType":"VariableDeclaration","scope":3647,"src":"1932:18:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3637,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1932:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3640,"mutability":"mutable","name":"maxCost","nameLocation":"1960:7:26","nodeType":"VariableDeclaration","scope":3647,"src":"1952:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3639,"name":"uint256","nodeType":"ElementaryTypeName","src":"1952:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1900:68:26"},"returnParameters":{"id":3646,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3643,"mutability":"mutable","name":"context","nameLocation":"2000:7:26","nodeType":"VariableDeclaration","scope":3647,"src":"1987:20:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3642,"name":"bytes","nodeType":"ElementaryTypeName","src":"1987:5:26","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3645,"mutability":"mutable","name":"validationData","nameLocation":"2017:14:26","nodeType":"VariableDeclaration","scope":3647,"src":"2009:22:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3644,"name":"uint256","nodeType":"ElementaryTypeName","src":"2009:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1986:46:26"},"scope":3659,"src":"1868:165:26","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3648,"nodeType":"StructuredDocumentation","src":"2039:616:26","text":" post-operation handler.\n Must verify sender is the entryPoint\n @param mode enum with the following options:\n      opSucceeded - user operation succeeded.\n      opReverted  - user op reverted. still has to pay for gas.\n      postOpReverted - user op succeeded, but caused postOp (in mode=opSucceeded) to revert.\n                       Now this is the 2nd call, after user's op was deliberately reverted.\n @param context - the context value returned by validatePaymasterUserOp\n @param actualGasCost - actual gas used so far (without this postOp call)."},"functionSelector":"a9a23409","id":3658,"implemented":false,"kind":"function","modifiers":[],"name":"postOp","nameLocation":"2669:6:26","nodeType":"FunctionDefinition","parameters":{"id":3656,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3651,"mutability":"mutable","name":"mode","nameLocation":"2687:4:26","nodeType":"VariableDeclaration","scope":3658,"src":"2676:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_PostOpMode_$3632","typeString":"enum IPaymaster.PostOpMode"},"typeName":{"id":3650,"nodeType":"UserDefinedTypeName","pathNode":{"id":3649,"name":"PostOpMode","nameLocations":["2676:10:26"],"nodeType":"IdentifierPath","referencedDeclaration":3632,"src":"2676:10:26"},"referencedDeclaration":3632,"src":"2676:10:26","typeDescriptions":{"typeIdentifier":"t_enum$_PostOpMode_$3632","typeString":"enum IPaymaster.PostOpMode"}},"visibility":"internal"},{"constant":false,"id":3653,"mutability":"mutable","name":"context","nameLocation":"2708:7:26","nodeType":"VariableDeclaration","scope":3658,"src":"2693:22:26","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3652,"name":"bytes","nodeType":"ElementaryTypeName","src":"2693:5:26","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3655,"mutability":"mutable","name":"actualGasCost","nameLocation":"2725:13:26","nodeType":"VariableDeclaration","scope":3658,"src":"2717:21:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3654,"name":"uint256","nodeType":"ElementaryTypeName","src":"2717:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2675:64:26"},"returnParameters":{"id":3657,"nodeType":"ParameterList","parameters":[],"src":"2748:0:26"},"scope":3659,"src":"2660:89:26","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":3660,"src":"306:2445:26","usedErrors":[]}],"src":"32:2719:26"},"id":26},"contracts/interfaces/IStakeManager.sol":{"ast":{"absolutePath":"contracts/interfaces/IStakeManager.sol","exportedSymbols":{"IStakeManager":[3764]},"id":3765,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3661,"literals":["solidity","^","0.8",".18"],"nodeType":"PragmaDirective","src":"32:24:27"},{"abstract":false,"baseContracts":[],"canonicalName":"IStakeManager","contractDependencies":[],"contractKind":"interface","documentation":{"id":3662,"nodeType":"StructuredDocumentation","src":"58:212:27","text":" manage deposits and stakes.\n deposit is just a balance used to pay for UserOperations (either by a paymaster or an account)\n stake is value locked for at least \"unstakeDelay\" by the staked entity. "},"fullyImplemented":false,"id":3764,"linearizedBaseContracts":[3764],"name":"IStakeManager","nameLocation":"281:13:27","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"eventSelector":"2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c4","id":3668,"name":"Deposited","nameLocation":"308:9:27","nodeType":"EventDefinition","parameters":{"id":3667,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3664,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"343:7:27","nodeType":"VariableDeclaration","scope":3668,"src":"327:23:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3663,"name":"address","nodeType":"ElementaryTypeName","src":"327:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3666,"indexed":false,"mutability":"mutable","name":"totalDeposit","nameLocation":"368:12:27","nodeType":"VariableDeclaration","scope":3668,"src":"360:20:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3665,"name":"uint256","nodeType":"ElementaryTypeName","src":"360:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"317:69:27"},"src":"302:85:27"},{"anonymous":false,"eventSelector":"d1c19fbcd4551a5edfb66d43d2e337c04837afda3482b42bdf569a8fccdae5fb","id":3676,"name":"Withdrawn","nameLocation":"399:9:27","nodeType":"EventDefinition","parameters":{"id":3675,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3670,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"434:7:27","nodeType":"VariableDeclaration","scope":3676,"src":"418:23:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3669,"name":"address","nodeType":"ElementaryTypeName","src":"418:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3672,"indexed":false,"mutability":"mutable","name":"withdrawAddress","nameLocation":"459:15:27","nodeType":"VariableDeclaration","scope":3676,"src":"451:23:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3671,"name":"address","nodeType":"ElementaryTypeName","src":"451:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3674,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"492:6:27","nodeType":"VariableDeclaration","scope":3676,"src":"484:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3673,"name":"uint256","nodeType":"ElementaryTypeName","src":"484:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"408:96:27"},"src":"393:112:27"},{"anonymous":false,"documentation":{"id":3677,"nodeType":"StructuredDocumentation","src":"511:52:27","text":"Emitted when stake or unstake delay are modified"},"eventSelector":"a5ae833d0bb1dcd632d98a8b70973e8516812898e19bf27b70071ebc8dc52c01","id":3685,"name":"StakeLocked","nameLocation":"574:11:27","nodeType":"EventDefinition","parameters":{"id":3684,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3679,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"611:7:27","nodeType":"VariableDeclaration","scope":3685,"src":"595:23:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3678,"name":"address","nodeType":"ElementaryTypeName","src":"595:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3681,"indexed":false,"mutability":"mutable","name":"totalStaked","nameLocation":"636:11:27","nodeType":"VariableDeclaration","scope":3685,"src":"628:19:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3680,"name":"uint256","nodeType":"ElementaryTypeName","src":"628:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3683,"indexed":false,"mutability":"mutable","name":"unstakeDelaySec","nameLocation":"665:15:27","nodeType":"VariableDeclaration","scope":3685,"src":"657:23:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3682,"name":"uint256","nodeType":"ElementaryTypeName","src":"657:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"585:101:27"},"src":"568:119:27"},{"anonymous":false,"documentation":{"id":3686,"nodeType":"StructuredDocumentation","src":"693:52:27","text":"Emitted once a stake is scheduled for withdrawal"},"eventSelector":"fa9b3c14cc825c412c9ed81b3ba365a5b459439403f18829e572ed53a4180f0a","id":3692,"name":"StakeUnlocked","nameLocation":"756:13:27","nodeType":"EventDefinition","parameters":{"id":3691,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3688,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"795:7:27","nodeType":"VariableDeclaration","scope":3692,"src":"779:23:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3687,"name":"address","nodeType":"ElementaryTypeName","src":"779:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3690,"indexed":false,"mutability":"mutable","name":"withdrawTime","nameLocation":"820:12:27","nodeType":"VariableDeclaration","scope":3692,"src":"812:20:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3689,"name":"uint256","nodeType":"ElementaryTypeName","src":"812:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"769:69:27"},"src":"750:89:27"},{"anonymous":false,"eventSelector":"b7c918e0e249f999e965cafeb6c664271b3f4317d296461500e71da39f0cbda3","id":3700,"name":"StakeWithdrawn","nameLocation":"851:14:27","nodeType":"EventDefinition","parameters":{"id":3699,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3694,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"891:7:27","nodeType":"VariableDeclaration","scope":3700,"src":"875:23:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3693,"name":"address","nodeType":"ElementaryTypeName","src":"875:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3696,"indexed":false,"mutability":"mutable","name":"withdrawAddress","nameLocation":"916:15:27","nodeType":"VariableDeclaration","scope":3700,"src":"908:23:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3695,"name":"address","nodeType":"ElementaryTypeName","src":"908:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3698,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"949:6:27","nodeType":"VariableDeclaration","scope":3700,"src":"941:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3697,"name":"uint256","nodeType":"ElementaryTypeName","src":"941:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"865:96:27"},"src":"845:117:27"},{"canonicalName":"IStakeManager.DepositInfo","id":3711,"members":[{"constant":false,"id":3702,"mutability":"mutable","name":"deposit","nameLocation":"1642:7:27","nodeType":"VariableDeclaration","scope":3711,"src":"1634:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":3701,"name":"uint112","nodeType":"ElementaryTypeName","src":"1634:7:27","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"},{"constant":false,"id":3704,"mutability":"mutable","name":"staked","nameLocation":"1664:6:27","nodeType":"VariableDeclaration","scope":3711,"src":"1659:11:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3703,"name":"bool","nodeType":"ElementaryTypeName","src":"1659:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3706,"mutability":"mutable","name":"stake","nameLocation":"1688:5:27","nodeType":"VariableDeclaration","scope":3711,"src":"1680:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":3705,"name":"uint112","nodeType":"ElementaryTypeName","src":"1680:7:27","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"},{"constant":false,"id":3708,"mutability":"mutable","name":"unstakeDelaySec","nameLocation":"1710:15:27","nodeType":"VariableDeclaration","scope":3711,"src":"1703:22:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3707,"name":"uint32","nodeType":"ElementaryTypeName","src":"1703:6:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":3710,"mutability":"mutable","name":"withdrawTime","nameLocation":"1742:12:27","nodeType":"VariableDeclaration","scope":3711,"src":"1735:19:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":3709,"name":"uint48","nodeType":"ElementaryTypeName","src":"1735:6:27","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"name":"DepositInfo","nameLocation":"1612:11:27","nodeType":"StructDefinition","scope":3764,"src":"1605:156:27","visibility":"public"},{"canonicalName":"IStakeManager.StakeInfo","id":3716,"members":[{"constant":false,"id":3713,"mutability":"mutable","name":"stake","nameLocation":"1863:5:27","nodeType":"VariableDeclaration","scope":3716,"src":"1855:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3712,"name":"uint256","nodeType":"ElementaryTypeName","src":"1855:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3715,"mutability":"mutable","name":"unstakeDelaySec","nameLocation":"1886:15:27","nodeType":"VariableDeclaration","scope":3716,"src":"1878:23:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3714,"name":"uint256","nodeType":"ElementaryTypeName","src":"1878:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"StakeInfo","nameLocation":"1835:9:27","nodeType":"StructDefinition","scope":3764,"src":"1828:80:27","visibility":"public"},{"documentation":{"id":3717,"nodeType":"StructuredDocumentation","src":"1914:60:27","text":"@return info - full deposit information of given account"},"functionSelector":"5287ce12","id":3725,"implemented":false,"kind":"function","modifiers":[],"name":"getDepositInfo","nameLocation":"1988:14:27","nodeType":"FunctionDefinition","parameters":{"id":3720,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3719,"mutability":"mutable","name":"account","nameLocation":"2011:7:27","nodeType":"VariableDeclaration","scope":3725,"src":"2003:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3718,"name":"address","nodeType":"ElementaryTypeName","src":"2003:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2002:17:27"},"returnParameters":{"id":3724,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3723,"mutability":"mutable","name":"info","nameLocation":"2062:4:27","nodeType":"VariableDeclaration","scope":3725,"src":"2043:23:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_DepositInfo_$3711_memory_ptr","typeString":"struct IStakeManager.DepositInfo"},"typeName":{"id":3722,"nodeType":"UserDefinedTypeName","pathNode":{"id":3721,"name":"DepositInfo","nameLocations":["2043:11:27"],"nodeType":"IdentifierPath","referencedDeclaration":3711,"src":"2043:11:27"},"referencedDeclaration":3711,"src":"2043:11:27","typeDescriptions":{"typeIdentifier":"t_struct$_DepositInfo_$3711_storage_ptr","typeString":"struct IStakeManager.DepositInfo"}},"visibility":"internal"}],"src":"2042:25:27"},"scope":3764,"src":"1979:89:27","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3726,"nodeType":"StructuredDocumentation","src":"2074:56:27","text":"@return the deposit (for gas payment) of the account"},"functionSelector":"70a08231","id":3733,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"2144:9:27","nodeType":"FunctionDefinition","parameters":{"id":3729,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3728,"mutability":"mutable","name":"account","nameLocation":"2162:7:27","nodeType":"VariableDeclaration","scope":3733,"src":"2154:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3727,"name":"address","nodeType":"ElementaryTypeName","src":"2154:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2153:17:27"},"returnParameters":{"id":3732,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3731,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3733,"src":"2194:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3730,"name":"uint256","nodeType":"ElementaryTypeName","src":"2194:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2193:9:27"},"scope":3764,"src":"2135:68:27","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3734,"nodeType":"StructuredDocumentation","src":"2209:58:27","text":" add to the deposit of the given account"},"functionSelector":"b760faf9","id":3739,"implemented":false,"kind":"function","modifiers":[],"name":"depositTo","nameLocation":"2281:9:27","nodeType":"FunctionDefinition","parameters":{"id":3737,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3736,"mutability":"mutable","name":"account","nameLocation":"2299:7:27","nodeType":"VariableDeclaration","scope":3739,"src":"2291:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3735,"name":"address","nodeType":"ElementaryTypeName","src":"2291:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2290:17:27"},"returnParameters":{"id":3738,"nodeType":"ParameterList","parameters":[],"src":"2324:0:27"},"scope":3764,"src":"2272:53:27","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":3740,"nodeType":"StructuredDocumentation","src":"2331:201:27","text":" add to the account's stake - amount and delay\n any pending unstake is first cancelled.\n @param _unstakeDelaySec the new lock duration before the deposit can be withdrawn."},"functionSelector":"0396cb60","id":3745,"implemented":false,"kind":"function","modifiers":[],"name":"addStake","nameLocation":"2546:8:27","nodeType":"FunctionDefinition","parameters":{"id":3743,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3742,"mutability":"mutable","name":"_unstakeDelaySec","nameLocation":"2562:16:27","nodeType":"VariableDeclaration","scope":3745,"src":"2555:23:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3741,"name":"uint32","nodeType":"ElementaryTypeName","src":"2555:6:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"2554:25:27"},"returnParameters":{"id":3744,"nodeType":"ParameterList","parameters":[],"src":"2596:0:27"},"scope":3764,"src":"2537:60:27","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":3746,"nodeType":"StructuredDocumentation","src":"2603:128:27","text":" attempt to unlock the stake.\n the value can be withdrawn (using withdrawStake) after the unstake delay."},"functionSelector":"bb9fe6bf","id":3749,"implemented":false,"kind":"function","modifiers":[],"name":"unlockStake","nameLocation":"2745:11:27","nodeType":"FunctionDefinition","parameters":{"id":3747,"nodeType":"ParameterList","parameters":[],"src":"2756:2:27"},"returnParameters":{"id":3748,"nodeType":"ParameterList","parameters":[],"src":"2767:0:27"},"scope":3764,"src":"2736:32:27","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3750,"nodeType":"StructuredDocumentation","src":"2774:194:27","text":" withdraw from the (unlocked) stake.\n must first call unlockStake and wait for the unstakeDelay to pass\n @param withdrawAddress the address to send withdrawn value."},"functionSelector":"c23a5cea","id":3755,"implemented":false,"kind":"function","modifiers":[],"name":"withdrawStake","nameLocation":"2982:13:27","nodeType":"FunctionDefinition","parameters":{"id":3753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3752,"mutability":"mutable","name":"withdrawAddress","nameLocation":"3012:15:27","nodeType":"VariableDeclaration","scope":3755,"src":"2996:31:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":3751,"name":"address","nodeType":"ElementaryTypeName","src":"2996:15:27","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"src":"2995:33:27"},"returnParameters":{"id":3754,"nodeType":"ParameterList","parameters":[],"src":"3037:0:27"},"scope":3764,"src":"2973:65:27","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3756,"nodeType":"StructuredDocumentation","src":"3044:165:27","text":" withdraw from the deposit.\n @param withdrawAddress the address to send withdrawn value.\n @param withdrawAmount the amount to withdraw."},"functionSelector":"205c2878","id":3763,"implemented":false,"kind":"function","modifiers":[],"name":"withdrawTo","nameLocation":"3223:10:27","nodeType":"FunctionDefinition","parameters":{"id":3761,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3758,"mutability":"mutable","name":"withdrawAddress","nameLocation":"3250:15:27","nodeType":"VariableDeclaration","scope":3763,"src":"3234:31:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":3757,"name":"address","nodeType":"ElementaryTypeName","src":"3234:15:27","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":3760,"mutability":"mutable","name":"withdrawAmount","nameLocation":"3275:14:27","nodeType":"VariableDeclaration","scope":3763,"src":"3267:22:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3759,"name":"uint256","nodeType":"ElementaryTypeName","src":"3267:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3233:57:27"},"returnParameters":{"id":3762,"nodeType":"ParameterList","parameters":[],"src":"3299:0:27"},"scope":3764,"src":"3214:86:27","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":3765,"src":"271:3031:27","usedErrors":[]}],"src":"32:3270:27"},"id":27},"contracts/interfaces/UserOperation.sol":{"ast":{"absolutePath":"contracts/interfaces/UserOperation.sol","exportedSymbols":{"UserOperation":[3791],"UserOperationLib":[3961],"calldataKeccak":[3350]},"id":3962,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3766,"literals":["solidity","^","0.8",".18"],"nodeType":"PragmaDirective","src":"32:24:28"},{"absolutePath":"contracts/core/Helpers.sol","file":"../core/Helpers.sol","id":3768,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3962,"sourceUnit":3351,"src":"100:51:28","symbolAliases":[{"foreign":{"id":3767,"name":"calldataKeccak","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3350,"src":"108:14:28","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"canonicalName":"UserOperation","id":3791,"members":[{"constant":false,"id":3770,"mutability":"mutable","name":"sender","nameLocation":"1234:6:28","nodeType":"VariableDeclaration","scope":3791,"src":"1226:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3769,"name":"address","nodeType":"ElementaryTypeName","src":"1226:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3772,"mutability":"mutable","name":"nonce","nameLocation":"1258:5:28","nodeType":"VariableDeclaration","scope":3791,"src":"1250:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3771,"name":"uint256","nodeType":"ElementaryTypeName","src":"1250:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3774,"mutability":"mutable","name":"initCode","nameLocation":"1279:8:28","nodeType":"VariableDeclaration","scope":3791,"src":"1273:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":3773,"name":"bytes","nodeType":"ElementaryTypeName","src":"1273:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3776,"mutability":"mutable","name":"callData","nameLocation":"1303:8:28","nodeType":"VariableDeclaration","scope":3791,"src":"1297:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":3775,"name":"bytes","nodeType":"ElementaryTypeName","src":"1297:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3778,"mutability":"mutable","name":"callGasLimit","nameLocation":"1329:12:28","nodeType":"VariableDeclaration","scope":3791,"src":"1321:20:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3777,"name":"uint256","nodeType":"ElementaryTypeName","src":"1321:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3780,"mutability":"mutable","name":"verificationGasLimit","nameLocation":"1359:20:28","nodeType":"VariableDeclaration","scope":3791,"src":"1351:28:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3779,"name":"uint256","nodeType":"ElementaryTypeName","src":"1351:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3782,"mutability":"mutable","name":"preVerificationGas","nameLocation":"1397:18:28","nodeType":"VariableDeclaration","scope":3791,"src":"1389:26:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3781,"name":"uint256","nodeType":"ElementaryTypeName","src":"1389:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3784,"mutability":"mutable","name":"maxFeePerGas","nameLocation":"1433:12:28","nodeType":"VariableDeclaration","scope":3791,"src":"1425:20:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3783,"name":"uint256","nodeType":"ElementaryTypeName","src":"1425:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3786,"mutability":"mutable","name":"maxPriorityFeePerGas","nameLocation":"1463:20:28","nodeType":"VariableDeclaration","scope":3791,"src":"1455:28:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3785,"name":"uint256","nodeType":"ElementaryTypeName","src":"1455:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3788,"mutability":"mutable","name":"paymasterAndData","nameLocation":"1499:16:28","nodeType":"VariableDeclaration","scope":3791,"src":"1493:22:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":3787,"name":"bytes","nodeType":"ElementaryTypeName","src":"1493:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3790,"mutability":"mutable","name":"signature","nameLocation":"1531:9:28","nodeType":"VariableDeclaration","scope":3791,"src":"1525:15:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":3789,"name":"bytes","nodeType":"ElementaryTypeName","src":"1525:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"UserOperation","nameLocation":"1201:13:28","nodeType":"StructDefinition","scope":3962,"src":"1194:353:28","visibility":"public"},{"abstract":false,"baseContracts":[],"canonicalName":"UserOperationLib","contractDependencies":[],"contractKind":"library","documentation":{"id":3792,"nodeType":"StructuredDocumentation","src":"1549:77:28","text":" Utility functions helpful when working with UserOperation structs."},"fullyImplemented":true,"id":3961,"linearizedBaseContracts":[3961],"name":"UserOperationLib","nameLocation":"1635:16:28","nodeType":"ContractDefinition","nodes":[{"body":{"id":3812,"nodeType":"Block","src":"1741:199:28","statements":[{"assignments":[3801],"declarations":[{"constant":false,"id":3801,"mutability":"mutable","name":"data","nameLocation":"1759:4:28","nodeType":"VariableDeclaration","scope":3812,"src":"1751:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3800,"name":"address","nodeType":"ElementaryTypeName","src":"1751:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3802,"nodeType":"VariableDeclarationStatement","src":"1751:12:28"},{"AST":{"nodeType":"YulBlock","src":"1865:30:28","statements":[{"nodeType":"YulAssignment","src":"1866:28:28","value":{"arguments":[{"name":"userOp","nodeType":"YulIdentifier","src":"1887:6:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1874:12:28"},"nodeType":"YulFunctionCall","src":"1874:20:28"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"1866:4:28"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3801,"isOffset":false,"isSlot":false,"src":"1866:4:28","valueSize":1},{"declaration":3795,"isOffset":false,"isSlot":false,"src":"1887:6:28","valueSize":1}],"id":3803,"nodeType":"InlineAssembly","src":"1856:39:28"},{"expression":{"arguments":[{"arguments":[{"id":3808,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3801,"src":"1927:4:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3807,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1919:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":3806,"name":"uint160","nodeType":"ElementaryTypeName","src":"1919:7:28","typeDescriptions":{}}},"id":3809,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1919:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":3805,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1911:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3804,"name":"address","nodeType":"ElementaryTypeName","src":"1911:7:28","typeDescriptions":{}}},"id":3810,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1911:22:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3799,"id":3811,"nodeType":"Return","src":"1904:29:28"}]},"id":3813,"implemented":true,"kind":"function","modifiers":[],"name":"getSender","nameLocation":"1668:9:28","nodeType":"FunctionDefinition","parameters":{"id":3796,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3795,"mutability":"mutable","name":"userOp","nameLocation":"1701:6:28","nodeType":"VariableDeclaration","scope":3813,"src":"1678:29:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3791_calldata_ptr","typeString":"struct UserOperation"},"typeName":{"id":3794,"nodeType":"UserDefinedTypeName","pathNode":{"id":3793,"name":"UserOperation","nameLocations":["1678:13:28"],"nodeType":"IdentifierPath","referencedDeclaration":3791,"src":"1678:13:28"},"referencedDeclaration":3791,"src":"1678:13:28","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3791_storage_ptr","typeString":"struct UserOperation"}},"visibility":"internal"}],"src":"1677:31:28"},"returnParameters":{"id":3799,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3798,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3813,"src":"1732:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3797,"name":"address","nodeType":"ElementaryTypeName","src":"1732:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1731:9:28"},"scope":3961,"src":"1659:281:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3847,"nodeType":"Block","src":"2161:391:28","statements":[{"id":3846,"nodeType":"UncheckedBlock","src":"2167:379:28","statements":[{"assignments":[3822],"declarations":[{"constant":false,"id":3822,"mutability":"mutable","name":"maxFeePerGas","nameLocation":"2195:12:28","nodeType":"VariableDeclaration","scope":3846,"src":"2187:20:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3821,"name":"uint256","nodeType":"ElementaryTypeName","src":"2187:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3825,"initialValue":{"expression":{"id":3823,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3816,"src":"2210:6:28","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3791_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":3824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2217:12:28","memberName":"maxFeePerGas","nodeType":"MemberAccess","referencedDeclaration":3784,"src":"2210:19:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2187:42:28"},{"assignments":[3827],"declarations":[{"constant":false,"id":3827,"mutability":"mutable","name":"maxPriorityFeePerGas","nameLocation":"2247:20:28","nodeType":"VariableDeclaration","scope":3846,"src":"2239:28:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3826,"name":"uint256","nodeType":"ElementaryTypeName","src":"2239:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3830,"initialValue":{"expression":{"id":3828,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3816,"src":"2270:6:28","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3791_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":3829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2277:20:28","memberName":"maxPriorityFeePerGas","nodeType":"MemberAccess","referencedDeclaration":3786,"src":"2270:27:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2239:58:28"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3831,"name":"maxFeePerGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3822,"src":"2311:12:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3832,"name":"maxPriorityFeePerGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3827,"src":"2327:20:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2311:36:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3837,"nodeType":"IfStatement","src":"2307:161:28","trueBody":{"id":3836,"nodeType":"Block","src":"2349:119:28","statements":[{"expression":{"id":3834,"name":"maxFeePerGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3822,"src":"2445:12:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3820,"id":3835,"nodeType":"Return","src":"2438:19:28"}]}},{"expression":{"arguments":[{"id":3839,"name":"maxFeePerGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3822,"src":"2488:12:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3840,"name":"maxPriorityFeePerGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3827,"src":"2502:20:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":3841,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2525:5:28","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2531:7:28","memberName":"basefee","nodeType":"MemberAccess","src":"2525:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2502:36:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3838,"name":"min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3960,"src":"2484:3:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3844,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2484:55:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3820,"id":3845,"nodeType":"Return","src":"2477:62:28"}]}]},"id":3848,"implemented":true,"kind":"function","modifiers":[],"name":"gasPrice","nameLocation":"2089:8:28","nodeType":"FunctionDefinition","parameters":{"id":3817,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3816,"mutability":"mutable","name":"userOp","nameLocation":"2121:6:28","nodeType":"VariableDeclaration","scope":3848,"src":"2098:29:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3791_calldata_ptr","typeString":"struct UserOperation"},"typeName":{"id":3815,"nodeType":"UserDefinedTypeName","pathNode":{"id":3814,"name":"UserOperation","nameLocations":["2098:13:28"],"nodeType":"IdentifierPath","referencedDeclaration":3791,"src":"2098:13:28"},"referencedDeclaration":3791,"src":"2098:13:28","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3791_storage_ptr","typeString":"struct UserOperation"}},"visibility":"internal"}],"src":"2097:31:28"},"returnParameters":{"id":3820,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3819,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3848,"src":"2152:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3818,"name":"uint256","nodeType":"ElementaryTypeName","src":"2152:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2151:9:28"},"scope":3961,"src":"2080:472:28","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3927,"nodeType":"Block","src":"2644:856:28","statements":[{"assignments":[3857],"declarations":[{"constant":false,"id":3857,"mutability":"mutable","name":"sender","nameLocation":"2662:6:28","nodeType":"VariableDeclaration","scope":3927,"src":"2654:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3856,"name":"address","nodeType":"ElementaryTypeName","src":"2654:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3861,"initialValue":{"arguments":[{"id":3859,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3851,"src":"2681:6:28","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3791_calldata_ptr","typeString":"struct UserOperation calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_UserOperation_$3791_calldata_ptr","typeString":"struct UserOperation calldata"}],"id":3858,"name":"getSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3813,"src":"2671:9:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_UserOperation_$3791_calldata_ptr_$returns$_t_address_$","typeString":"function (struct UserOperation calldata) pure returns (address)"}},"id":3860,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2671:17:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2654:34:28"},{"assignments":[3863],"declarations":[{"constant":false,"id":3863,"mutability":"mutable","name":"nonce","nameLocation":"2706:5:28","nodeType":"VariableDeclaration","scope":3927,"src":"2698:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3862,"name":"uint256","nodeType":"ElementaryTypeName","src":"2698:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3866,"initialValue":{"expression":{"id":3864,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3851,"src":"2714:6:28","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3791_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":3865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2721:5:28","memberName":"nonce","nodeType":"MemberAccess","referencedDeclaration":3772,"src":"2714:12:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2698:28:28"},{"assignments":[3868],"declarations":[{"constant":false,"id":3868,"mutability":"mutable","name":"hashInitCode","nameLocation":"2744:12:28","nodeType":"VariableDeclaration","scope":3927,"src":"2736:20:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3867,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2736:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3873,"initialValue":{"arguments":[{"expression":{"id":3870,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3851,"src":"2774:6:28","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3791_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":3871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2781:8:28","memberName":"initCode","nodeType":"MemberAccess","referencedDeclaration":3774,"src":"2774:15:28","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":3869,"name":"calldataKeccak","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3350,"src":"2759:14:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_calldata_ptr_$returns$_t_bytes32_$","typeString":"function (bytes calldata) pure returns (bytes32)"}},"id":3872,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2759:31:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2736:54:28"},{"assignments":[3875],"declarations":[{"constant":false,"id":3875,"mutability":"mutable","name":"hashCallData","nameLocation":"2808:12:28","nodeType":"VariableDeclaration","scope":3927,"src":"2800:20:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3874,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2800:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3880,"initialValue":{"arguments":[{"expression":{"id":3877,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3851,"src":"2838:6:28","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3791_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":3878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2845:8:28","memberName":"callData","nodeType":"MemberAccess","referencedDeclaration":3776,"src":"2838:15:28","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":3876,"name":"calldataKeccak","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3350,"src":"2823:14:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_calldata_ptr_$returns$_t_bytes32_$","typeString":"function (bytes calldata) pure returns (bytes32)"}},"id":3879,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2823:31:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2800:54:28"},{"assignments":[3882],"declarations":[{"constant":false,"id":3882,"mutability":"mutable","name":"callGasLimit","nameLocation":"2872:12:28","nodeType":"VariableDeclaration","scope":3927,"src":"2864:20:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3881,"name":"uint256","nodeType":"ElementaryTypeName","src":"2864:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3885,"initialValue":{"expression":{"id":3883,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3851,"src":"2887:6:28","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3791_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":3884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2894:12:28","memberName":"callGasLimit","nodeType":"MemberAccess","referencedDeclaration":3778,"src":"2887:19:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2864:42:28"},{"assignments":[3887],"declarations":[{"constant":false,"id":3887,"mutability":"mutable","name":"verificationGasLimit","nameLocation":"2924:20:28","nodeType":"VariableDeclaration","scope":3927,"src":"2916:28:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3886,"name":"uint256","nodeType":"ElementaryTypeName","src":"2916:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3890,"initialValue":{"expression":{"id":3888,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3851,"src":"2947:6:28","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3791_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":3889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2954:20:28","memberName":"verificationGasLimit","nodeType":"MemberAccess","referencedDeclaration":3780,"src":"2947:27:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2916:58:28"},{"assignments":[3892],"declarations":[{"constant":false,"id":3892,"mutability":"mutable","name":"preVerificationGas","nameLocation":"2992:18:28","nodeType":"VariableDeclaration","scope":3927,"src":"2984:26:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3891,"name":"uint256","nodeType":"ElementaryTypeName","src":"2984:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3895,"initialValue":{"expression":{"id":3893,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3851,"src":"3013:6:28","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3791_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":3894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3020:18:28","memberName":"preVerificationGas","nodeType":"MemberAccess","referencedDeclaration":3782,"src":"3013:25:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2984:54:28"},{"assignments":[3897],"declarations":[{"constant":false,"id":3897,"mutability":"mutable","name":"maxFeePerGas","nameLocation":"3056:12:28","nodeType":"VariableDeclaration","scope":3927,"src":"3048:20:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3896,"name":"uint256","nodeType":"ElementaryTypeName","src":"3048:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3900,"initialValue":{"expression":{"id":3898,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3851,"src":"3071:6:28","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3791_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":3899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3078:12:28","memberName":"maxFeePerGas","nodeType":"MemberAccess","referencedDeclaration":3784,"src":"3071:19:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3048:42:28"},{"assignments":[3902],"declarations":[{"constant":false,"id":3902,"mutability":"mutable","name":"maxPriorityFeePerGas","nameLocation":"3108:20:28","nodeType":"VariableDeclaration","scope":3927,"src":"3100:28:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3901,"name":"uint256","nodeType":"ElementaryTypeName","src":"3100:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3905,"initialValue":{"expression":{"id":3903,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3851,"src":"3131:6:28","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3791_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":3904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3138:20:28","memberName":"maxPriorityFeePerGas","nodeType":"MemberAccess","referencedDeclaration":3786,"src":"3131:27:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3100:58:28"},{"assignments":[3907],"declarations":[{"constant":false,"id":3907,"mutability":"mutable","name":"hashPaymasterAndData","nameLocation":"3176:20:28","nodeType":"VariableDeclaration","scope":3927,"src":"3168:28:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3906,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3168:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3912,"initialValue":{"arguments":[{"expression":{"id":3909,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3851,"src":"3214:6:28","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3791_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":3910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3221:16:28","memberName":"paymasterAndData","nodeType":"MemberAccess","referencedDeclaration":3788,"src":"3214:23:28","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":3908,"name":"calldataKeccak","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3350,"src":"3199:14:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_calldata_ptr_$returns$_t_bytes32_$","typeString":"function (bytes calldata) pure returns (bytes32)"}},"id":3911,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3199:39:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"3168:70:28"},{"expression":{"arguments":[{"id":3915,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3857,"src":"3280:6:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3916,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3863,"src":"3288:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3917,"name":"hashInitCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3868,"src":"3307:12:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3918,"name":"hashCallData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3875,"src":"3321:12:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3919,"name":"callGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3882,"src":"3347:12:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3920,"name":"verificationGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3887,"src":"3361:20:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3921,"name":"preVerificationGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3892,"src":"3383:18:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3922,"name":"maxFeePerGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3897,"src":"3415:12:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3923,"name":"maxPriorityFeePerGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3902,"src":"3429:20:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3924,"name":"hashPaymasterAndData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3907,"src":"3463:20:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":3913,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3256:3:28","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3914,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3260:6:28","memberName":"encode","nodeType":"MemberAccess","src":"3256:10:28","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3925,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3256:237:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3855,"id":3926,"nodeType":"Return","src":"3249:244:28"}]},"id":3928,"implemented":true,"kind":"function","modifiers":[],"name":"pack","nameLocation":"2567:4:28","nodeType":"FunctionDefinition","parameters":{"id":3852,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3851,"mutability":"mutable","name":"userOp","nameLocation":"2595:6:28","nodeType":"VariableDeclaration","scope":3928,"src":"2572:29:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3791_calldata_ptr","typeString":"struct UserOperation"},"typeName":{"id":3850,"nodeType":"UserDefinedTypeName","pathNode":{"id":3849,"name":"UserOperation","nameLocations":["2572:13:28"],"nodeType":"IdentifierPath","referencedDeclaration":3791,"src":"2572:13:28"},"referencedDeclaration":3791,"src":"2572:13:28","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3791_storage_ptr","typeString":"struct UserOperation"}},"visibility":"internal"}],"src":"2571:31:28"},"returnParameters":{"id":3855,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3854,"mutability":"mutable","name":"ret","nameLocation":"2639:3:28","nodeType":"VariableDeclaration","scope":3928,"src":"2626:16:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3853,"name":"bytes","nodeType":"ElementaryTypeName","src":"2626:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2625:18:28"},"scope":3961,"src":"2558:942:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3942,"nodeType":"Block","src":"3583:47:28","statements":[{"expression":{"arguments":[{"arguments":[{"id":3938,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3931,"src":"3615:6:28","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3791_calldata_ptr","typeString":"struct UserOperation calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_UserOperation_$3791_calldata_ptr","typeString":"struct UserOperation calldata"}],"id":3937,"name":"pack","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3928,"src":"3610:4:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_UserOperation_$3791_calldata_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (struct UserOperation calldata) pure returns (bytes memory)"}},"id":3939,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3610:12:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3936,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3600:9:28","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3940,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3600:23:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3935,"id":3941,"nodeType":"Return","src":"3593:30:28"}]},"id":3943,"implemented":true,"kind":"function","modifiers":[],"name":"hash","nameLocation":"3515:4:28","nodeType":"FunctionDefinition","parameters":{"id":3932,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3931,"mutability":"mutable","name":"userOp","nameLocation":"3543:6:28","nodeType":"VariableDeclaration","scope":3943,"src":"3520:29:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3791_calldata_ptr","typeString":"struct UserOperation"},"typeName":{"id":3930,"nodeType":"UserDefinedTypeName","pathNode":{"id":3929,"name":"UserOperation","nameLocations":["3520:13:28"],"nodeType":"IdentifierPath","referencedDeclaration":3791,"src":"3520:13:28"},"referencedDeclaration":3791,"src":"3520:13:28","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3791_storage_ptr","typeString":"struct UserOperation"}},"visibility":"internal"}],"src":"3519:31:28"},"returnParameters":{"id":3935,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3934,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3943,"src":"3574:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3933,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3574:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3573:9:28"},"scope":3961,"src":"3506:124:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3959,"nodeType":"Block","src":"3703:37:28","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3952,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3945,"src":"3720:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3953,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3947,"src":"3724:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3720:5:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":3956,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3947,"src":"3732:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"3720:13:28","trueExpression":{"id":3955,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3945,"src":"3728:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3951,"id":3958,"nodeType":"Return","src":"3713:20:28"}]},"id":3960,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"3645:3:28","nodeType":"FunctionDefinition","parameters":{"id":3948,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3945,"mutability":"mutable","name":"a","nameLocation":"3657:1:28","nodeType":"VariableDeclaration","scope":3960,"src":"3649:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3944,"name":"uint256","nodeType":"ElementaryTypeName","src":"3649:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3947,"mutability":"mutable","name":"b","nameLocation":"3668:1:28","nodeType":"VariableDeclaration","scope":3960,"src":"3660:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3946,"name":"uint256","nodeType":"ElementaryTypeName","src":"3660:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3648:22:28"},"returnParameters":{"id":3951,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3950,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3960,"src":"3694:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3949,"name":"uint256","nodeType":"ElementaryTypeName","src":"3694:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3693:9:28"},"scope":3961,"src":"3636:104:28","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3962,"src":"1627:2115:28","usedErrors":[]}],"src":"32:3710:28"},"id":28},"contracts/samples/FactoryManager.sol":{"ast":{"absolutePath":"contracts/samples/FactoryManager.sol","exportedSymbols":{"Address":[1127],"BaseAccount":[3112],"Counters":[1201],"Create2":[1282],"ECDSA":[1987],"ERC1967Proxy":[67],"ERC1967Upgrade":[371],"FactoryManager":[4078],"IAccount":[3367],"IAggregator":[3401],"IBeacon":[433],"IERC1155Receiver":[759],"IERC165":[1999],"IERC1822Proxiable":[30],"IERC1967":[20],"IERC721Receiver":[777],"IERC777Recipient":[797],"IEntryPoint":[3605],"INonceManager":[3624],"IStakeManager":[3764],"Initializable":[602],"Math":[2865],"Proxy":[423],"SignedMath":[2970],"SimpleAccount":[4402],"SimpleAccountFactory":[4588],"StorageSlot":[1392],"Strings":[1621],"TokenCallbackHandler":[4712],"UUPSUpgradeable":[718],"UserOperation":[3791],"UserOperationLib":[3961],"ValidationData":[3121],"_intersectTimeRange":[3265],"_packValidationData":[3302,3340],"_parseValidationData":[3180],"calldataKeccak":[3350]},"id":4079,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3963,"literals":["solidity","^","0.8",".18"],"nodeType":"PragmaDirective","src":"32:24:29"},{"absolutePath":"contracts/samples/SimpleAccountFactory.sol","file":"./SimpleAccountFactory.sol","id":3964,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4079,"sourceUnit":4589,"src":"58:36:29","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IEntryPoint.sol","file":"./../interfaces/IEntryPoint.sol","id":3965,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4079,"sourceUnit":3606,"src":"95:41:29","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Counters.sol","file":"@openzeppelin/contracts/utils/Counters.sol","id":3966,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4079,"sourceUnit":1202,"src":"137:52:29","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"FactoryManager","contractDependencies":[4588],"contractKind":"contract","documentation":{"id":3967,"nodeType":"StructuredDocumentation","src":"191:44:29","text":" FactoryManager コントラクト"},"fullyImplemented":true,"id":4078,"linearizedBaseContracts":[4078],"name":"FactoryManager","nameLocation":"245:14:29","nodeType":"ContractDefinition","nodes":[{"global":false,"id":3971,"libraryName":{"id":3968,"name":"Counters","nameLocations":["272:8:29"],"nodeType":"IdentifierPath","referencedDeclaration":1201,"src":"272:8:29"},"nodeType":"UsingForDirective","src":"266:36:29","typeName":{"id":3970,"nodeType":"UserDefinedTypeName","pathNode":{"id":3969,"name":"Counters.Counter","nameLocations":["285:8:29","294:7:29"],"nodeType":"IdentifierPath","referencedDeclaration":1133,"src":"285:16:29"},"referencedDeclaration":1133,"src":"285:16:29","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1133_storage_ptr","typeString":"struct Counters.Counter"}}},{"constant":false,"functionSelector":"a905054d","id":3974,"mutability":"mutable","name":"ENTRY_POINT_ADDRESS","nameLocation":"390:19:29","nodeType":"VariableDeclaration","scope":4078,"src":"375:79:29","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3972,"name":"address","nodeType":"ElementaryTypeName","src":"375:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307835464631333744346230464443443439446341333063374346353745353738613032366432373839","id":3973,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"412:42:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x5FF137D4b0FDCD49DcA30c7CF57E578a026d2789"},"visibility":"public"},{"constant":false,"id":3977,"mutability":"mutable","name":"_factoryIds","nameLocation":"486:11:29","nodeType":"VariableDeclaration","scope":4078,"src":"461:36:29","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1133_storage","typeString":"struct Counters.Counter"},"typeName":{"id":3976,"nodeType":"UserDefinedTypeName","pathNode":{"id":3975,"name":"Counters.Counter","nameLocations":["461:8:29","470:7:29"],"nodeType":"IdentifierPath","referencedDeclaration":1133,"src":"461:16:29"},"referencedDeclaration":1133,"src":"461:16:29","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1133_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"private"},{"constant":false,"functionSelector":"672383c4","id":3981,"mutability":"mutable","name":"factories","nameLocation":"609:9:29","nodeType":"VariableDeclaration","scope":4078,"src":"579:39:29","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_SimpleAccountFactory_$4588_$dyn_storage","typeString":"contract SimpleAccountFactory[]"},"typeName":{"baseType":{"id":3979,"nodeType":"UserDefinedTypeName","pathNode":{"id":3978,"name":"SimpleAccountFactory","nameLocations":["579:20:29"],"nodeType":"IdentifierPath","referencedDeclaration":4588,"src":"579:20:29"},"referencedDeclaration":4588,"src":"579:20:29","typeDescriptions":{"typeIdentifier":"t_contract$_SimpleAccountFactory_$4588","typeString":"contract SimpleAccountFactory"}},"id":3980,"nodeType":"ArrayTypeName","src":"579:22:29","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_SimpleAccountFactory_$4588_$dyn_storage_ptr","typeString":"contract SimpleAccountFactory[]"}},"visibility":"public"},{"constant":false,"functionSelector":"efa8d338","id":3985,"mutability":"mutable","name":"factoryMap","nameLocation":"724:10:29","nodeType":"VariableDeclaration","scope":4078,"src":"691:43:29","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":3984,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":3982,"name":"uint","nodeType":"ElementaryTypeName","src":"700:4:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"691:25:29","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":3983,"name":"address","nodeType":"ElementaryTypeName","src":"708:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"public"},{"anonymous":false,"eventSelector":"efa81a4569551eed9daab49e121e3b5f2d9a57e6aba5992fad6daae99b3b36a5","id":3991,"name":"FactoryCreated","nameLocation":"827:14:29","nodeType":"EventDefinition","parameters":{"id":3990,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3987,"indexed":false,"mutability":"mutable","name":"factoryId","nameLocation":"848:9:29","nodeType":"VariableDeclaration","scope":3991,"src":"843:14:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3986,"name":"uint","nodeType":"ElementaryTypeName","src":"843:4:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3989,"indexed":false,"mutability":"mutable","name":"factoryAddress","nameLocation":"867:14:29","nodeType":"VariableDeclaration","scope":3991,"src":"859:22:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3988,"name":"address","nodeType":"ElementaryTypeName","src":"859:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"842:40:29"},"src":"821:62:29"},{"body":{"id":4040,"nodeType":"Block","src":"1001:392:29","statements":[{"assignments":[3996],"declarations":[{"constant":false,"id":3996,"mutability":"mutable","name":"newId","nameLocation":"1016:5:29","nodeType":"VariableDeclaration","scope":4040,"src":"1011:10:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3995,"name":"uint","nodeType":"ElementaryTypeName","src":"1011:4:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4000,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3997,"name":"_factoryIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3977,"src":"1024:11:29","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1133_storage","typeString":"struct Counters.Counter storage ref"}},"id":3998,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1036:7:29","memberName":"current","nodeType":"MemberAccess","referencedDeclaration":1145,"src":"1024:19:29","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Counter_$1133_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$1133_storage_ptr_$","typeString":"function (struct Counters.Counter storage pointer) view returns (uint256)"}},"id":3999,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1024:21:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1011:34:29"},{"assignments":[4003],"declarations":[{"constant":false,"id":4003,"mutability":"mutable","name":"factory","nameLocation":"1115:7:29","nodeType":"VariableDeclaration","scope":4040,"src":"1094:28:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_SimpleAccountFactory_$4588","typeString":"contract SimpleAccountFactory"},"typeName":{"id":4002,"nodeType":"UserDefinedTypeName","pathNode":{"id":4001,"name":"SimpleAccountFactory","nameLocations":["1094:20:29"],"nodeType":"IdentifierPath","referencedDeclaration":4588,"src":"1094:20:29"},"referencedDeclaration":4588,"src":"1094:20:29","typeDescriptions":{"typeIdentifier":"t_contract$_SimpleAccountFactory_$4588","typeString":"contract SimpleAccountFactory"}},"visibility":"internal"}],"id":4011,"initialValue":{"arguments":[{"arguments":[{"id":4008,"name":"ENTRY_POINT_ADDRESS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3974,"src":"1162:19:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4007,"name":"IEntryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3605,"src":"1150:11:29","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IEntryPoint_$3605_$","typeString":"type(contract IEntryPoint)"}},"id":4009,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1150:32:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$3605","typeString":"contract IEntryPoint"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IEntryPoint_$3605","typeString":"contract IEntryPoint"}],"id":4006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"NewExpression","src":"1125:24:29","typeDescriptions":{"typeIdentifier":"t_function_creation_nonpayable$_t_contract$_IEntryPoint_$3605_$returns$_t_contract$_SimpleAccountFactory_$4588_$","typeString":"function (contract IEntryPoint) returns (contract SimpleAccountFactory)"},"typeName":{"id":4005,"nodeType":"UserDefinedTypeName","pathNode":{"id":4004,"name":"SimpleAccountFactory","nameLocations":["1129:20:29"],"nodeType":"IdentifierPath","referencedDeclaration":4588,"src":"1129:20:29"},"referencedDeclaration":4588,"src":"1129:20:29","typeDescriptions":{"typeIdentifier":"t_contract$_SimpleAccountFactory_$4588","typeString":"contract SimpleAccountFactory"}}},"id":4010,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1125:58:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_SimpleAccountFactory_$4588","typeString":"contract SimpleAccountFactory"}},"nodeType":"VariableDeclarationStatement","src":"1094:89:29"},{"expression":{"arguments":[{"id":4015,"name":"factory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4003,"src":"1244:7:29","typeDescriptions":{"typeIdentifier":"t_contract$_SimpleAccountFactory_$4588","typeString":"contract SimpleAccountFactory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SimpleAccountFactory_$4588","typeString":"contract SimpleAccountFactory"}],"expression":{"id":4012,"name":"factories","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3981,"src":"1229:9:29","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_SimpleAccountFactory_$4588_$dyn_storage","typeString":"contract SimpleAccountFactory[] storage ref"}},"id":4014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1239:4:29","memberName":"push","nodeType":"MemberAccess","src":"1229:14:29","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_contract$_SimpleAccountFactory_$4588_$dyn_storage_ptr_$_t_contract$_SimpleAccountFactory_$4588_$returns$__$attached_to$_t_array$_t_contract$_SimpleAccountFactory_$4588_$dyn_storage_ptr_$","typeString":"function (contract SimpleAccountFactory[] storage pointer,contract SimpleAccountFactory)"}},"id":4016,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1229:23:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4017,"nodeType":"ExpressionStatement","src":"1229:23:29"},{"expression":{"id":4025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4018,"name":"factoryMap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3985,"src":"1262:10:29","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":4020,"indexExpression":{"id":4019,"name":"newId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3996,"src":"1273:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1262:17:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4023,"name":"factory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4003,"src":"1290:7:29","typeDescriptions":{"typeIdentifier":"t_contract$_SimpleAccountFactory_$4588","typeString":"contract SimpleAccountFactory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SimpleAccountFactory_$4588","typeString":"contract SimpleAccountFactory"}],"id":4022,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1282:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4021,"name":"address","nodeType":"ElementaryTypeName","src":"1282:7:29","typeDescriptions":{}}},"id":4024,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1282:16:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1262:36:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4026,"nodeType":"ExpressionStatement","src":"1262:36:29"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4027,"name":"_factoryIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3977,"src":"1308:11:29","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1133_storage","typeString":"struct Counters.Counter storage ref"}},"id":4029,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1320:9:29","memberName":"increment","nodeType":"MemberAccess","referencedDeclaration":1159,"src":"1308:21:29","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Counter_$1133_storage_ptr_$returns$__$attached_to$_t_struct$_Counter_$1133_storage_ptr_$","typeString":"function (struct Counters.Counter storage pointer)"}},"id":4030,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1308:23:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4031,"nodeType":"ExpressionStatement","src":"1308:23:29"},{"eventCall":{"arguments":[{"id":4033,"name":"newId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3996,"src":"1362:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":4036,"name":"factory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4003,"src":"1377:7:29","typeDescriptions":{"typeIdentifier":"t_contract$_SimpleAccountFactory_$4588","typeString":"contract SimpleAccountFactory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SimpleAccountFactory_$4588","typeString":"contract SimpleAccountFactory"}],"id":4035,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1369:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4034,"name":"address","nodeType":"ElementaryTypeName","src":"1369:7:29","typeDescriptions":{}}},"id":4037,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1369:16:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":4032,"name":"FactoryCreated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3991,"src":"1347:14:29","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$","typeString":"function (uint256,address)"}},"id":4038,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1347:39:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4039,"nodeType":"EmitStatement","src":"1342:44:29"}]},"documentation":{"id":3992,"nodeType":"StructuredDocumentation","src":"889:74:29","text":" Factoryコントラクトを生成するための関数"},"functionSelector":"9ab4a98c","id":4041,"implemented":true,"kind":"function","modifiers":[],"name":"createFactory","nameLocation":"977:13:29","nodeType":"FunctionDefinition","parameters":{"id":3993,"nodeType":"ParameterList","parameters":[],"src":"991:2:29"},"returnParameters":{"id":3994,"nodeType":"ParameterList","parameters":[],"src":"1001:0:29"},"scope":4078,"src":"968:425:29","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":4051,"nodeType":"Block","src":"1583:50:29","statements":[{"expression":{"id":4049,"name":"factories","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3981,"src":"1617:9:29","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_SimpleAccountFactory_$4588_$dyn_storage","typeString":"contract SimpleAccountFactory[] storage ref"}},"functionReturnParameters":4048,"id":4050,"nodeType":"Return","src":"1610:16:29"}]},"documentation":{"id":4042,"nodeType":"StructuredDocumentation","src":"1399:98:29","text":" 生成したFactoryコントラクトの情報を取得するコントラクト"},"functionSelector":"7e6cbb6a","id":4052,"implemented":true,"kind":"function","modifiers":[],"name":"getFactories","nameLocation":"1511:12:29","nodeType":"FunctionDefinition","parameters":{"id":4043,"nodeType":"ParameterList","parameters":[],"src":"1523:2:29"},"returnParameters":{"id":4048,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4047,"mutability":"mutable","name":"coll","nameLocation":"1577:4:29","nodeType":"VariableDeclaration","scope":4052,"src":"1547:34:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_SimpleAccountFactory_$4588_$dyn_memory_ptr","typeString":"contract SimpleAccountFactory[]"},"typeName":{"baseType":{"id":4045,"nodeType":"UserDefinedTypeName","pathNode":{"id":4044,"name":"SimpleAccountFactory","nameLocations":["1547:20:29"],"nodeType":"IdentifierPath","referencedDeclaration":4588,"src":"1547:20:29"},"referencedDeclaration":4588,"src":"1547:20:29","typeDescriptions":{"typeIdentifier":"t_contract$_SimpleAccountFactory_$4588","typeString":"contract SimpleAccountFactory"}},"id":4046,"nodeType":"ArrayTypeName","src":"1547:22:29","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_SimpleAccountFactory_$4588_$dyn_storage_ptr","typeString":"contract SimpleAccountFactory[]"}},"visibility":"internal"}],"src":"1546:36:29"},"scope":4078,"src":"1502:131:29","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":4076,"nodeType":"Block","src":"1904:182:29","statements":[{"assignments":[4062],"declarations":[{"constant":false,"id":4062,"mutability":"mutable","name":"factory","nameLocation":"1935:7:29","nodeType":"VariableDeclaration","scope":4076,"src":"1914:28:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_SimpleAccountFactory_$4588","typeString":"contract SimpleAccountFactory"},"typeName":{"id":4061,"nodeType":"UserDefinedTypeName","pathNode":{"id":4060,"name":"SimpleAccountFactory","nameLocations":["1914:20:29"],"nodeType":"IdentifierPath","referencedDeclaration":4588,"src":"1914:20:29"},"referencedDeclaration":4588,"src":"1914:20:29","typeDescriptions":{"typeIdentifier":"t_contract$_SimpleAccountFactory_$4588","typeString":"contract SimpleAccountFactory"}},"visibility":"internal"}],"id":4066,"initialValue":{"arguments":[{"id":4064,"name":"factoryAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4055,"src":"1966:14:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4063,"name":"SimpleAccountFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4588,"src":"1945:20:29","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SimpleAccountFactory_$4588_$","typeString":"type(contract SimpleAccountFactory)"}},"id":4065,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1945:36:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_SimpleAccountFactory_$4588","typeString":"contract SimpleAccountFactory"}},"nodeType":"VariableDeclarationStatement","src":"1914:67:29"},{"expression":{"arguments":[{"id":4073,"name":"unstakeDelaySec","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4057,"src":"2063:15:29","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"}],"expression":{"id":4067,"name":"factory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4062,"src":"2028:7:29","typeDescriptions":{"typeIdentifier":"t_contract$_SimpleAccountFactory_$4588","typeString":"contract SimpleAccountFactory"}},"id":4069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2036:8:29","memberName":"addStake","nodeType":"MemberAccess","referencedDeclaration":4587,"src":"2028:16:29","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_uint32_$returns$__$","typeString":"function (uint32) payable external"}},"id":4072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"expression":{"id":4070,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2052:3:29","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2056:5:29","memberName":"value","nodeType":"MemberAccess","src":"2052:9:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2028:34:29","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_uint32_$returns$__$value","typeString":"function (uint32) payable external"}},"id":4074,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2028:51:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4075,"nodeType":"ExpressionStatement","src":"2028:51:29"}]},"documentation":{"id":4053,"nodeType":"StructuredDocumentation","src":"1639:179:29","text":" addStakeを実行するためのメソッド\n @param factoryAddress factoryコントラクトのアドレス\n @param unstakeDelaySec unstakeDelaySec"},"functionSelector":"45171159","id":4077,"implemented":true,"kind":"function","modifiers":[],"name":"addStake","nameLocation":"1832:8:29","nodeType":"FunctionDefinition","parameters":{"id":4058,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4055,"mutability":"mutable","name":"factoryAddress","nameLocation":"1849:14:29","nodeType":"VariableDeclaration","scope":4077,"src":"1841:22:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4054,"name":"address","nodeType":"ElementaryTypeName","src":"1841:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4057,"mutability":"mutable","name":"unstakeDelaySec","nameLocation":"1872:15:29","nodeType":"VariableDeclaration","scope":4077,"src":"1865:22:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":4056,"name":"uint32","nodeType":"ElementaryTypeName","src":"1865:6:29","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"1840:48:29"},"returnParameters":{"id":4059,"nodeType":"ParameterList","parameters":[],"src":"1904:0:29"},"scope":4078,"src":"1823:263:29","stateMutability":"payable","virtual":false,"visibility":"public"}],"scope":4079,"src":"236:1852:29","usedErrors":[]}],"src":"32:2056:29"},"id":29},"contracts/samples/SimpleAccount.sol":{"ast":{"absolutePath":"contracts/samples/SimpleAccount.sol","exportedSymbols":{"Address":[1127],"BaseAccount":[3112],"ECDSA":[1987],"ERC1967Upgrade":[371],"IAccount":[3367],"IAggregator":[3401],"IBeacon":[433],"IERC1155Receiver":[759],"IERC165":[1999],"IERC1822Proxiable":[30],"IERC1967":[20],"IERC721Receiver":[777],"IERC777Recipient":[797],"IEntryPoint":[3605],"INonceManager":[3624],"IStakeManager":[3764],"Initializable":[602],"Math":[2865],"SignedMath":[2970],"SimpleAccount":[4402],"StorageSlot":[1392],"Strings":[1621],"TokenCallbackHandler":[4712],"UUPSUpgradeable":[718],"UserOperation":[3791],"UserOperationLib":[3961],"ValidationData":[3121],"_intersectTimeRange":[3265],"_packValidationData":[3302,3340],"_parseValidationData":[3180],"calldataKeccak":[3350]},"id":4403,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4080,"literals":["solidity","^","0.8",".18"],"nodeType":"PragmaDirective","src":"32:24:30"},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","file":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","id":4081,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4403,"sourceUnit":1988,"src":"180:62:30","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/proxy/utils/Initializable.sol","file":"@openzeppelin/contracts/proxy/utils/Initializable.sol","id":4082,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4403,"sourceUnit":603,"src":"243:63:30","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/proxy/utils/UUPSUpgradeable.sol","file":"@openzeppelin/contracts/proxy/utils/UUPSUpgradeable.sol","id":4083,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4403,"sourceUnit":719,"src":"307:65:30","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/core/BaseAccount.sol","file":"../core/BaseAccount.sol","id":4084,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4403,"sourceUnit":3113,"src":"374:33:30","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/samples/callback/TokenCallbackHandler.sol","file":"./callback/TokenCallbackHandler.sol","id":4085,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4403,"sourceUnit":4713,"src":"408:45:30","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":4087,"name":"BaseAccount","nameLocations":["659:11:30"],"nodeType":"IdentifierPath","referencedDeclaration":3112,"src":"659:11:30"},"id":4088,"nodeType":"InheritanceSpecifier","src":"659:11:30"},{"baseName":{"id":4089,"name":"TokenCallbackHandler","nameLocations":["672:20:30"],"nodeType":"IdentifierPath","referencedDeclaration":4712,"src":"672:20:30"},"id":4090,"nodeType":"InheritanceSpecifier","src":"672:20:30"},{"baseName":{"id":4091,"name":"UUPSUpgradeable","nameLocations":["694:15:30"],"nodeType":"IdentifierPath","referencedDeclaration":718,"src":"694:15:30"},"id":4092,"nodeType":"InheritanceSpecifier","src":"694:15:30"},{"baseName":{"id":4093,"name":"Initializable","nameLocations":["711:13:30"],"nodeType":"IdentifierPath","referencedDeclaration":602,"src":"711:13:30"},"id":4094,"nodeType":"InheritanceSpecifier","src":"711:13:30"}],"canonicalName":"SimpleAccount","contractDependencies":[],"contractKind":"contract","documentation":{"id":4086,"nodeType":"StructuredDocumentation","src":"455:177:30","text":" minimal account.\n  this is sample minimal account.\n  has execute, eth handling methods\n  has a single signer that can send requests through the entryPoint."},"fullyImplemented":true,"id":4402,"linearizedBaseContracts":[4402,602,718,371,20,30,4712,759,1999,777,797,3112,3367],"name":"SimpleAccount","nameLocation":"642:13:30","nodeType":"ContractDefinition","nodes":[{"global":false,"id":4097,"libraryName":{"id":4095,"name":"ECDSA","nameLocations":["737:5:30"],"nodeType":"IdentifierPath","referencedDeclaration":1987,"src":"737:5:30"},"nodeType":"UsingForDirective","src":"731:24:30","typeName":{"id":4096,"name":"bytes32","nodeType":"ElementaryTypeName","src":"747:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"constant":false,"functionSelector":"8da5cb5b","id":4099,"mutability":"mutable","name":"owner","nameLocation":"776:5:30","nodeType":"VariableDeclaration","scope":4402,"src":"761:20:30","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4098,"name":"address","nodeType":"ElementaryTypeName","src":"761:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"id":4102,"mutability":"immutable","name":"_entryPoint","nameLocation":"818:11:30","nodeType":"VariableDeclaration","scope":4402,"src":"788:41:30","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$3605","typeString":"contract IEntryPoint"},"typeName":{"id":4101,"nodeType":"UserDefinedTypeName","pathNode":{"id":4100,"name":"IEntryPoint","nameLocations":["788:11:30"],"nodeType":"IdentifierPath","referencedDeclaration":3605,"src":"788:11:30"},"referencedDeclaration":3605,"src":"788:11:30","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$3605","typeString":"contract IEntryPoint"}},"visibility":"private"},{"anonymous":false,"eventSelector":"47e55c76e7a6f1fd8996a1da8008c1ea29699cca35e7bcd057f2dec313b6e5de","id":4109,"name":"SimpleAccountInitialized","nameLocation":"842:24:30","nodeType":"EventDefinition","parameters":{"id":4108,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4105,"indexed":true,"mutability":"mutable","name":"entryPoint","nameLocation":"887:10:30","nodeType":"VariableDeclaration","scope":4109,"src":"867:30:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$3605","typeString":"contract IEntryPoint"},"typeName":{"id":4104,"nodeType":"UserDefinedTypeName","pathNode":{"id":4103,"name":"IEntryPoint","nameLocations":["867:11:30"],"nodeType":"IdentifierPath","referencedDeclaration":3605,"src":"867:11:30"},"referencedDeclaration":3605,"src":"867:11:30","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$3605","typeString":"contract IEntryPoint"}},"visibility":"internal"},{"constant":false,"id":4107,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"915:5:30","nodeType":"VariableDeclaration","scope":4109,"src":"899:21:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4106,"name":"address","nodeType":"ElementaryTypeName","src":"899:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"866:55:30"},"src":"836:86:30"},{"body":{"id":4115,"nodeType":"Block","src":"949:40:30","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":4111,"name":"_onlyOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4165,"src":"959:10:30","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":4112,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"959:12:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4113,"nodeType":"ExpressionStatement","src":"959:12:30"},{"id":4114,"nodeType":"PlaceholderStatement","src":"981:1:30"}]},"id":4116,"name":"onlyOwner","nameLocation":"937:9:30","nodeType":"ModifierDefinition","parameters":{"id":4110,"nodeType":"ParameterList","parameters":[],"src":"946:2:30"},"src":"928:61:30","virtual":false,"visibility":"internal"},{"baseFunctions":[3009],"body":{"id":4126,"nodeType":"Block","src":"1100:35:30","statements":[{"expression":{"id":4124,"name":"_entryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4102,"src":"1117:11:30","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$3605","typeString":"contract IEntryPoint"}},"functionReturnParameters":4123,"id":4125,"nodeType":"Return","src":"1110:18:30"}]},"documentation":{"id":4117,"nodeType":"StructuredDocumentation","src":"995:27:30","text":"@inheritdoc BaseAccount"},"functionSelector":"b0d691fe","id":4127,"implemented":true,"kind":"function","modifiers":[],"name":"entryPoint","nameLocation":"1036:10:30","nodeType":"FunctionDefinition","overrides":{"id":4119,"nodeType":"OverrideSpecifier","overrides":[],"src":"1069:8:30"},"parameters":{"id":4118,"nodeType":"ParameterList","parameters":[],"src":"1046:2:30"},"returnParameters":{"id":4123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4122,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4127,"src":"1087:11:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$3605","typeString":"contract IEntryPoint"},"typeName":{"id":4121,"nodeType":"UserDefinedTypeName","pathNode":{"id":4120,"name":"IEntryPoint","nameLocations":["1087:11:30"],"nodeType":"IdentifierPath","referencedDeclaration":3605,"src":"1087:11:30"},"referencedDeclaration":3605,"src":"1087:11:30","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$3605","typeString":"contract IEntryPoint"}},"visibility":"internal"}],"src":"1086:13:30"},"scope":4402,"src":"1027:108:30","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":4130,"nodeType":"Block","src":"1218:2:30","statements":[]},"id":4131,"implemented":true,"kind":"receive","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":4128,"nodeType":"ParameterList","parameters":[],"src":"1198:2:30"},"returnParameters":{"id":4129,"nodeType":"ParameterList","parameters":[],"src":"1218:0:30"},"scope":4402,"src":"1191:29:30","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":4144,"nodeType":"Block","src":"1264:75:30","statements":[{"expression":{"id":4139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4137,"name":"_entryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4102,"src":"1274:11:30","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$3605","typeString":"contract IEntryPoint"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4138,"name":"anEntryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4134,"src":"1288:12:30","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$3605","typeString":"contract IEntryPoint"}},"src":"1274:26:30","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$3605","typeString":"contract IEntryPoint"}},"id":4140,"nodeType":"ExpressionStatement","src":"1274:26:30"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":4141,"name":"_disableInitializers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":583,"src":"1310:20:30","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":4142,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1310:22:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4143,"nodeType":"ExpressionStatement","src":"1310:22:30"}]},"id":4145,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":4135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4134,"mutability":"mutable","name":"anEntryPoint","nameLocation":"1250:12:30","nodeType":"VariableDeclaration","scope":4145,"src":"1238:24:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$3605","typeString":"contract IEntryPoint"},"typeName":{"id":4133,"nodeType":"UserDefinedTypeName","pathNode":{"id":4132,"name":"IEntryPoint","nameLocations":["1238:11:30"],"nodeType":"IdentifierPath","referencedDeclaration":3605,"src":"1238:11:30"},"referencedDeclaration":3605,"src":"1238:11:30","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$3605","typeString":"contract IEntryPoint"}},"visibility":"internal"}],"src":"1237:26:30"},"returnParameters":{"id":4136,"nodeType":"ParameterList","parameters":[],"src":"1264:0:30"},"scope":4402,"src":"1226:113:30","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":4164,"nodeType":"Block","src":"1381:197:30","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4149,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1506:3:30","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1510:6:30","memberName":"sender","nodeType":"MemberAccess","src":"1506:10:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4151,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4099,"src":"1520:5:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1506:19:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4153,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1529:3:30","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1533:6:30","memberName":"sender","nodeType":"MemberAccess","src":"1529:10:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":4157,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1551:4:30","typeDescriptions":{"typeIdentifier":"t_contract$_SimpleAccount_$4402","typeString":"contract SimpleAccount"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SimpleAccount_$4402","typeString":"contract SimpleAccount"}],"id":4156,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1543:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4155,"name":"address","nodeType":"ElementaryTypeName","src":"1543:7:30","typeDescriptions":{}}},"id":4158,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1543:13:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1529:27:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1506:50:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"6f6e6c79206f776e6572","id":4161,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1558:12:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_ae2932905fc5bb055d2e7b29311075afd0dbf688106cf649cb515d342f4c7367","typeString":"literal_string \"only owner\""},"value":"only owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ae2932905fc5bb055d2e7b29311075afd0dbf688106cf649cb515d342f4c7367","typeString":"literal_string \"only owner\""}],"id":4148,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1498:7:30","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4162,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1498:73:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4163,"nodeType":"ExpressionStatement","src":"1498:73:30"}]},"id":4165,"implemented":true,"kind":"function","modifiers":[],"name":"_onlyOwner","nameLocation":"1354:10:30","nodeType":"FunctionDefinition","parameters":{"id":4146,"nodeType":"ParameterList","parameters":[],"src":"1364:2:30"},"returnParameters":{"id":4147,"nodeType":"ParameterList","parameters":[],"src":"1381:0:30"},"scope":4402,"src":"1345:233:30","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4184,"nodeType":"Block","src":"1752:82:30","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":4175,"name":"_requireFromEntryPointOrOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4280,"src":"1762:29:30","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":4176,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1762:31:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4177,"nodeType":"ExpressionStatement","src":"1762:31:30"},{"expression":{"arguments":[{"id":4179,"name":"dest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4168,"src":"1809:4:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4180,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4170,"src":"1815:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4181,"name":"func","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4172,"src":"1822:4:30","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":4178,"name":"_call","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4337,"src":"1803:5:30","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,bytes memory)"}},"id":4182,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1803:24:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4183,"nodeType":"ExpressionStatement","src":"1803:24:30"}]},"documentation":{"id":4166,"nodeType":"StructuredDocumentation","src":"1584:87:30","text":" execute a transaction (called directly from owner, or by entryPoint)"},"functionSelector":"b61d27f6","id":4185,"implemented":true,"kind":"function","modifiers":[],"name":"execute","nameLocation":"1685:7:30","nodeType":"FunctionDefinition","parameters":{"id":4173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4168,"mutability":"mutable","name":"dest","nameLocation":"1701:4:30","nodeType":"VariableDeclaration","scope":4185,"src":"1693:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4167,"name":"address","nodeType":"ElementaryTypeName","src":"1693:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4170,"mutability":"mutable","name":"value","nameLocation":"1715:5:30","nodeType":"VariableDeclaration","scope":4185,"src":"1707:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4169,"name":"uint256","nodeType":"ElementaryTypeName","src":"1707:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4172,"mutability":"mutable","name":"func","nameLocation":"1737:4:30","nodeType":"VariableDeclaration","scope":4185,"src":"1722:19:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":4171,"name":"bytes","nodeType":"ElementaryTypeName","src":"1722:5:30","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1692:50:30"},"returnParameters":{"id":4174,"nodeType":"ParameterList","parameters":[],"src":"1752:0:30"},"scope":4402,"src":"1676:158:30","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4230,"nodeType":"Block","src":"1977:218:30","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":4195,"name":"_requireFromEntryPointOrOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4280,"src":"1987:29:30","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":4196,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1987:31:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4197,"nodeType":"ExpressionStatement","src":"1987:31:30"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4199,"name":"dest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4189,"src":"2036:4:30","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":4200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2041:6:30","memberName":"length","nodeType":"MemberAccess","src":"2036:11:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4201,"name":"func","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4192,"src":"2051:4:30","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes calldata[] calldata"}},"id":4202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2056:6:30","memberName":"length","nodeType":"MemberAccess","src":"2051:11:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2036:26:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"77726f6e67206172726179206c656e67746873","id":4204,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2064:21:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_046f63b53432b31c38dcec6b5f05e3d65602d684f9163a89310aaaf94e08558e","typeString":"literal_string \"wrong array lengths\""},"value":"wrong array lengths"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_046f63b53432b31c38dcec6b5f05e3d65602d684f9163a89310aaaf94e08558e","typeString":"literal_string \"wrong array lengths\""}],"id":4198,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2028:7:30","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4205,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2028:58:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4206,"nodeType":"ExpressionStatement","src":"2028:58:30"},{"body":{"id":4228,"nodeType":"Block","src":"2138:51:30","statements":[{"expression":{"arguments":[{"baseExpression":{"id":4219,"name":"dest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4189,"src":"2158:4:30","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":4221,"indexExpression":{"id":4220,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4208,"src":"2163:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2158:7:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":4222,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2167:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"baseExpression":{"id":4223,"name":"func","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4192,"src":"2170:4:30","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes calldata[] calldata"}},"id":4225,"indexExpression":{"id":4224,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4208,"src":"2175:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2170:7:30","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":4218,"name":"_call","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4337,"src":"2152:5:30","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,bytes memory)"}},"id":4226,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2152:26:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4227,"nodeType":"ExpressionStatement","src":"2152:26:30"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4211,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4208,"src":"2116:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4212,"name":"dest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4189,"src":"2120:4:30","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":4213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2125:6:30","memberName":"length","nodeType":"MemberAccess","src":"2120:11:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2116:15:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4229,"initializationExpression":{"assignments":[4208],"declarations":[{"constant":false,"id":4208,"mutability":"mutable","name":"i","nameLocation":"2109:1:30","nodeType":"VariableDeclaration","scope":4229,"src":"2101:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4207,"name":"uint256","nodeType":"ElementaryTypeName","src":"2101:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4210,"initialValue":{"hexValue":"30","id":4209,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2113:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2101:13:30"},"loopExpression":{"expression":{"id":4216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2133:3:30","subExpression":{"id":4215,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4208,"src":"2133:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4217,"nodeType":"ExpressionStatement","src":"2133:3:30"},"nodeType":"ForStatement","src":"2096:93:30"}]},"documentation":{"id":4186,"nodeType":"StructuredDocumentation","src":"1840:53:30","text":" execute a sequence of transactions"},"functionSelector":"18dfb3c7","id":4231,"implemented":true,"kind":"function","modifiers":[],"name":"executeBatch","nameLocation":"1907:12:30","nodeType":"FunctionDefinition","parameters":{"id":4193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4189,"mutability":"mutable","name":"dest","nameLocation":"1939:4:30","nodeType":"VariableDeclaration","scope":4231,"src":"1920:23:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4187,"name":"address","nodeType":"ElementaryTypeName","src":"1920:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4188,"nodeType":"ArrayTypeName","src":"1920:9:30","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":4192,"mutability":"mutable","name":"func","nameLocation":"1962:4:30","nodeType":"VariableDeclaration","scope":4231,"src":"1945:21:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":4190,"name":"bytes","nodeType":"ElementaryTypeName","src":"1945:5:30","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":4191,"nodeType":"ArrayTypeName","src":"1945:7:30","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"1919:48:30"},"returnParameters":{"id":4194,"nodeType":"ParameterList","parameters":[],"src":"1977:0:30"},"scope":4402,"src":"1898:297:30","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4243,"nodeType":"Block","src":"2543:37:30","statements":[{"expression":{"arguments":[{"id":4240,"name":"anOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4234,"src":"2565:7:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4239,"name":"_initialize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4259,"src":"2553:11:30","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":4241,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2553:20:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4242,"nodeType":"ExpressionStatement","src":"2553:20:30"}]},"documentation":{"id":4232,"nodeType":"StructuredDocumentation","src":"2201:273:30","text":" @dev The _entryPoint member is immutable, to reduce gas consumption.  To upgrade EntryPoint,\n a new implementation of SimpleAccount must be deployed with the new EntryPoint address, then upgrading\n the implementation by calling `upgradeTo()`"},"functionSelector":"c4d66de8","id":4244,"implemented":true,"kind":"function","modifiers":[{"id":4237,"kind":"modifierInvocation","modifierName":{"id":4236,"name":"initializer","nameLocations":["2531:11:30"],"nodeType":"IdentifierPath","referencedDeclaration":504,"src":"2531:11:30"},"nodeType":"ModifierInvocation","src":"2531:11:30"}],"name":"initialize","nameLocation":"2488:10:30","nodeType":"FunctionDefinition","parameters":{"id":4235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4234,"mutability":"mutable","name":"anOwner","nameLocation":"2507:7:30","nodeType":"VariableDeclaration","scope":4244,"src":"2499:15:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4233,"name":"address","nodeType":"ElementaryTypeName","src":"2499:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2498:17:30"},"returnParameters":{"id":4238,"nodeType":"ParameterList","parameters":[],"src":"2543:0:30"},"scope":4402,"src":"2479:101:30","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":4258,"nodeType":"Block","src":"2641:91:30","statements":[{"expression":{"id":4251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4249,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4099,"src":"2651:5:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4250,"name":"anOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4246,"src":"2659:7:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2651:15:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4252,"nodeType":"ExpressionStatement","src":"2651:15:30"},{"eventCall":{"arguments":[{"id":4254,"name":"_entryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4102,"src":"2706:11:30","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$3605","typeString":"contract IEntryPoint"}},{"id":4255,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4099,"src":"2719:5:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IEntryPoint_$3605","typeString":"contract IEntryPoint"},{"typeIdentifier":"t_address","typeString":"address"}],"id":4253,"name":"SimpleAccountInitialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4109,"src":"2681:24:30","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_contract$_IEntryPoint_$3605_$_t_address_$returns$__$","typeString":"function (contract IEntryPoint,address)"}},"id":4256,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2681:44:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4257,"nodeType":"EmitStatement","src":"2676:49:30"}]},"id":4259,"implemented":true,"kind":"function","modifiers":[],"name":"_initialize","nameLocation":"2595:11:30","nodeType":"FunctionDefinition","parameters":{"id":4247,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4246,"mutability":"mutable","name":"anOwner","nameLocation":"2615:7:30","nodeType":"VariableDeclaration","scope":4259,"src":"2607:15:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4245,"name":"address","nodeType":"ElementaryTypeName","src":"2607:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2606:17:30"},"returnParameters":{"id":4248,"nodeType":"ParameterList","parameters":[],"src":"2641:0:30"},"scope":4402,"src":"2586:146:30","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":4279,"nodeType":"Block","src":"2859:120:30","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4263,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2877:3:30","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2881:6:30","memberName":"sender","nodeType":"MemberAccess","src":"2877:10:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":4267,"name":"entryPoint","nodeType":"Identifier","overloadedDeclarations":[4127],"referencedDeclaration":4127,"src":"2899:10:30","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_contract$_IEntryPoint_$3605_$","typeString":"function () view returns (contract IEntryPoint)"}},"id":4268,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2899:12:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$3605","typeString":"contract IEntryPoint"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IEntryPoint_$3605","typeString":"contract IEntryPoint"}],"id":4266,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2891:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4265,"name":"address","nodeType":"ElementaryTypeName","src":"2891:7:30","typeDescriptions":{}}},"id":4269,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2891:21:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2877:35:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4271,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2916:3:30","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2920:6:30","memberName":"sender","nodeType":"MemberAccess","src":"2916:10:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4273,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4099,"src":"2930:5:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2916:19:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2877:58:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"6163636f756e743a206e6f74204f776e6572206f7220456e747279506f696e74","id":4276,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2937:34:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_26bf1d2fa883929ce8db7f4593c3a7f27ec5e761d3beb6ef3a9db5c68fe51d21","typeString":"literal_string \"account: not Owner or EntryPoint\""},"value":"account: not Owner or EntryPoint"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_26bf1d2fa883929ce8db7f4593c3a7f27ec5e761d3beb6ef3a9db5c68fe51d21","typeString":"literal_string \"account: not Owner or EntryPoint\""}],"id":4262,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2869:7:30","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4277,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2869:103:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4278,"nodeType":"ExpressionStatement","src":"2869:103:30"}]},"id":4280,"implemented":true,"kind":"function","modifiers":[],"name":"_requireFromEntryPointOrOwner","nameLocation":"2813:29:30","nodeType":"FunctionDefinition","parameters":{"id":4260,"nodeType":"ParameterList","parameters":[],"src":"2842:2:30"},"returnParameters":{"id":4261,"nodeType":"ParameterList","parameters":[],"src":"2859:0:30"},"scope":4402,"src":"2804:175:30","stateMutability":"view","virtual":false,"visibility":"internal"},{"baseFunctions":[3071],"body":{"id":4310,"nodeType":"Block","src":"3176:199:30","statements":[{"assignments":[4293],"declarations":[{"constant":false,"id":4293,"mutability":"mutable","name":"hash","nameLocation":"3194:4:30","nodeType":"VariableDeclaration","scope":4310,"src":"3186:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4292,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3186:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4297,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4294,"name":"userOpHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4286,"src":"3201:10:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3212:22:30","memberName":"toEthSignedMessageHash","nodeType":"MemberAccess","referencedDeclaration":1932,"src":"3201:33:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (bytes32)"}},"id":4296,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3201:35:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"3186:50:30"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4298,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4099,"src":"3269:5:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"expression":{"id":4301,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4284,"src":"3291:6:30","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3791_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":4302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3298:9:30","memberName":"signature","nodeType":"MemberAccess","referencedDeclaration":3790,"src":"3291:16:30","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"id":4299,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4293,"src":"3278:4:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3283:7:30","memberName":"recover","nodeType":"MemberAccess","referencedDeclaration":1748,"src":"3278:12:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$attached_to$_t_bytes32_$","typeString":"function (bytes32,bytes memory) pure returns (address)"}},"id":4303,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3278:30:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3269:39:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4307,"nodeType":"IfStatement","src":"3265:85:30","trueBody":{"expression":{"id":4305,"name":"SIG_VALIDATION_FAILED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2985,"src":"3329:21:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4291,"id":4306,"nodeType":"Return","src":"3322:28:30"}},{"expression":{"hexValue":"30","id":4308,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3367:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":4291,"id":4309,"nodeType":"Return","src":"3360:8:30"}]},"documentation":{"id":4281,"nodeType":"StructuredDocumentation","src":"2985:44:30","text":"implement template method of BaseAccount"},"id":4311,"implemented":true,"kind":"function","modifiers":[],"name":"_validateSignature","nameLocation":"3043:18:30","nodeType":"FunctionDefinition","overrides":{"id":4288,"nodeType":"OverrideSpecifier","overrides":[],"src":"3126:8:30"},"parameters":{"id":4287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4284,"mutability":"mutable","name":"userOp","nameLocation":"3085:6:30","nodeType":"VariableDeclaration","scope":4311,"src":"3062:29:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3791_calldata_ptr","typeString":"struct UserOperation"},"typeName":{"id":4283,"nodeType":"UserDefinedTypeName","pathNode":{"id":4282,"name":"UserOperation","nameLocations":["3062:13:30"],"nodeType":"IdentifierPath","referencedDeclaration":3791,"src":"3062:13:30"},"referencedDeclaration":3791,"src":"3062:13:30","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3791_storage_ptr","typeString":"struct UserOperation"}},"visibility":"internal"},{"constant":false,"id":4286,"mutability":"mutable","name":"userOpHash","nameLocation":"3101:10:30","nodeType":"VariableDeclaration","scope":4311,"src":"3093:18:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4285,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3093:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3061:51:30"},"returnParameters":{"id":4291,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4290,"mutability":"mutable","name":"validationData","nameLocation":"3160:14:30","nodeType":"VariableDeclaration","scope":4311,"src":"3152:22:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4289,"name":"uint256","nodeType":"ElementaryTypeName","src":"3152:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3151:24:30"},"scope":4402,"src":"3034:341:30","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":4336,"nodeType":"Block","src":"3455:213:30","statements":[{"assignments":[4321,4323],"declarations":[{"constant":false,"id":4321,"mutability":"mutable","name":"success","nameLocation":"3471:7:30","nodeType":"VariableDeclaration","scope":4336,"src":"3466:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4320,"name":"bool","nodeType":"ElementaryTypeName","src":"3466:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4323,"mutability":"mutable","name":"result","nameLocation":"3493:6:30","nodeType":"VariableDeclaration","scope":4336,"src":"3480:19:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4322,"name":"bytes","nodeType":"ElementaryTypeName","src":"3480:5:30","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4330,"initialValue":{"arguments":[{"id":4328,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4317,"src":"3530:4:30","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4324,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4313,"src":"3503:6:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3510:4:30","memberName":"call","nodeType":"MemberAccess","src":"3503:11:30","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":4327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":4326,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4315,"src":"3523:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"3503:26:30","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":4329,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3503:32:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"3465:70:30"},{"condition":{"id":4332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3549:8:30","subExpression":{"id":4331,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4321,"src":"3550:7:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4335,"nodeType":"IfStatement","src":"3545:117:30","trueBody":{"id":4334,"nodeType":"Block","src":"3559:103:30","statements":[{"AST":{"nodeType":"YulBlock","src":"3582:70:30","statements":[{"expression":{"arguments":[{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"3611:6:30"},{"kind":"number","nodeType":"YulLiteral","src":"3619:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3607:3:30"},"nodeType":"YulFunctionCall","src":"3607:15:30"},{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"3630:6:30"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3624:5:30"},"nodeType":"YulFunctionCall","src":"3624:13:30"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3600:6:30"},"nodeType":"YulFunctionCall","src":"3600:38:30"},"nodeType":"YulExpressionStatement","src":"3600:38:30"}]},"evmVersion":"paris","externalReferences":[{"declaration":4323,"isOffset":false,"isSlot":false,"src":"3611:6:30","valueSize":1},{"declaration":4323,"isOffset":false,"isSlot":false,"src":"3630:6:30","valueSize":1}],"id":4333,"nodeType":"InlineAssembly","src":"3573:79:30"}]}}]},"id":4337,"implemented":true,"kind":"function","modifiers":[],"name":"_call","nameLocation":"3390:5:30","nodeType":"FunctionDefinition","parameters":{"id":4318,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4313,"mutability":"mutable","name":"target","nameLocation":"3404:6:30","nodeType":"VariableDeclaration","scope":4337,"src":"3396:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4312,"name":"address","nodeType":"ElementaryTypeName","src":"3396:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4315,"mutability":"mutable","name":"value","nameLocation":"3420:5:30","nodeType":"VariableDeclaration","scope":4337,"src":"3412:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4314,"name":"uint256","nodeType":"ElementaryTypeName","src":"3412:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4317,"mutability":"mutable","name":"data","nameLocation":"3440:4:30","nodeType":"VariableDeclaration","scope":4337,"src":"3427:17:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4316,"name":"bytes","nodeType":"ElementaryTypeName","src":"3427:5:30","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3395:50:30"},"returnParameters":{"id":4319,"nodeType":"ParameterList","parameters":[],"src":"3455:0:30"},"scope":4402,"src":"3381:287:30","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4352,"nodeType":"Block","src":"3797:61:30","statements":[{"expression":{"arguments":[{"arguments":[{"id":4348,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3845:4:30","typeDescriptions":{"typeIdentifier":"t_contract$_SimpleAccount_$4402","typeString":"contract SimpleAccount"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SimpleAccount_$4402","typeString":"contract SimpleAccount"}],"id":4347,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3837:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4346,"name":"address","nodeType":"ElementaryTypeName","src":"3837:7:30","typeDescriptions":{}}},"id":4349,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3837:13:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":4343,"name":"entryPoint","nodeType":"Identifier","overloadedDeclarations":[4127],"referencedDeclaration":4127,"src":"3814:10:30","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_contract$_IEntryPoint_$3605_$","typeString":"function () view returns (contract IEntryPoint)"}},"id":4344,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3814:12:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$3605","typeString":"contract IEntryPoint"}},"id":4345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3827:9:30","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":3733,"src":"3814:22:30","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":4350,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3814:37:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4342,"id":4351,"nodeType":"Return","src":"3807:44:30"}]},"documentation":{"id":4338,"nodeType":"StructuredDocumentation","src":"3674:66:30","text":" check current account deposit in the entryPoint"},"functionSelector":"c399ec88","id":4353,"implemented":true,"kind":"function","modifiers":[],"name":"getDeposit","nameLocation":"3754:10:30","nodeType":"FunctionDefinition","parameters":{"id":4339,"nodeType":"ParameterList","parameters":[],"src":"3764:2:30"},"returnParameters":{"id":4342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4341,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4353,"src":"3788:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4340,"name":"uint256","nodeType":"ElementaryTypeName","src":"3788:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3787:9:30"},"scope":4402,"src":"3745:113:30","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":4369,"nodeType":"Block","src":"3978:73:30","statements":[{"expression":{"arguments":[{"arguments":[{"id":4365,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4038:4:30","typeDescriptions":{"typeIdentifier":"t_contract$_SimpleAccount_$4402","typeString":"contract SimpleAccount"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SimpleAccount_$4402","typeString":"contract SimpleAccount"}],"id":4364,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4030:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4363,"name":"address","nodeType":"ElementaryTypeName","src":"4030:7:30","typeDescriptions":{}}},"id":4366,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4030:13:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":4357,"name":"entryPoint","nodeType":"Identifier","overloadedDeclarations":[4127],"referencedDeclaration":4127,"src":"3988:10:30","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_contract$_IEntryPoint_$3605_$","typeString":"function () view returns (contract IEntryPoint)"}},"id":4358,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3988:12:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$3605","typeString":"contract IEntryPoint"}},"id":4359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4001:9:30","memberName":"depositTo","nodeType":"MemberAccess","referencedDeclaration":3739,"src":"3988:22:30","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_address_$returns$__$","typeString":"function (address) payable external"}},"id":4362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"expression":{"id":4360,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4019:3:30","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4023:5:30","memberName":"value","nodeType":"MemberAccess","src":"4019:9:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"3988:41:30","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_address_$returns$__$value","typeString":"function (address) payable external"}},"id":4367,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3988:56:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4368,"nodeType":"ExpressionStatement","src":"3988:56:30"}]},"documentation":{"id":4354,"nodeType":"StructuredDocumentation","src":"3864:72:30","text":" deposit more funds for this account in the entryPoint"},"functionSelector":"4a58db19","id":4370,"implemented":true,"kind":"function","modifiers":[],"name":"addDeposit","nameLocation":"3950:10:30","nodeType":"FunctionDefinition","parameters":{"id":4355,"nodeType":"ParameterList","parameters":[],"src":"3960:2:30"},"returnParameters":{"id":4356,"nodeType":"ParameterList","parameters":[],"src":"3978:0:30"},"scope":4402,"src":"3941:110:30","stateMutability":"payable","virtual":false,"visibility":"public"},{"body":{"id":4387,"nodeType":"Block","src":"4296:65:30","statements":[{"expression":{"arguments":[{"id":4383,"name":"withdrawAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4373,"src":"4330:15:30","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":4384,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4375,"src":"4347:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":4380,"name":"entryPoint","nodeType":"Identifier","overloadedDeclarations":[4127],"referencedDeclaration":4127,"src":"4306:10:30","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_contract$_IEntryPoint_$3605_$","typeString":"function () view returns (contract IEntryPoint)"}},"id":4381,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4306:12:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$3605","typeString":"contract IEntryPoint"}},"id":4382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4319:10:30","memberName":"withdrawTo","nodeType":"MemberAccess","referencedDeclaration":3763,"src":"4306:23:30","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_payable_$_t_uint256_$returns$__$","typeString":"function (address payable,uint256) external"}},"id":4385,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4306:48:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4386,"nodeType":"ExpressionStatement","src":"4306:48:30"}]},"documentation":{"id":4371,"nodeType":"StructuredDocumentation","src":"4057:141:30","text":" withdraw value from the account's deposit\n @param withdrawAddress target to send to\n @param amount to withdraw"},"functionSelector":"4d44560d","id":4388,"implemented":true,"kind":"function","modifiers":[{"id":4378,"kind":"modifierInvocation","modifierName":{"id":4377,"name":"onlyOwner","nameLocations":["4286:9:30"],"nodeType":"IdentifierPath","referencedDeclaration":4116,"src":"4286:9:30"},"nodeType":"ModifierInvocation","src":"4286:9:30"}],"name":"withdrawDepositTo","nameLocation":"4212:17:30","nodeType":"FunctionDefinition","parameters":{"id":4376,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4373,"mutability":"mutable","name":"withdrawAddress","nameLocation":"4246:15:30","nodeType":"VariableDeclaration","scope":4388,"src":"4230:31:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":4372,"name":"address","nodeType":"ElementaryTypeName","src":"4230:15:30","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":4375,"mutability":"mutable","name":"amount","nameLocation":"4271:6:30","nodeType":"VariableDeclaration","scope":4388,"src":"4263:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4374,"name":"uint256","nodeType":"ElementaryTypeName","src":"4263:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4229:49:30"},"returnParameters":{"id":4379,"nodeType":"ParameterList","parameters":[],"src":"4296:0:30"},"scope":4402,"src":"4203:158:30","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[717],"body":{"id":4400,"nodeType":"Block","src":"4444:58:30","statements":[{"expression":{"components":[{"id":4394,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4390,"src":"4455:17:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":4395,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4454:19:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4396,"nodeType":"ExpressionStatement","src":"4454:19:30"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":4397,"name":"_onlyOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4165,"src":"4483:10:30","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":4398,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4483:12:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4399,"nodeType":"ExpressionStatement","src":"4483:12:30"}]},"id":4401,"implemented":true,"kind":"function","modifiers":[],"name":"_authorizeUpgrade","nameLocation":"4376:17:30","nodeType":"FunctionDefinition","overrides":{"id":4392,"nodeType":"OverrideSpecifier","overrides":[],"src":"4435:8:30"},"parameters":{"id":4391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4390,"mutability":"mutable","name":"newImplementation","nameLocation":"4402:17:30","nodeType":"VariableDeclaration","scope":4401,"src":"4394:25:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4389,"name":"address","nodeType":"ElementaryTypeName","src":"4394:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4393:27:30"},"returnParameters":{"id":4393,"nodeType":"ParameterList","parameters":[],"src":"4444:0:30"},"scope":4402,"src":"4367:135:30","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":4403,"src":"633:3871:30","usedErrors":[]}],"src":"32:4473:30"},"id":30},"contracts/samples/SimpleAccountFactory.sol":{"ast":{"absolutePath":"contracts/samples/SimpleAccountFactory.sol","exportedSymbols":{"Address":[1127],"BaseAccount":[3112],"Counters":[1201],"Create2":[1282],"ECDSA":[1987],"ERC1967Proxy":[67],"ERC1967Upgrade":[371],"IAccount":[3367],"IAggregator":[3401],"IBeacon":[433],"IERC1155Receiver":[759],"IERC165":[1999],"IERC1822Proxiable":[30],"IERC1967":[20],"IERC721Receiver":[777],"IERC777Recipient":[797],"IEntryPoint":[3605],"INonceManager":[3624],"IStakeManager":[3764],"Initializable":[602],"Math":[2865],"Proxy":[423],"SignedMath":[2970],"SimpleAccount":[4402],"SimpleAccountFactory":[4588],"StorageSlot":[1392],"Strings":[1621],"TokenCallbackHandler":[4712],"UUPSUpgradeable":[718],"UserOperation":[3791],"UserOperationLib":[3961],"ValidationData":[3121],"_intersectTimeRange":[3265],"_packValidationData":[3302,3340],"_parseValidationData":[3180],"calldataKeccak":[3350]},"id":4589,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4404,"literals":["solidity","^","0.8",".18"],"nodeType":"PragmaDirective","src":"32:24:31"},{"absolutePath":"@openzeppelin/contracts/utils/Counters.sol","file":"@openzeppelin/contracts/utils/Counters.sol","id":4405,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4589,"sourceUnit":1202,"src":"58:52:31","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Create2.sol","file":"@openzeppelin/contracts/utils/Create2.sol","id":4406,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4589,"sourceUnit":1283,"src":"111:51:31","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol","file":"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol","id":4407,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4589,"sourceUnit":68,"src":"163:64:31","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/samples/SimpleAccount.sol","file":"./SimpleAccount.sol","id":4408,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4589,"sourceUnit":4403,"src":"229:29:31","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SimpleAccountFactory","contractDependencies":[67,4402],"contractKind":"contract","documentation":{"id":4409,"nodeType":"StructuredDocumentation","src":"260:388:31","text":" A sample factory contract for SimpleAccount\n A UserOperations \"initCode\" holds the address of the factory, and a method call (to createAccount, in this sample factory).\n The factory's createAccount returns the target account address even if it is already installed.\n This way, the entryPoint.getSenderAddress() can be called either before or after the account is created."},"fullyImplemented":true,"id":4588,"linearizedBaseContracts":[4588],"name":"SimpleAccountFactory","nameLocation":"658:20:31","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"11464fbe","id":4412,"mutability":"immutable","name":"accountImplementation","nameLocation":"716:21:31","nodeType":"VariableDeclaration","scope":4588,"src":"685:52:31","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_SimpleAccount_$4402","typeString":"contract SimpleAccount"},"typeName":{"id":4411,"nodeType":"UserDefinedTypeName","pathNode":{"id":4410,"name":"SimpleAccount","nameLocations":["685:13:31"],"nodeType":"IdentifierPath","referencedDeclaration":4402,"src":"685:13:31"},"referencedDeclaration":4402,"src":"685:13:31","typeDescriptions":{"typeIdentifier":"t_contract$_SimpleAccount_$4402","typeString":"contract SimpleAccount"}},"visibility":"public"},{"constant":false,"functionSelector":"b0d691fe","id":4415,"mutability":"immutable","name":"entryPoint","nameLocation":"798:10:31","nodeType":"VariableDeclaration","scope":4588,"src":"769:39:31","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$3605","typeString":"contract IEntryPoint"},"typeName":{"id":4414,"nodeType":"UserDefinedTypeName","pathNode":{"id":4413,"name":"IEntryPoint","nameLocations":["769:11:31"],"nodeType":"IdentifierPath","referencedDeclaration":3605,"src":"769:11:31"},"referencedDeclaration":3605,"src":"769:11:31","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$3605","typeString":"contract IEntryPoint"}},"visibility":"public"},{"global":false,"id":4419,"libraryName":{"id":4416,"name":"Counters","nameLocations":["821:8:31"],"nodeType":"IdentifierPath","referencedDeclaration":1201,"src":"821:8:31"},"nodeType":"UsingForDirective","src":"815:36:31","typeName":{"id":4418,"nodeType":"UserDefinedTypeName","pathNode":{"id":4417,"name":"Counters.Counter","nameLocations":["834:8:31","843:7:31"],"nodeType":"IdentifierPath","referencedDeclaration":1133,"src":"834:16:31"},"referencedDeclaration":1133,"src":"834:16:31","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1133_storage_ptr","typeString":"struct Counters.Counter"}}},{"constant":false,"id":4422,"mutability":"mutable","name":"_walletIds","nameLocation":"882:10:31","nodeType":"VariableDeclaration","scope":4588,"src":"857:35:31","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1133_storage","typeString":"struct Counters.Counter"},"typeName":{"id":4421,"nodeType":"UserDefinedTypeName","pathNode":{"id":4420,"name":"Counters.Counter","nameLocations":["857:8:31","866:7:31"],"nodeType":"IdentifierPath","referencedDeclaration":1133,"src":"857:16:31"},"referencedDeclaration":1133,"src":"857:16:31","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1133_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"private"},{"anonymous":false,"eventSelector":"7757890bcab34d673dfca6b71df1b57f75a2fe4231d6e8de726caf534ab1fdd6","id":4428,"name":"Created","nameLocation":"925:7:31","nodeType":"EventDefinition","parameters":{"id":4427,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4424,"indexed":false,"mutability":"mutable","name":"walletId","nameLocation":"941:8:31","nodeType":"VariableDeclaration","scope":4428,"src":"933:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4423,"name":"uint256","nodeType":"ElementaryTypeName","src":"933:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4426,"indexed":false,"mutability":"mutable","name":"addr","nameLocation":"959:4:31","nodeType":"VariableDeclaration","scope":4428,"src":"951:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4425,"name":"address","nodeType":"ElementaryTypeName","src":"951:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"932:32:31"},"src":"919:46:31"},{"body":{"id":4447,"nodeType":"Block","src":"1099:105:31","statements":[{"expression":{"id":4441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4435,"name":"accountImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4412,"src":"1109:21:31","typeDescriptions":{"typeIdentifier":"t_contract$_SimpleAccount_$4402","typeString":"contract SimpleAccount"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4439,"name":"_entryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4432,"src":"1151:11:31","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$3605","typeString":"contract IEntryPoint"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IEntryPoint_$3605","typeString":"contract IEntryPoint"}],"id":4438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"NewExpression","src":"1133:17:31","typeDescriptions":{"typeIdentifier":"t_function_creation_nonpayable$_t_contract$_IEntryPoint_$3605_$returns$_t_contract$_SimpleAccount_$4402_$","typeString":"function (contract IEntryPoint) returns (contract SimpleAccount)"},"typeName":{"id":4437,"nodeType":"UserDefinedTypeName","pathNode":{"id":4436,"name":"SimpleAccount","nameLocations":["1137:13:31"],"nodeType":"IdentifierPath","referencedDeclaration":4402,"src":"1137:13:31"},"referencedDeclaration":4402,"src":"1137:13:31","typeDescriptions":{"typeIdentifier":"t_contract$_SimpleAccount_$4402","typeString":"contract SimpleAccount"}}},"id":4440,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1133:30:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_SimpleAccount_$4402","typeString":"contract SimpleAccount"}},"src":"1109:54:31","typeDescriptions":{"typeIdentifier":"t_contract$_SimpleAccount_$4402","typeString":"contract SimpleAccount"}},"id":4442,"nodeType":"ExpressionStatement","src":"1109:54:31"},{"expression":{"id":4445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4443,"name":"entryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4415,"src":"1173:10:31","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$3605","typeString":"contract IEntryPoint"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4444,"name":"_entryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4432,"src":"1186:11:31","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$3605","typeString":"contract IEntryPoint"}},"src":"1173:24:31","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$3605","typeString":"contract IEntryPoint"}},"id":4446,"nodeType":"ExpressionStatement","src":"1173:24:31"}]},"documentation":{"id":4429,"nodeType":"StructuredDocumentation","src":"971:86:31","text":" constructor\n @param _entryPoint entryPoint Contract's Address"},"id":4448,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":4433,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4432,"mutability":"mutable","name":"_entryPoint","nameLocation":"1086:11:31","nodeType":"VariableDeclaration","scope":4448,"src":"1074:23:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$3605","typeString":"contract IEntryPoint"},"typeName":{"id":4431,"nodeType":"UserDefinedTypeName","pathNode":{"id":4430,"name":"IEntryPoint","nameLocations":["1074:11:31"],"nodeType":"IdentifierPath","referencedDeclaration":3605,"src":"1074:11:31"},"referencedDeclaration":3605,"src":"1074:11:31","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$3605","typeString":"contract IEntryPoint"}},"visibility":"internal"}],"src":"1073:25:31"},"returnParameters":{"id":4434,"nodeType":"ParameterList","parameters":[],"src":"1099:0:31"},"scope":4588,"src":"1062:142:31","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":4528,"nodeType":"Block","src":"1693:577:31","statements":[{"assignments":[4460],"declarations":[{"constant":false,"id":4460,"mutability":"mutable","name":"newWAlletID","nameLocation":"1708:11:31","nodeType":"VariableDeclaration","scope":4528,"src":"1703:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4459,"name":"uint","nodeType":"ElementaryTypeName","src":"1703:4:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4464,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4461,"name":"_walletIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4422,"src":"1722:10:31","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1133_storage","typeString":"struct Counters.Counter storage ref"}},"id":4462,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1733:7:31","memberName":"current","nodeType":"MemberAccess","referencedDeclaration":1145,"src":"1722:18:31","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Counter_$1133_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$1133_storage_ptr_$","typeString":"function (struct Counters.Counter storage pointer) view returns (uint256)"}},"id":4463,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1722:20:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1703:39:31"},{"assignments":[4466],"declarations":[{"constant":false,"id":4466,"mutability":"mutable","name":"addr","nameLocation":"1760:4:31","nodeType":"VariableDeclaration","scope":4528,"src":"1752:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4465,"name":"address","nodeType":"ElementaryTypeName","src":"1752:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":4471,"initialValue":{"arguments":[{"id":4468,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4451,"src":"1778:5:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4469,"name":"salt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4453,"src":"1785:4:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4467,"name":"getAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4571,"src":"1767:10:31","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_address_$","typeString":"function (address,uint256) view returns (address)"}},"id":4470,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1767:23:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"1752:38:31"},{"assignments":[4473],"declarations":[{"constant":false,"id":4473,"mutability":"mutable","name":"codeSize","nameLocation":"1805:8:31","nodeType":"VariableDeclaration","scope":4528,"src":"1800:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4472,"name":"uint","nodeType":"ElementaryTypeName","src":"1800:4:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4477,"initialValue":{"expression":{"expression":{"id":4474,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4466,"src":"1816:4:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1821:4:31","memberName":"code","nodeType":"MemberAccess","src":"1816:9:31","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1826:6:31","memberName":"length","nodeType":"MemberAccess","src":"1816:16:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1800:32:31"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4478,"name":"codeSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4473,"src":"1846:8:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4479,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1857:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1846:12:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4489,"nodeType":"IfStatement","src":"1842:78:31","trueBody":{"id":4488,"nodeType":"Block","src":"1860:60:31","statements":[{"expression":{"arguments":[{"arguments":[{"id":4484,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4466,"src":"1903:4:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4483,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1895:8:31","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":4482,"name":"address","nodeType":"ElementaryTypeName","src":"1895:8:31","stateMutability":"payable","typeDescriptions":{}}},"id":4485,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1895:13:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"}],"id":4481,"name":"SimpleAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4402,"src":"1881:13:31","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SimpleAccount_$4402_$","typeString":"type(contract SimpleAccount)"}},"id":4486,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1881:28:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_SimpleAccount_$4402","typeString":"contract SimpleAccount"}},"functionReturnParameters":4458,"id":4487,"nodeType":"Return","src":"1874:35:31"}]}},{"expression":{"id":4516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4490,"name":"ret","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4457,"src":"1929:3:31","typeDescriptions":{"typeIdentifier":"t_contract$_SimpleAccount_$4402","typeString":"contract SimpleAccount"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"id":4504,"name":"accountImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4412,"src":"2054:21:31","typeDescriptions":{"typeIdentifier":"t_contract$_SimpleAccount_$4402","typeString":"contract SimpleAccount"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SimpleAccount_$4402","typeString":"contract SimpleAccount"}],"id":4503,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2046:7:31","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4502,"name":"address","nodeType":"ElementaryTypeName","src":"2046:7:31","typeDescriptions":{}}},"id":4505,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2046:30:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"expression":{"id":4508,"name":"SimpleAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4402,"src":"2113:13:31","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SimpleAccount_$4402_$","typeString":"type(contract SimpleAccount)"}},"id":4509,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2127:10:31","memberName":"initialize","nodeType":"MemberAccess","referencedDeclaration":4244,"src":"2113:24:31","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$returns$__$","typeString":"function SimpleAccount.initialize(address)"}},{"components":[{"id":4510,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4451,"src":"2140:5:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":4511,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2139:7:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$returns$__$","typeString":"function SimpleAccount.initialize(address)"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":4506,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2098:3:31","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4507,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2102:10:31","memberName":"encodeCall","nodeType":"MemberAccess","src":"2098:14:31","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4512,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2098:49:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"NewExpression","src":"1987:16:31","typeDescriptions":{"typeIdentifier":"t_function_creation_payable$_t_address_$_t_bytes_memory_ptr_$returns$_t_contract$_ERC1967Proxy_$67_$","typeString":"function (address,bytes memory) payable returns (contract ERC1967Proxy)"},"typeName":{"id":4495,"nodeType":"UserDefinedTypeName","pathNode":{"id":4494,"name":"ERC1967Proxy","nameLocations":["1991:12:31"],"nodeType":"IdentifierPath","referencedDeclaration":67,"src":"1991:12:31"},"referencedDeclaration":67,"src":"1991:12:31","typeDescriptions":{"typeIdentifier":"t_contract$_ERC1967Proxy_$67","typeString":"contract ERC1967Proxy"}}},"id":4501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["salt"],"nodeType":"FunctionCallOptions","options":[{"arguments":[{"id":4499,"name":"salt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4453,"src":"2018:4:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4498,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2010:7:31","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":4497,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2010:7:31","typeDescriptions":{}}},"id":4500,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2010:13:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"src":"1987:37:31","typeDescriptions":{"typeIdentifier":"t_function_creation_payable$_t_address_$_t_bytes_memory_ptr_$returns$_t_contract$_ERC1967Proxy_$67_$salt","typeString":"function (address,bytes memory) payable returns (contract ERC1967Proxy)"}},"id":4513,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1987:178:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ERC1967Proxy_$67","typeString":"contract ERC1967Proxy"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ERC1967Proxy_$67","typeString":"contract ERC1967Proxy"}],"id":4493,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1962:8:31","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":4492,"name":"address","nodeType":"ElementaryTypeName","src":"1962:8:31","stateMutability":"payable","typeDescriptions":{}}},"id":4514,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1962:217:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"}],"id":4491,"name":"SimpleAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4402,"src":"1935:13:31","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SimpleAccount_$4402_$","typeString":"type(contract SimpleAccount)"}},"id":4515,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1935:254:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_SimpleAccount_$4402","typeString":"contract SimpleAccount"}},"src":"1929:260:31","typeDescriptions":{"typeIdentifier":"t_contract$_SimpleAccount_$4402","typeString":"contract SimpleAccount"}},"id":4517,"nodeType":"ExpressionStatement","src":"1929:260:31"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4518,"name":"_walletIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4422,"src":"2200:10:31","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1133_storage","typeString":"struct Counters.Counter storage ref"}},"id":4520,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2211:9:31","memberName":"increment","nodeType":"MemberAccess","referencedDeclaration":1159,"src":"2200:20:31","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Counter_$1133_storage_ptr_$returns$__$attached_to$_t_struct$_Counter_$1133_storage_ptr_$","typeString":"function (struct Counters.Counter storage pointer)"}},"id":4521,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2200:22:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4522,"nodeType":"ExpressionStatement","src":"2200:22:31"},{"eventCall":{"arguments":[{"id":4524,"name":"newWAlletID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4460,"src":"2245:11:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4525,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4466,"src":"2258:4:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":4523,"name":"Created","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4428,"src":"2237:7:31","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$","typeString":"function (uint256,address)"}},"id":4526,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2237:26:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4527,"nodeType":"EmitStatement","src":"2232:31:31"}]},"documentation":{"id":4449,"nodeType":"StructuredDocumentation","src":"1210:369:31","text":" create an account, and return its address.\n returns the address even if the account is already deployed.\n Note that during UserOperation execution, this method is called only if the account is not deployed.\n This method returns an existing account address so that entryPoint.getSenderAddress() would work even after account creation"},"functionSelector":"5fbfb9cf","id":4529,"implemented":true,"kind":"function","modifiers":[],"name":"createAccount","nameLocation":"1593:13:31","nodeType":"FunctionDefinition","parameters":{"id":4454,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4451,"mutability":"mutable","name":"owner","nameLocation":"1624:5:31","nodeType":"VariableDeclaration","scope":4529,"src":"1616:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4450,"name":"address","nodeType":"ElementaryTypeName","src":"1616:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4453,"mutability":"mutable","name":"salt","nameLocation":"1647:4:31","nodeType":"VariableDeclaration","scope":4529,"src":"1639:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4452,"name":"uint256","nodeType":"ElementaryTypeName","src":"1639:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1606:51:31"},"returnParameters":{"id":4458,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4457,"mutability":"mutable","name":"ret","nameLocation":"1688:3:31","nodeType":"VariableDeclaration","scope":4529,"src":"1674:17:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_SimpleAccount_$4402","typeString":"contract SimpleAccount"},"typeName":{"id":4456,"nodeType":"UserDefinedTypeName","pathNode":{"id":4455,"name":"SimpleAccount","nameLocations":["1674:13:31"],"nodeType":"IdentifierPath","referencedDeclaration":4402,"src":"1674:13:31"},"referencedDeclaration":4402,"src":"1674:13:31","typeDescriptions":{"typeIdentifier":"t_contract$_SimpleAccount_$4402","typeString":"contract SimpleAccount"}},"visibility":"internal"}],"src":"1673:19:31"},"scope":4588,"src":"1584:686:31","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":4570,"nodeType":"Block","src":"2496:466:31","statements":[{"expression":{"arguments":[{"arguments":[{"id":4543,"name":"salt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4534,"src":"2573:4:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4542,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2565:7:31","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":4541,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2565:7:31","typeDescriptions":{}}},"id":4544,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2565:13:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"arguments":[{"expression":{"arguments":[{"id":4549,"name":"ERC1967Proxy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"2674:12:31","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Proxy_$67_$","typeString":"type(contract ERC1967Proxy)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_ERC1967Proxy_$67_$","typeString":"type(contract ERC1967Proxy)"}],"id":4548,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2669:4:31","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4550,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2669:18:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_ERC1967Proxy_$67","typeString":"type(contract ERC1967Proxy)"}},"id":4551,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2688:12:31","memberName":"creationCode","nodeType":"MemberAccess","src":"2669:31:31","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"arguments":[{"arguments":[{"id":4556,"name":"accountImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4412,"src":"2774:21:31","typeDescriptions":{"typeIdentifier":"t_contract$_SimpleAccount_$4402","typeString":"contract SimpleAccount"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SimpleAccount_$4402","typeString":"contract SimpleAccount"}],"id":4555,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2766:7:31","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4554,"name":"address","nodeType":"ElementaryTypeName","src":"2766:7:31","typeDescriptions":{}}},"id":4557,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2766:30:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"expression":{"id":4560,"name":"SimpleAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4402,"src":"2841:13:31","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SimpleAccount_$4402_$","typeString":"type(contract SimpleAccount)"}},"id":4561,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2855:10:31","memberName":"initialize","nodeType":"MemberAccess","referencedDeclaration":4244,"src":"2841:24:31","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$returns$__$","typeString":"function SimpleAccount.initialize(address)"}},{"components":[{"id":4562,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4532,"src":"2868:5:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":4563,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2867:7:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$returns$__$","typeString":"function SimpleAccount.initialize(address)"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":4558,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2826:3:31","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4559,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2830:10:31","memberName":"encodeCall","nodeType":"MemberAccess","src":"2826:14:31","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4564,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2826:49:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4552,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2726:3:31","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4553,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2730:6:31","memberName":"encode","nodeType":"MemberAccess","src":"2726:10:31","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4565,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2726:175:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4546,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2627:3:31","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4547,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2631:12:31","memberName":"encodePacked","nodeType":"MemberAccess","src":"2627:16:31","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4566,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2627:296:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4545,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2596:9:31","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4567,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2596:345:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":4539,"name":"Create2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1282,"src":"2525:7:31","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Create2_$1282_$","typeString":"type(library Create2)"}},"id":4540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2533:14:31","memberName":"computeAddress","nodeType":"MemberAccess","referencedDeclaration":1267,"src":"2525:22:31","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,bytes32) view returns (address)"}},"id":4568,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2525:430:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":4538,"id":4569,"nodeType":"Return","src":"2506:449:31"}]},"documentation":{"id":4530,"nodeType":"StructuredDocumentation","src":"2276:114:31","text":" calculate the counterfactual address of this account as it would be returned by createAccount()"},"functionSelector":"8cb84e18","id":4571,"implemented":true,"kind":"function","modifiers":[],"name":"getAddress","nameLocation":"2404:10:31","nodeType":"FunctionDefinition","parameters":{"id":4535,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4532,"mutability":"mutable","name":"owner","nameLocation":"2432:5:31","nodeType":"VariableDeclaration","scope":4571,"src":"2424:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4531,"name":"address","nodeType":"ElementaryTypeName","src":"2424:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4534,"mutability":"mutable","name":"salt","nameLocation":"2455:4:31","nodeType":"VariableDeclaration","scope":4571,"src":"2447:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4533,"name":"uint256","nodeType":"ElementaryTypeName","src":"2447:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2414:51:31"},"returnParameters":{"id":4538,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4537,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4571,"src":"2487:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4536,"name":"address","nodeType":"ElementaryTypeName","src":"2487:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2486:9:31"},"scope":4588,"src":"2395:567:31","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":4586,"nodeType":"Block","src":"3068:71:31","statements":[{"expression":{"arguments":[{"id":4583,"name":"unstakeDelaySec","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4574,"src":"3116:15:31","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"}],"expression":{"id":4577,"name":"entryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4415,"src":"3078:10:31","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$3605","typeString":"contract IEntryPoint"}},"id":4579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3089:8:31","memberName":"addStake","nodeType":"MemberAccess","referencedDeclaration":3745,"src":"3078:19:31","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_uint32_$returns$__$","typeString":"function (uint32) payable external"}},"id":4582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"expression":{"id":4580,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3105:3:31","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3109:5:31","memberName":"value","nodeType":"MemberAccess","src":"3105:9:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"3078:37:31","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_uint32_$returns$__$value","typeString":"function (uint32) payable external"}},"id":4584,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3078:54:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4585,"nodeType":"ExpressionStatement","src":"3078:54:31"}]},"documentation":{"id":4572,"nodeType":"StructuredDocumentation","src":"2968:36:31","text":" addStake function"},"functionSelector":"0396cb60","id":4587,"implemented":true,"kind":"function","modifiers":[],"name":"addStake","nameLocation":"3018:8:31","nodeType":"FunctionDefinition","parameters":{"id":4575,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4574,"mutability":"mutable","name":"unstakeDelaySec","nameLocation":"3034:15:31","nodeType":"VariableDeclaration","scope":4587,"src":"3027:22:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":4573,"name":"uint32","nodeType":"ElementaryTypeName","src":"3027:6:31","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"3026:24:31"},"returnParameters":{"id":4576,"nodeType":"ParameterList","parameters":[],"src":"3068:0:31"},"scope":4588,"src":"3009:130:31","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":4589,"src":"649:2492:31","usedErrors":[]}],"src":"32:3110:31"},"id":31},"contracts/samples/callback/TokenCallbackHandler.sol":{"ast":{"absolutePath":"contracts/samples/callback/TokenCallbackHandler.sol","exportedSymbols":{"IERC1155Receiver":[759],"IERC165":[1999],"IERC721Receiver":[777],"IERC777Recipient":[797],"TokenCallbackHandler":[4712]},"id":4713,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4590,"literals":["solidity","^","0.8",".18"],"nodeType":"PragmaDirective","src":"32:24:32"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"@openzeppelin/contracts/utils/introspection/IERC165.sol","id":4591,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4713,"sourceUnit":2000,"src":"97:65:32","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC777/IERC777Recipient.sol","file":"@openzeppelin/contracts/token/ERC777/IERC777Recipient.sol","id":4592,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4713,"sourceUnit":798,"src":"163:67:32","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","file":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","id":4593,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4713,"sourceUnit":778,"src":"231:66:32","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol","file":"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol","id":4594,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4713,"sourceUnit":760,"src":"298:68:32","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":4596,"name":"IERC777Recipient","nameLocations":["519:16:32"],"nodeType":"IdentifierPath","referencedDeclaration":797,"src":"519:16:32"},"id":4597,"nodeType":"InheritanceSpecifier","src":"519:16:32"},{"baseName":{"id":4598,"name":"IERC721Receiver","nameLocations":["537:15:32"],"nodeType":"IdentifierPath","referencedDeclaration":777,"src":"537:15:32"},"id":4599,"nodeType":"InheritanceSpecifier","src":"537:15:32"},{"baseName":{"id":4600,"name":"IERC1155Receiver","nameLocations":["554:16:32"],"nodeType":"IdentifierPath","referencedDeclaration":759,"src":"554:16:32"},"id":4601,"nodeType":"InheritanceSpecifier","src":"554:16:32"}],"canonicalName":"TokenCallbackHandler","contractDependencies":[],"contractKind":"contract","documentation":{"id":4595,"nodeType":"StructuredDocumentation","src":"368:117:32","text":" Token callback handler.\n   Handles supported tokens' callbacks, allowing account receiving these tokens."},"fullyImplemented":true,"id":4712,"linearizedBaseContracts":[4712,759,1999,777,797],"name":"TokenCallbackHandler","nameLocation":"495:20:32","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[796],"body":{"id":4617,"nodeType":"Block","src":"746:7:32","statements":[]},"functionSelector":"0023de29","id":4618,"implemented":true,"kind":"function","modifiers":[],"name":"tokensReceived","nameLocation":"586:14:32","nodeType":"FunctionDefinition","overrides":{"id":4615,"nodeType":"OverrideSpecifier","overrides":[],"src":"737:8:32"},"parameters":{"id":4614,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4603,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4618,"src":"610:7:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4602,"name":"address","nodeType":"ElementaryTypeName","src":"610:7:32","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4605,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4618,"src":"627:7:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4604,"name":"address","nodeType":"ElementaryTypeName","src":"627:7:32","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4607,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4618,"src":"644:7:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4606,"name":"address","nodeType":"ElementaryTypeName","src":"644:7:32","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4609,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4618,"src":"661:7:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4608,"name":"uint256","nodeType":"ElementaryTypeName","src":"661:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4611,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4618,"src":"678:14:32","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":4610,"name":"bytes","nodeType":"ElementaryTypeName","src":"678:5:32","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4613,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4618,"src":"702:14:32","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":4612,"name":"bytes","nodeType":"ElementaryTypeName","src":"702:5:32","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"600:122:32"},"returnParameters":{"id":4616,"nodeType":"ParameterList","parameters":[],"src":"746:0:32"},"scope":4712,"src":"577:176:32","stateMutability":"pure","virtual":false,"visibility":"external"},{"baseFunctions":[776],"body":{"id":4636,"nodeType":"Block","src":"906:65:32","statements":[{"expression":{"expression":{"expression":{"id":4632,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":777,"src":"923:15:32","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$777_$","typeString":"type(contract IERC721Receiver)"}},"id":4633,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"939:16:32","memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":776,"src":"923:32:32","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"}},"id":4634,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"956:8:32","memberName":"selector","nodeType":"MemberAccess","src":"923:41:32","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"functionReturnParameters":4631,"id":4635,"nodeType":"Return","src":"916:48:32"}]},"functionSelector":"150b7a02","id":4637,"implemented":true,"kind":"function","modifiers":[],"name":"onERC721Received","nameLocation":"768:16:32","nodeType":"FunctionDefinition","overrides":{"id":4628,"nodeType":"OverrideSpecifier","overrides":[],"src":"880:8:32"},"parameters":{"id":4627,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4620,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4637,"src":"794:7:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4619,"name":"address","nodeType":"ElementaryTypeName","src":"794:7:32","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4622,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4637,"src":"811:7:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4621,"name":"address","nodeType":"ElementaryTypeName","src":"811:7:32","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4624,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4637,"src":"828:7:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4623,"name":"uint256","nodeType":"ElementaryTypeName","src":"828:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4626,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4637,"src":"845:14:32","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":4625,"name":"bytes","nodeType":"ElementaryTypeName","src":"845:5:32","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"784:81:32"},"returnParameters":{"id":4631,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4630,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4637,"src":"898:6:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":4629,"name":"bytes4","nodeType":"ElementaryTypeName","src":"898:6:32","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"897:8:32"},"scope":4712,"src":"759:212:32","stateMutability":"pure","virtual":false,"visibility":"external"},{"baseFunctions":[740],"body":{"id":4657,"nodeType":"Block","src":"1142:67:32","statements":[{"expression":{"expression":{"expression":{"id":4653,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":759,"src":"1159:16:32","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Receiver_$759_$","typeString":"type(contract IERC1155Receiver)"}},"id":4654,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1176:17:32","memberName":"onERC1155Received","nodeType":"MemberAccess","referencedDeclaration":740,"src":"1159:34:32","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC1155Receiver.onERC1155Received(address,address,uint256,uint256,bytes calldata) returns (bytes4)"}},"id":4655,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1194:8:32","memberName":"selector","nodeType":"MemberAccess","src":"1159:43:32","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"functionReturnParameters":4652,"id":4656,"nodeType":"Return","src":"1152:50:32"}]},"functionSelector":"f23a6e61","id":4658,"implemented":true,"kind":"function","modifiers":[],"name":"onERC1155Received","nameLocation":"986:17:32","nodeType":"FunctionDefinition","overrides":{"id":4649,"nodeType":"OverrideSpecifier","overrides":[],"src":"1116:8:32"},"parameters":{"id":4648,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4639,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4658,"src":"1013:7:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4638,"name":"address","nodeType":"ElementaryTypeName","src":"1013:7:32","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4641,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4658,"src":"1030:7:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4640,"name":"address","nodeType":"ElementaryTypeName","src":"1030:7:32","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4643,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4658,"src":"1047:7:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4642,"name":"uint256","nodeType":"ElementaryTypeName","src":"1047:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4645,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4658,"src":"1064:7:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4644,"name":"uint256","nodeType":"ElementaryTypeName","src":"1064:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4647,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4658,"src":"1081:14:32","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":4646,"name":"bytes","nodeType":"ElementaryTypeName","src":"1081:5:32","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1003:98:32"},"returnParameters":{"id":4652,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4651,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4658,"src":"1134:6:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":4650,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1134:6:32","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1133:8:32"},"scope":4712,"src":"977:232:32","stateMutability":"pure","virtual":false,"visibility":"external"},{"baseFunctions":[758],"body":{"id":4680,"nodeType":"Block","src":"1407:72:32","statements":[{"expression":{"expression":{"expression":{"id":4676,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":759,"src":"1424:16:32","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Receiver_$759_$","typeString":"type(contract IERC1155Receiver)"}},"id":4677,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1441:22:32","memberName":"onERC1155BatchReceived","nodeType":"MemberAccess","referencedDeclaration":758,"src":"1424:39:32","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC1155Receiver.onERC1155BatchReceived(address,address,uint256[] calldata,uint256[] calldata,bytes calldata) returns (bytes4)"}},"id":4678,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1464:8:32","memberName":"selector","nodeType":"MemberAccess","src":"1424:48:32","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"functionReturnParameters":4675,"id":4679,"nodeType":"Return","src":"1417:55:32"}]},"functionSelector":"bc197c81","id":4681,"implemented":true,"kind":"function","modifiers":[],"name":"onERC1155BatchReceived","nameLocation":"1224:22:32","nodeType":"FunctionDefinition","overrides":{"id":4672,"nodeType":"OverrideSpecifier","overrides":[],"src":"1381:8:32"},"parameters":{"id":4671,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4660,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4681,"src":"1256:7:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4659,"name":"address","nodeType":"ElementaryTypeName","src":"1256:7:32","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4662,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4681,"src":"1273:7:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4661,"name":"address","nodeType":"ElementaryTypeName","src":"1273:7:32","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4665,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4681,"src":"1290:18:32","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4663,"name":"uint256","nodeType":"ElementaryTypeName","src":"1290:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4664,"nodeType":"ArrayTypeName","src":"1290:9:32","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":4668,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4681,"src":"1318:18:32","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4666,"name":"uint256","nodeType":"ElementaryTypeName","src":"1318:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4667,"nodeType":"ArrayTypeName","src":"1318:9:32","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":4670,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4681,"src":"1346:14:32","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":4669,"name":"bytes","nodeType":"ElementaryTypeName","src":"1346:5:32","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1246:120:32"},"returnParameters":{"id":4675,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4674,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4681,"src":"1399:6:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":4673,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1399:6:32","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1398:8:32"},"scope":4712,"src":"1215:264:32","stateMutability":"pure","virtual":false,"visibility":"external"},{"baseFunctions":[1998],"body":{"id":4710,"nodeType":"Block","src":"1578:205:32","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":4694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4689,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4683,"src":"1607:11:32","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":4691,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":777,"src":"1627:15:32","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$777_$","typeString":"type(contract IERC721Receiver)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$777_$","typeString":"type(contract IERC721Receiver)"}],"id":4690,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1622:4:32","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4692,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1622:21:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721Receiver_$777","typeString":"type(contract IERC721Receiver)"}},"id":4693,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1644:11:32","memberName":"interfaceId","nodeType":"MemberAccess","src":"1622:33:32","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1607:48:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":4700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4695,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4683,"src":"1671:11:32","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":4697,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":759,"src":"1691:16:32","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Receiver_$759_$","typeString":"type(contract IERC1155Receiver)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC1155Receiver_$759_$","typeString":"type(contract IERC1155Receiver)"}],"id":4696,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1686:4:32","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4698,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1686:22:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC1155Receiver_$759","typeString":"type(contract IERC1155Receiver)"}},"id":4699,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1709:11:32","memberName":"interfaceId","nodeType":"MemberAccess","src":"1686:34:32","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1671:49:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1607:113:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":4707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4702,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4683,"src":"1736:11:32","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":4704,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1999,"src":"1756:7:32","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$1999_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$1999_$","typeString":"type(contract IERC165)"}],"id":4703,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1751:4:32","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4705,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1751:13:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$1999","typeString":"type(contract IERC165)"}},"id":4706,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1765:11:32","memberName":"interfaceId","nodeType":"MemberAccess","src":"1751:25:32","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1736:40:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1607:169:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4688,"id":4709,"nodeType":"Return","src":"1588:188:32"}]},"functionSelector":"01ffc9a7","id":4711,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1494:17:32","nodeType":"FunctionDefinition","overrides":{"id":4685,"nodeType":"OverrideSpecifier","overrides":[],"src":"1554:8:32"},"parameters":{"id":4684,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4683,"mutability":"mutable","name":"interfaceId","nameLocation":"1519:11:32","nodeType":"VariableDeclaration","scope":4711,"src":"1512:18:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":4682,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1512:6:32","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1511:20:32"},"returnParameters":{"id":4688,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4687,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4711,"src":"1572:4:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4686,"name":"bool","nodeType":"ElementaryTypeName","src":"1572:4:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1571:6:32"},"scope":4712,"src":"1485:298:32","stateMutability":"view","virtual":true,"visibility":"external"}],"scope":4713,"src":"486:1299:32","usedErrors":[]}],"src":"32:1753:32"},"id":32},"contracts/utils/Exec.sol":{"ast":{"absolutePath":"contracts/utils/Exec.sol","exportedSymbols":{"Exec":[4803]},"id":4804,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4714,"literals":["solidity",">=","0.7",".5","<","0.9",".0"],"nodeType":"PragmaDirective","src":"32:31:33"},{"abstract":false,"baseContracts":[],"canonicalName":"Exec","contractDependencies":[],"contractKind":"library","documentation":{"id":4715,"nodeType":"StructuredDocumentation","src":"104:95:33","text":" Utility functions helpful when making different kinds of contract calls in Solidity."},"fullyImplemented":true,"id":4803,"linearizedBaseContracts":[4803],"name":"Exec","nameLocation":"208:4:33","nodeType":"ContractDefinition","nodes":[{"body":{"id":4729,"nodeType":"Block","src":"365:118:33","statements":[{"AST":{"nodeType":"YulBlock","src":"384:93:33","statements":[{"nodeType":"YulAssignment","src":"398:69:33","value":{"arguments":[{"name":"txGas","nodeType":"YulIdentifier","src":"414:5:33"},{"name":"to","nodeType":"YulIdentifier","src":"421:2:33"},{"name":"value","nodeType":"YulIdentifier","src":"425:5:33"},{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"436:4:33"},{"kind":"number","nodeType":"YulLiteral","src":"442:4:33","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"432:3:33"},"nodeType":"YulFunctionCall","src":"432:15:33"},{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"455:4:33"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"449:5:33"},"nodeType":"YulFunctionCall","src":"449:11:33"},{"kind":"number","nodeType":"YulLiteral","src":"462:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"465:1:33","type":"","value":"0"}],"functionName":{"name":"call","nodeType":"YulIdentifier","src":"409:4:33"},"nodeType":"YulFunctionCall","src":"409:58:33"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"398:7:33"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4721,"isOffset":false,"isSlot":false,"src":"436:4:33","valueSize":1},{"declaration":4721,"isOffset":false,"isSlot":false,"src":"455:4:33","valueSize":1},{"declaration":4726,"isOffset":false,"isSlot":false,"src":"398:7:33","valueSize":1},{"declaration":4717,"isOffset":false,"isSlot":false,"src":"421:2:33","valueSize":1},{"declaration":4723,"isOffset":false,"isSlot":false,"src":"414:5:33","valueSize":1},{"declaration":4719,"isOffset":false,"isSlot":false,"src":"425:5:33","valueSize":1}],"id":4728,"nodeType":"InlineAssembly","src":"375:102:33"}]},"id":4730,"implemented":true,"kind":"function","modifiers":[],"name":"call","nameLocation":"229:4:33","nodeType":"FunctionDefinition","parameters":{"id":4724,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4717,"mutability":"mutable","name":"to","nameLocation":"251:2:33","nodeType":"VariableDeclaration","scope":4730,"src":"243:10:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4716,"name":"address","nodeType":"ElementaryTypeName","src":"243:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4719,"mutability":"mutable","name":"value","nameLocation":"271:5:33","nodeType":"VariableDeclaration","scope":4730,"src":"263:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4718,"name":"uint256","nodeType":"ElementaryTypeName","src":"263:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4721,"mutability":"mutable","name":"data","nameLocation":"299:4:33","nodeType":"VariableDeclaration","scope":4730,"src":"286:17:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4720,"name":"bytes","nodeType":"ElementaryTypeName","src":"286:5:33","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4723,"mutability":"mutable","name":"txGas","nameLocation":"321:5:33","nodeType":"VariableDeclaration","scope":4730,"src":"313:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4722,"name":"uint256","nodeType":"ElementaryTypeName","src":"313:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"233:99:33"},"returnParameters":{"id":4727,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4726,"mutability":"mutable","name":"success","nameLocation":"356:7:33","nodeType":"VariableDeclaration","scope":4730,"src":"351:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4725,"name":"bool","nodeType":"ElementaryTypeName","src":"351:4:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"350:14:33"},"scope":4803,"src":"220:263:33","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4742,"nodeType":"Block","src":"622:117:33","statements":[{"AST":{"nodeType":"YulBlock","src":"641:92:33","statements":[{"nodeType":"YulAssignment","src":"655:68:33","value":{"arguments":[{"name":"txGas","nodeType":"YulIdentifier","src":"677:5:33"},{"name":"to","nodeType":"YulIdentifier","src":"684:2:33"},{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"692:4:33"},{"kind":"number","nodeType":"YulLiteral","src":"698:4:33","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"688:3:33"},"nodeType":"YulFunctionCall","src":"688:15:33"},{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"711:4:33"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"705:5:33"},"nodeType":"YulFunctionCall","src":"705:11:33"},{"kind":"number","nodeType":"YulLiteral","src":"718:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"721:1:33","type":"","value":"0"}],"functionName":{"name":"staticcall","nodeType":"YulIdentifier","src":"666:10:33"},"nodeType":"YulFunctionCall","src":"666:57:33"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"655:7:33"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4734,"isOffset":false,"isSlot":false,"src":"692:4:33","valueSize":1},{"declaration":4734,"isOffset":false,"isSlot":false,"src":"711:4:33","valueSize":1},{"declaration":4739,"isOffset":false,"isSlot":false,"src":"655:7:33","valueSize":1},{"declaration":4732,"isOffset":false,"isSlot":false,"src":"684:2:33","valueSize":1},{"declaration":4736,"isOffset":false,"isSlot":false,"src":"677:5:33","valueSize":1}],"id":4741,"nodeType":"InlineAssembly","src":"632:101:33"}]},"id":4743,"implemented":true,"kind":"function","modifiers":[],"name":"staticcall","nameLocation":"498:10:33","nodeType":"FunctionDefinition","parameters":{"id":4737,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4732,"mutability":"mutable","name":"to","nameLocation":"526:2:33","nodeType":"VariableDeclaration","scope":4743,"src":"518:10:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4731,"name":"address","nodeType":"ElementaryTypeName","src":"518:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4734,"mutability":"mutable","name":"data","nameLocation":"551:4:33","nodeType":"VariableDeclaration","scope":4743,"src":"538:17:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4733,"name":"bytes","nodeType":"ElementaryTypeName","src":"538:5:33","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4736,"mutability":"mutable","name":"txGas","nameLocation":"573:5:33","nodeType":"VariableDeclaration","scope":4743,"src":"565:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4735,"name":"uint256","nodeType":"ElementaryTypeName","src":"565:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"508:76:33"},"returnParameters":{"id":4740,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4739,"mutability":"mutable","name":"success","nameLocation":"613:7:33","nodeType":"VariableDeclaration","scope":4743,"src":"608:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4738,"name":"bool","nodeType":"ElementaryTypeName","src":"608:4:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"607:14:33"},"scope":4803,"src":"489:250:33","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4755,"nodeType":"Block","src":"875:119:33","statements":[{"AST":{"nodeType":"YulBlock","src":"894:94:33","statements":[{"nodeType":"YulAssignment","src":"908:70:33","value":{"arguments":[{"name":"txGas","nodeType":"YulIdentifier","src":"932:5:33"},{"name":"to","nodeType":"YulIdentifier","src":"939:2:33"},{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"947:4:33"},{"kind":"number","nodeType":"YulLiteral","src":"953:4:33","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"943:3:33"},"nodeType":"YulFunctionCall","src":"943:15:33"},{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"966:4:33"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"960:5:33"},"nodeType":"YulFunctionCall","src":"960:11:33"},{"kind":"number","nodeType":"YulLiteral","src":"973:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"976:1:33","type":"","value":"0"}],"functionName":{"name":"delegatecall","nodeType":"YulIdentifier","src":"919:12:33"},"nodeType":"YulFunctionCall","src":"919:59:33"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"908:7:33"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4747,"isOffset":false,"isSlot":false,"src":"947:4:33","valueSize":1},{"declaration":4747,"isOffset":false,"isSlot":false,"src":"966:4:33","valueSize":1},{"declaration":4752,"isOffset":false,"isSlot":false,"src":"908:7:33","valueSize":1},{"declaration":4745,"isOffset":false,"isSlot":false,"src":"939:2:33","valueSize":1},{"declaration":4749,"isOffset":false,"isSlot":false,"src":"932:5:33","valueSize":1}],"id":4754,"nodeType":"InlineAssembly","src":"885:103:33"}]},"id":4756,"implemented":true,"kind":"function","modifiers":[],"name":"delegateCall","nameLocation":"754:12:33","nodeType":"FunctionDefinition","parameters":{"id":4750,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4745,"mutability":"mutable","name":"to","nameLocation":"784:2:33","nodeType":"VariableDeclaration","scope":4756,"src":"776:10:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4744,"name":"address","nodeType":"ElementaryTypeName","src":"776:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4747,"mutability":"mutable","name":"data","nameLocation":"809:4:33","nodeType":"VariableDeclaration","scope":4756,"src":"796:17:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4746,"name":"bytes","nodeType":"ElementaryTypeName","src":"796:5:33","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4749,"mutability":"mutable","name":"txGas","nameLocation":"831:5:33","nodeType":"VariableDeclaration","scope":4756,"src":"823:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4748,"name":"uint256","nodeType":"ElementaryTypeName","src":"823:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"766:76:33"},"returnParameters":{"id":4753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4752,"mutability":"mutable","name":"success","nameLocation":"866:7:33","nodeType":"VariableDeclaration","scope":4756,"src":"861:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4751,"name":"bool","nodeType":"ElementaryTypeName","src":"861:4:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"860:14:33"},"scope":4803,"src":"745:249:33","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4764,"nodeType":"Block","src":"1143:349:33","statements":[{"AST":{"nodeType":"YulBlock","src":"1162:324:33","statements":[{"nodeType":"YulVariableDeclaration","src":"1176:27:33","value":{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"1187:14:33"},"nodeType":"YulFunctionCall","src":"1187:16:33"},"variables":[{"name":"len","nodeType":"YulTypedName","src":"1180:3:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"1235:45:33","statements":[{"nodeType":"YulAssignment","src":"1253:13:33","value":{"name":"maxLen","nodeType":"YulIdentifier","src":"1260:6:33"},"variableNames":[{"name":"len","nodeType":"YulIdentifier","src":"1253:3:33"}]}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"1222:3:33"},{"name":"maxLen","nodeType":"YulIdentifier","src":"1227:6:33"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1219:2:33"},"nodeType":"YulFunctionCall","src":"1219:15:33"},"nodeType":"YulIf","src":"1216:64:33"},{"nodeType":"YulVariableDeclaration","src":"1293:22:33","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1310:4:33","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1304:5:33"},"nodeType":"YulFunctionCall","src":"1304:11:33"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"1297:3:33","type":""}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1335:4:33","type":"","value":"0x40"},{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"1345:3:33"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"1354:3:33"},{"kind":"number","nodeType":"YulLiteral","src":"1359:4:33","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1350:3:33"},"nodeType":"YulFunctionCall","src":"1350:14:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1341:3:33"},"nodeType":"YulFunctionCall","src":"1341:24:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1328:6:33"},"nodeType":"YulFunctionCall","src":"1328:38:33"},"nodeType":"YulExpressionStatement","src":"1328:38:33"},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"1386:3:33"},{"name":"len","nodeType":"YulIdentifier","src":"1391:3:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1379:6:33"},"nodeType":"YulFunctionCall","src":"1379:16:33"},"nodeType":"YulExpressionStatement","src":"1379:16:33"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"1427:3:33"},{"kind":"number","nodeType":"YulLiteral","src":"1432:4:33","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1423:3:33"},"nodeType":"YulFunctionCall","src":"1423:14:33"},{"kind":"number","nodeType":"YulLiteral","src":"1439:1:33","type":"","value":"0"},{"name":"len","nodeType":"YulIdentifier","src":"1442:3:33"}],"functionName":{"name":"returndatacopy","nodeType":"YulIdentifier","src":"1408:14:33"},"nodeType":"YulFunctionCall","src":"1408:38:33"},"nodeType":"YulExpressionStatement","src":"1408:38:33"},{"nodeType":"YulAssignment","src":"1459:17:33","value":{"name":"ptr","nodeType":"YulIdentifier","src":"1473:3:33"},"variableNames":[{"name":"returnData","nodeType":"YulIdentifier","src":"1459:10:33"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4758,"isOffset":false,"isSlot":false,"src":"1227:6:33","valueSize":1},{"declaration":4758,"isOffset":false,"isSlot":false,"src":"1260:6:33","valueSize":1},{"declaration":4761,"isOffset":false,"isSlot":false,"src":"1459:10:33","valueSize":1}],"id":4763,"nodeType":"InlineAssembly","src":"1153:333:33"}]},"id":4765,"implemented":true,"kind":"function","modifiers":[],"name":"getReturnData","nameLocation":"1065:13:33","nodeType":"FunctionDefinition","parameters":{"id":4759,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4758,"mutability":"mutable","name":"maxLen","nameLocation":"1087:6:33","nodeType":"VariableDeclaration","scope":4765,"src":"1079:14:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4757,"name":"uint256","nodeType":"ElementaryTypeName","src":"1079:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1078:16:33"},"returnParameters":{"id":4762,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4761,"mutability":"mutable","name":"returnData","nameLocation":"1131:10:33","nodeType":"VariableDeclaration","scope":4765,"src":"1118:23:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4760,"name":"bytes","nodeType":"ElementaryTypeName","src":"1118:5:33","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1117:25:33"},"scope":4803,"src":"1056:436:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4771,"nodeType":"Block","src":"1635:95:33","statements":[{"AST":{"nodeType":"YulBlock","src":"1654:70:33","statements":[{"expression":{"arguments":[{"arguments":[{"name":"returnData","nodeType":"YulIdentifier","src":"1679:10:33"},{"kind":"number","nodeType":"YulLiteral","src":"1691:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1675:3:33"},"nodeType":"YulFunctionCall","src":"1675:19:33"},{"arguments":[{"name":"returnData","nodeType":"YulIdentifier","src":"1702:10:33"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1696:5:33"},"nodeType":"YulFunctionCall","src":"1696:17:33"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1668:6:33"},"nodeType":"YulFunctionCall","src":"1668:46:33"},"nodeType":"YulExpressionStatement","src":"1668:46:33"}]},"evmVersion":"paris","externalReferences":[{"declaration":4767,"isOffset":false,"isSlot":false,"src":"1679:10:33","valueSize":1},{"declaration":4767,"isOffset":false,"isSlot":false,"src":"1702:10:33","valueSize":1}],"id":4770,"nodeType":"InlineAssembly","src":"1645:79:33"}]},"id":4772,"implemented":true,"kind":"function","modifiers":[],"name":"revertWithData","nameLocation":"1581:14:33","nodeType":"FunctionDefinition","parameters":{"id":4768,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4767,"mutability":"mutable","name":"returnData","nameLocation":"1609:10:33","nodeType":"VariableDeclaration","scope":4772,"src":"1596:23:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4766,"name":"bytes","nodeType":"ElementaryTypeName","src":"1596:5:33","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1595:25:33"},"returnParameters":{"id":4769,"nodeType":"ParameterList","parameters":[],"src":"1635:0:33"},"scope":4803,"src":"1572:158:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4801,"nodeType":"Block","src":"1815:142:33","statements":[{"assignments":[4782],"declarations":[{"constant":false,"id":4782,"mutability":"mutable","name":"success","nameLocation":"1830:7:33","nodeType":"VariableDeclaration","scope":4801,"src":"1825:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4781,"name":"bool","nodeType":"ElementaryTypeName","src":"1825:4:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":4790,"initialValue":{"arguments":[{"id":4784,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4774,"src":"1845:2:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":4785,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1848:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":4786,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4776,"src":"1850:4:33","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"arguments":[],"expression":{"argumentTypes":[],"id":4787,"name":"gasleft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-7,"src":"1855:7:33","typeDescriptions":{"typeIdentifier":"t_function_gasleft_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":4788,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1855:9:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4783,"name":"call","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4730,"src":"1840:4:33","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256,bytes memory,uint256) returns (bool)"}},"id":4789,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1840:25:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"1825:40:33"},{"condition":{"id":4792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1879:8:33","subExpression":{"id":4791,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4782,"src":"1880:7:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4800,"nodeType":"IfStatement","src":"1875:76:33","trueBody":{"id":4799,"nodeType":"Block","src":"1889:62:33","statements":[{"expression":{"arguments":[{"arguments":[{"id":4795,"name":"maxLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4778,"src":"1932:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4794,"name":"getReturnData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4765,"src":"1918:13:33","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"}},"id":4796,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1918:21:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4793,"name":"revertWithData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4772,"src":"1903:14:33","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":4797,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1903:37:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4798,"nodeType":"ExpressionStatement","src":"1903:37:33"}]}}]},"id":4802,"implemented":true,"kind":"function","modifiers":[],"name":"callAndRevert","nameLocation":"1745:13:33","nodeType":"FunctionDefinition","parameters":{"id":4779,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4774,"mutability":"mutable","name":"to","nameLocation":"1767:2:33","nodeType":"VariableDeclaration","scope":4802,"src":"1759:10:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4773,"name":"address","nodeType":"ElementaryTypeName","src":"1759:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4776,"mutability":"mutable","name":"data","nameLocation":"1784:4:33","nodeType":"VariableDeclaration","scope":4802,"src":"1771:17:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4775,"name":"bytes","nodeType":"ElementaryTypeName","src":"1771:5:33","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4778,"mutability":"mutable","name":"maxLen","nameLocation":"1798:6:33","nodeType":"VariableDeclaration","scope":4802,"src":"1790:14:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4777,"name":"uint256","nodeType":"ElementaryTypeName","src":"1790:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1758:47:33"},"returnParameters":{"id":4780,"nodeType":"ParameterList","parameters":[],"src":"1815:0:33"},"scope":4803,"src":"1736:221:33","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":4804,"src":"200:1759:33","usedErrors":[]}],"src":"32:1927:33"},"id":33}},"contracts":{"@openzeppelin/contracts/interfaces/IERC1967.sol":{"IERC1967":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"previousAdmin","type":"address"},{"indexed":false,"internalType":"address","name":"newAdmin","type":"address"}],"name":"AdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"beacon","type":"address"}],"name":"BeaconUpgraded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC. _Available since v4.8.3._\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":\"IERC1967\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0x3cbef5ebc24b415252e2f8c0c9254555d30d9f085603b4b80d9b5ed20ab87e90\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e8fa670c3bdce78e642cc6ae11c4cb38b133499cdce5e1990a9979d424703263\",\"dweb:/ipfs/QmVxeCUk4jL2pXQyhsoNJwyU874wRufS2WvGe8TgPKPqhE\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/draft-IERC1822.sol":{"IERC1822Proxiable":{"abi":[{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"proxiableUUID()":"52d1902d"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.\",\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":\"IERC1822Proxiable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://383fb7b8181016ac5ccf07bc9cdb7c1b5045ea36e2cc4df52bcbf20396fc7688\",\"dweb:/ipfs/QmYJ7Cg4WmE3rR8KGQxjUCXFfTH6TcwZ2Z1f6tPrq7jHFr\"]}},\"version\":1}"}},"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol":{"ERC1967Proxy":{"abi":[{"inputs":[{"internalType":"address","name":"_logic","type":"address"},{"internalType":"bytes","name":"_data","type":"bytes"}],"stateMutability":"payable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"previousAdmin","type":"address"},{"indexed":false,"internalType":"address","name":"newAdmin","type":"address"}],"name":"AdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"beacon","type":"address"}],"name":"BeaconUpgraded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"},{"stateMutability":"payable","type":"fallback"},{"stateMutability":"payable","type":"receive"}],"evm":{"bytecode":{"functionDebugData":{"@_54":{"entryPoint":null,"id":54,"parameterSlots":2,"returnSlots":0},"@_revert_1126":{"entryPoint":693,"id":1126,"parameterSlots":2,"returnSlots":0},"@_setImplementation_121":{"entryPoint":215,"id":121,"parameterSlots":1,"returnSlots":0},"@_upgradeToAndCall_166":{"entryPoint":53,"id":166,"parameterSlots":3,"returnSlots":0},"@_upgradeTo_136":{"entryPoint":107,"id":136,"parameterSlots":1,"returnSlots":0},"@functionDelegateCall_1014":{"entryPoint":171,"id":1014,"parameterSlots":2,"returnSlots":1},"@functionDelegateCall_1043":{"entryPoint":425,"id":1043,"parameterSlots":3,"returnSlots":1},"@getAddressSlot_1314":{"entryPoint":561,"id":1314,"parameterSlots":1,"returnSlots":1},"@isContract_815":{"entryPoint":546,"id":815,"parameterSlots":1,"returnSlots":1},"@verifyCallResultFromTarget_1082":{"entryPoint":564,"id":1082,"parameterSlots":4,"returnSlots":1},"abi_decode_tuple_t_addresst_bytes_memory_ptr_fromMemory":{"entryPoint":793,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":999,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1027,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":757,"id":null,"parameterSlots":3,"returnSlots":0},"panic_error_0x41":{"entryPoint":735,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:2931:34","statements":[{"nodeType":"YulBlock","src":"6:3:34","statements":[]},{"body":{"nodeType":"YulBlock","src":"46:95:34","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"63:1:34","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"70:3:34","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"75:10:34","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"66:3:34"},"nodeType":"YulFunctionCall","src":"66:20:34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"56:6:34"},"nodeType":"YulFunctionCall","src":"56:31:34"},"nodeType":"YulExpressionStatement","src":"56:31:34"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"103:1:34","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"106:4:34","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"96:6:34"},"nodeType":"YulFunctionCall","src":"96:15:34"},"nodeType":"YulExpressionStatement","src":"96:15:34"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"127:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"130:4:34","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"120:6:34"},"nodeType":"YulFunctionCall","src":"120:15:34"},"nodeType":"YulExpressionStatement","src":"120:15:34"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"14:127:34"},{"body":{"nodeType":"YulBlock","src":"212:184:34","statements":[{"nodeType":"YulVariableDeclaration","src":"222:10:34","value":{"kind":"number","nodeType":"YulLiteral","src":"231:1:34","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"226:1:34","type":""}]},{"body":{"nodeType":"YulBlock","src":"291:63:34","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"316:3:34"},{"name":"i","nodeType":"YulIdentifier","src":"321:1:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"312:3:34"},"nodeType":"YulFunctionCall","src":"312:11:34"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"335:3:34"},{"name":"i","nodeType":"YulIdentifier","src":"340:1:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"331:3:34"},"nodeType":"YulFunctionCall","src":"331:11:34"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"325:5:34"},"nodeType":"YulFunctionCall","src":"325:18:34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"305:6:34"},"nodeType":"YulFunctionCall","src":"305:39:34"},"nodeType":"YulExpressionStatement","src":"305:39:34"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"252:1:34"},{"name":"length","nodeType":"YulIdentifier","src":"255:6:34"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"249:2:34"},"nodeType":"YulFunctionCall","src":"249:13:34"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"263:19:34","statements":[{"nodeType":"YulAssignment","src":"265:15:34","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"274:1:34"},{"kind":"number","nodeType":"YulLiteral","src":"277:2:34","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"270:3:34"},"nodeType":"YulFunctionCall","src":"270:10:34"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"265:1:34"}]}]},"pre":{"nodeType":"YulBlock","src":"245:3:34","statements":[]},"src":"241:113:34"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"374:3:34"},{"name":"length","nodeType":"YulIdentifier","src":"379:6:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"370:3:34"},"nodeType":"YulFunctionCall","src":"370:16:34"},{"kind":"number","nodeType":"YulLiteral","src":"388:1:34","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"363:6:34"},"nodeType":"YulFunctionCall","src":"363:27:34"},"nodeType":"YulExpressionStatement","src":"363:27:34"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"190:3:34","type":""},{"name":"dst","nodeType":"YulTypedName","src":"195:3:34","type":""},{"name":"length","nodeType":"YulTypedName","src":"200:6:34","type":""}],"src":"146:250:34"},{"body":{"nodeType":"YulBlock","src":"508:956:34","statements":[{"body":{"nodeType":"YulBlock","src":"554:16:34","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"563:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"566:1:34","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"556:6:34"},"nodeType":"YulFunctionCall","src":"556:12:34"},"nodeType":"YulExpressionStatement","src":"556:12:34"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"529:7:34"},{"name":"headStart","nodeType":"YulIdentifier","src":"538:9:34"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"525:3:34"},"nodeType":"YulFunctionCall","src":"525:23:34"},{"kind":"number","nodeType":"YulLiteral","src":"550:2:34","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"521:3:34"},"nodeType":"YulFunctionCall","src":"521:32:34"},"nodeType":"YulIf","src":"518:52:34"},{"nodeType":"YulVariableDeclaration","src":"579:29:34","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"598:9:34"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"592:5:34"},"nodeType":"YulFunctionCall","src":"592:16:34"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"583:5:34","type":""}]},{"body":{"nodeType":"YulBlock","src":"671:16:34","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"680:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"683:1:34","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"673:6:34"},"nodeType":"YulFunctionCall","src":"673:12:34"},"nodeType":"YulExpressionStatement","src":"673:12:34"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"630:5:34"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"641:5:34"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"656:3:34","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"661:1:34","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"652:3:34"},"nodeType":"YulFunctionCall","src":"652:11:34"},{"kind":"number","nodeType":"YulLiteral","src":"665:1:34","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"648:3:34"},"nodeType":"YulFunctionCall","src":"648:19:34"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"637:3:34"},"nodeType":"YulFunctionCall","src":"637:31:34"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"627:2:34"},"nodeType":"YulFunctionCall","src":"627:42:34"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"620:6:34"},"nodeType":"YulFunctionCall","src":"620:50:34"},"nodeType":"YulIf","src":"617:70:34"},{"nodeType":"YulAssignment","src":"696:15:34","value":{"name":"value","nodeType":"YulIdentifier","src":"706:5:34"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"696:6:34"}]},{"nodeType":"YulVariableDeclaration","src":"720:39:34","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"744:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"755:2:34","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"740:3:34"},"nodeType":"YulFunctionCall","src":"740:18:34"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"734:5:34"},"nodeType":"YulFunctionCall","src":"734:25:34"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"724:6:34","type":""}]},{"nodeType":"YulVariableDeclaration","src":"768:28:34","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"786:2:34","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"790:1:34","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"782:3:34"},"nodeType":"YulFunctionCall","src":"782:10:34"},{"kind":"number","nodeType":"YulLiteral","src":"794:1:34","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"778:3:34"},"nodeType":"YulFunctionCall","src":"778:18:34"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"772:2:34","type":""}]},{"body":{"nodeType":"YulBlock","src":"823:16:34","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"832:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"835:1:34","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"825:6:34"},"nodeType":"YulFunctionCall","src":"825:12:34"},"nodeType":"YulExpressionStatement","src":"825:12:34"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"811:6:34"},{"name":"_1","nodeType":"YulIdentifier","src":"819:2:34"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"808:2:34"},"nodeType":"YulFunctionCall","src":"808:14:34"},"nodeType":"YulIf","src":"805:34:34"},{"nodeType":"YulVariableDeclaration","src":"848:32:34","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"862:9:34"},{"name":"offset","nodeType":"YulIdentifier","src":"873:6:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"858:3:34"},"nodeType":"YulFunctionCall","src":"858:22:34"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"852:2:34","type":""}]},{"body":{"nodeType":"YulBlock","src":"928:16:34","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"937:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"940:1:34","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"930:6:34"},"nodeType":"YulFunctionCall","src":"930:12:34"},"nodeType":"YulExpressionStatement","src":"930:12:34"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"907:2:34"},{"kind":"number","nodeType":"YulLiteral","src":"911:4:34","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"903:3:34"},"nodeType":"YulFunctionCall","src":"903:13:34"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"918:7:34"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"899:3:34"},"nodeType":"YulFunctionCall","src":"899:27:34"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"892:6:34"},"nodeType":"YulFunctionCall","src":"892:35:34"},"nodeType":"YulIf","src":"889:55:34"},{"nodeType":"YulVariableDeclaration","src":"953:19:34","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"969:2:34"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"963:5:34"},"nodeType":"YulFunctionCall","src":"963:9:34"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"957:2:34","type":""}]},{"body":{"nodeType":"YulBlock","src":"995:22:34","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"997:16:34"},"nodeType":"YulFunctionCall","src":"997:18:34"},"nodeType":"YulExpressionStatement","src":"997:18:34"}]},"condition":{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"987:2:34"},{"name":"_1","nodeType":"YulIdentifier","src":"991:2:34"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"984:2:34"},"nodeType":"YulFunctionCall","src":"984:10:34"},"nodeType":"YulIf","src":"981:36:34"},{"nodeType":"YulVariableDeclaration","src":"1026:17:34","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1040:2:34","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1036:3:34"},"nodeType":"YulFunctionCall","src":"1036:7:34"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"1030:2:34","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1052:23:34","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1072:2:34","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1066:5:34"},"nodeType":"YulFunctionCall","src":"1066:9:34"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1056:6:34","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1084:71:34","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1106:6:34"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"1130:2:34"},{"kind":"number","nodeType":"YulLiteral","src":"1134:4:34","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1126:3:34"},"nodeType":"YulFunctionCall","src":"1126:13:34"},{"name":"_4","nodeType":"YulIdentifier","src":"1141:2:34"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1122:3:34"},"nodeType":"YulFunctionCall","src":"1122:22:34"},{"kind":"number","nodeType":"YulLiteral","src":"1146:2:34","type":"","value":"63"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1118:3:34"},"nodeType":"YulFunctionCall","src":"1118:31:34"},{"name":"_4","nodeType":"YulIdentifier","src":"1151:2:34"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1114:3:34"},"nodeType":"YulFunctionCall","src":"1114:40:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1102:3:34"},"nodeType":"YulFunctionCall","src":"1102:53:34"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"1088:10:34","type":""}]},{"body":{"nodeType":"YulBlock","src":"1214:22:34","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1216:16:34"},"nodeType":"YulFunctionCall","src":"1216:18:34"},"nodeType":"YulExpressionStatement","src":"1216:18:34"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1173:10:34"},{"name":"_1","nodeType":"YulIdentifier","src":"1185:2:34"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1170:2:34"},"nodeType":"YulFunctionCall","src":"1170:18:34"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1193:10:34"},{"name":"memPtr","nodeType":"YulIdentifier","src":"1205:6:34"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1190:2:34"},"nodeType":"YulFunctionCall","src":"1190:22:34"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1167:2:34"},"nodeType":"YulFunctionCall","src":"1167:46:34"},"nodeType":"YulIf","src":"1164:72:34"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1252:2:34","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1256:10:34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1245:6:34"},"nodeType":"YulFunctionCall","src":"1245:22:34"},"nodeType":"YulExpressionStatement","src":"1245:22:34"},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1283:6:34"},{"name":"_3","nodeType":"YulIdentifier","src":"1291:2:34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1276:6:34"},"nodeType":"YulFunctionCall","src":"1276:18:34"},"nodeType":"YulExpressionStatement","src":"1276:18:34"},{"body":{"nodeType":"YulBlock","src":"1340:16:34","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1349:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1352:1:34","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1342:6:34"},"nodeType":"YulFunctionCall","src":"1342:12:34"},"nodeType":"YulExpressionStatement","src":"1342:12:34"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"1317:2:34"},{"name":"_3","nodeType":"YulIdentifier","src":"1321:2:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1313:3:34"},"nodeType":"YulFunctionCall","src":"1313:11:34"},{"kind":"number","nodeType":"YulLiteral","src":"1326:2:34","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1309:3:34"},"nodeType":"YulFunctionCall","src":"1309:20:34"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1331:7:34"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1306:2:34"},"nodeType":"YulFunctionCall","src":"1306:33:34"},"nodeType":"YulIf","src":"1303:53:34"},{"expression":{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"1404:2:34"},{"kind":"number","nodeType":"YulLiteral","src":"1408:2:34","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1400:3:34"},"nodeType":"YulFunctionCall","src":"1400:11:34"},{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1417:6:34"},{"kind":"number","nodeType":"YulLiteral","src":"1425:2:34","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1413:3:34"},"nodeType":"YulFunctionCall","src":"1413:15:34"},{"name":"_3","nodeType":"YulIdentifier","src":"1430:2:34"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"1365:34:34"},"nodeType":"YulFunctionCall","src":"1365:68:34"},"nodeType":"YulExpressionStatement","src":"1365:68:34"},{"nodeType":"YulAssignment","src":"1442:16:34","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"1452:6:34"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1442:6:34"}]}]},"name":"abi_decode_tuple_t_addresst_bytes_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"466:9:34","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"477:7:34","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"489:6:34","type":""},{"name":"value1","nodeType":"YulTypedName","src":"497:6:34","type":""}],"src":"401:1063:34"},{"body":{"nodeType":"YulBlock","src":"1643:235:34","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1660:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"1671:2:34","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1653:6:34"},"nodeType":"YulFunctionCall","src":"1653:21:34"},"nodeType":"YulExpressionStatement","src":"1653:21:34"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1694:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"1705:2:34","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1690:3:34"},"nodeType":"YulFunctionCall","src":"1690:18:34"},{"kind":"number","nodeType":"YulLiteral","src":"1710:2:34","type":"","value":"45"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1683:6:34"},"nodeType":"YulFunctionCall","src":"1683:30:34"},"nodeType":"YulExpressionStatement","src":"1683:30:34"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1733:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"1744:2:34","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1729:3:34"},"nodeType":"YulFunctionCall","src":"1729:18:34"},{"hexValue":"455243313936373a206e657720696d706c656d656e746174696f6e206973206e","kind":"string","nodeType":"YulLiteral","src":"1749:34:34","type":"","value":"ERC1967: new implementation is n"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1722:6:34"},"nodeType":"YulFunctionCall","src":"1722:62:34"},"nodeType":"YulExpressionStatement","src":"1722:62:34"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1804:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"1815:2:34","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1800:3:34"},"nodeType":"YulFunctionCall","src":"1800:18:34"},{"hexValue":"6f74206120636f6e7472616374","kind":"string","nodeType":"YulLiteral","src":"1820:15:34","type":"","value":"ot a contract"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1793:6:34"},"nodeType":"YulFunctionCall","src":"1793:43:34"},"nodeType":"YulExpressionStatement","src":"1793:43:34"},{"nodeType":"YulAssignment","src":"1845:27:34","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1857:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"1868:3:34","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1853:3:34"},"nodeType":"YulFunctionCall","src":"1853:19:34"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1845:4:34"}]}]},"name":"abi_encode_tuple_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1620:9:34","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1634:4:34","type":""}],"src":"1469:409:34"},{"body":{"nodeType":"YulBlock","src":"2020:150:34","statements":[{"nodeType":"YulVariableDeclaration","src":"2030:27:34","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2050:6:34"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2044:5:34"},"nodeType":"YulFunctionCall","src":"2044:13:34"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2034:6:34","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2105:6:34"},{"kind":"number","nodeType":"YulLiteral","src":"2113:4:34","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2101:3:34"},"nodeType":"YulFunctionCall","src":"2101:17:34"},{"name":"pos","nodeType":"YulIdentifier","src":"2120:3:34"},{"name":"length","nodeType":"YulIdentifier","src":"2125:6:34"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"2066:34:34"},"nodeType":"YulFunctionCall","src":"2066:66:34"},"nodeType":"YulExpressionStatement","src":"2066:66:34"},{"nodeType":"YulAssignment","src":"2141:23:34","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2152:3:34"},{"name":"length","nodeType":"YulIdentifier","src":"2157:6:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2148:3:34"},"nodeType":"YulFunctionCall","src":"2148:16:34"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"2141:3:34"}]}]},"name":"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"1996:3:34","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2001:6:34","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2012:3:34","type":""}],"src":"1883:287:34"},{"body":{"nodeType":"YulBlock","src":"2349:179:34","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2366:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"2377:2:34","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2359:6:34"},"nodeType":"YulFunctionCall","src":"2359:21:34"},"nodeType":"YulExpressionStatement","src":"2359:21:34"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2400:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"2411:2:34","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2396:3:34"},"nodeType":"YulFunctionCall","src":"2396:18:34"},{"kind":"number","nodeType":"YulLiteral","src":"2416:2:34","type":"","value":"29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2389:6:34"},"nodeType":"YulFunctionCall","src":"2389:30:34"},"nodeType":"YulExpressionStatement","src":"2389:30:34"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2439:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"2450:2:34","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2435:3:34"},"nodeType":"YulFunctionCall","src":"2435:18:34"},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","kind":"string","nodeType":"YulLiteral","src":"2455:31:34","type":"","value":"Address: call to non-contract"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2428:6:34"},"nodeType":"YulFunctionCall","src":"2428:59:34"},"nodeType":"YulExpressionStatement","src":"2428:59:34"},{"nodeType":"YulAssignment","src":"2496:26:34","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2508:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"2519:2:34","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2504:3:34"},"nodeType":"YulFunctionCall","src":"2504:18:34"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2496:4:34"}]}]},"name":"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2326:9:34","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2340:4:34","type":""}],"src":"2175:353:34"},{"body":{"nodeType":"YulBlock","src":"2654:275:34","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2671:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"2682:2:34","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2664:6:34"},"nodeType":"YulFunctionCall","src":"2664:21:34"},"nodeType":"YulExpressionStatement","src":"2664:21:34"},{"nodeType":"YulVariableDeclaration","src":"2694:27:34","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2714:6:34"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2708:5:34"},"nodeType":"YulFunctionCall","src":"2708:13:34"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2698:6:34","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2741:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"2752:2:34","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2737:3:34"},"nodeType":"YulFunctionCall","src":"2737:18:34"},{"name":"length","nodeType":"YulIdentifier","src":"2757:6:34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2730:6:34"},"nodeType":"YulFunctionCall","src":"2730:34:34"},"nodeType":"YulExpressionStatement","src":"2730:34:34"},{"expression":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2812:6:34"},{"kind":"number","nodeType":"YulLiteral","src":"2820:2:34","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2808:3:34"},"nodeType":"YulFunctionCall","src":"2808:15:34"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2829:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"2840:2:34","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2825:3:34"},"nodeType":"YulFunctionCall","src":"2825:18:34"},{"name":"length","nodeType":"YulIdentifier","src":"2845:6:34"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"2773:34:34"},"nodeType":"YulFunctionCall","src":"2773:79:34"},"nodeType":"YulExpressionStatement","src":"2773:79:34"},{"nodeType":"YulAssignment","src":"2861:62:34","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2877:9:34"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2896:6:34"},{"kind":"number","nodeType":"YulLiteral","src":"2904:2:34","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2892:3:34"},"nodeType":"YulFunctionCall","src":"2892:15:34"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2913:2:34","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2909:3:34"},"nodeType":"YulFunctionCall","src":"2909:7:34"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2888:3:34"},"nodeType":"YulFunctionCall","src":"2888:29:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2873:3:34"},"nodeType":"YulFunctionCall","src":"2873:45:34"},{"kind":"number","nodeType":"YulLiteral","src":"2920:2:34","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2869:3:34"},"nodeType":"YulFunctionCall","src":"2869:54:34"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2861:4:34"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2623:9:34","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2634:6:34","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2645:4:34","type":""}],"src":"2533:396:34"}]},"contents":"{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_decode_tuple_t_addresst_bytes_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n        let offset := mload(add(headStart, 32))\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := mload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        copy_memory_to_memory_with_cleanup(add(_2, 32), add(memPtr, 32), _3)\n        value1 := memPtr\n    }\n    function abi_encode_tuple_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 45)\n        mstore(add(headStart, 64), \"ERC1967: new implementation is n\")\n        mstore(add(headStart, 96), \"ot a contract\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Address: call to non-contract\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory_with_cleanup(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n}","id":34,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040526040516107ad3803806107ad83398101604081905261002291610319565b61002e82826000610035565b5050610436565b61003e8361006b565b60008251118061004b5750805b156100665761006483836100ab60201b6100291760201c565b505b505050565b610074816100d7565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606100d08383604051806060016040528060278152602001610786602791396101a9565b9392505050565b6100ea8161022260201b6100551760201c565b6101515760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b60648201526084015b60405180910390fd5b806101887f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b61023160201b6100711760201c565b80546001600160a01b0319166001600160a01b039290921691909117905550565b6060600080856001600160a01b0316856040516101c691906103e7565b600060405180830381855af49150503d8060008114610201576040519150601f19603f3d011682016040523d82523d6000602084013e610206565b606091505b50909250905061021886838387610234565b9695505050505050565b6001600160a01b03163b151590565b90565b606083156102a357825160000361029c576001600160a01b0385163b61029c5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610148565b50816102ad565b6102ad83836102b5565b949350505050565b8151156102c55781518083602001fd5b8060405162461bcd60e51b81526004016101489190610403565b634e487b7160e01b600052604160045260246000fd5b60005b838110156103105781810151838201526020016102f8565b50506000910152565b6000806040838503121561032c57600080fd5b82516001600160a01b038116811461034357600080fd5b60208401519092506001600160401b038082111561036057600080fd5b818501915085601f83011261037457600080fd5b815181811115610386576103866102df565b604051601f8201601f19908116603f011681019083821181831017156103ae576103ae6102df565b816040528281528860208487010111156103c757600080fd5b6103d88360208301602088016102f5565b80955050505050509250929050565b600082516103f98184602087016102f5565b9190910192915050565b60208152600082518060208401526104228160408501602087016102f5565b601f01601f19169190910160400192915050565b610341806104456000396000f3fe60806040523661001357610011610017565b005b6100115b610027610022610074565b6100b9565b565b606061004e83836040518060600160405280602781526020016102e5602791396100dd565b9392505050565b73ffffffffffffffffffffffffffffffffffffffff163b151590565b90565b60006100b47f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5473ffffffffffffffffffffffffffffffffffffffff1690565b905090565b3660008037600080366000845af43d6000803e8080156100d8573d6000f35b3d6000fd5b60606000808573ffffffffffffffffffffffffffffffffffffffff16856040516101079190610277565b600060405180830381855af49150503d8060008114610142576040519150601f19603f3d011682016040523d82523d6000602084013e610147565b606091505b509150915061015886838387610162565b9695505050505050565b606083156101fd5782516000036101f65773ffffffffffffffffffffffffffffffffffffffff85163b6101f6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064015b60405180910390fd5b5081610207565b610207838361020f565b949350505050565b81511561021f5781518083602001fd5b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101ed9190610293565b60005b8381101561026e578181015183820152602001610256565b50506000910152565b60008251610289818460208701610253565b9190910192915050565b60208152600082518060208401526102b2816040850160208701610253565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016919091016040019291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220b6d490c7b0f7d19828a449ea9a4cecbee2e462a603d4de127808117591d9f02564736f6c63430008120033416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x7AD CODESIZE SUB DUP1 PUSH2 0x7AD DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x22 SWAP2 PUSH2 0x319 JUMP JUMPDEST PUSH2 0x2E DUP3 DUP3 PUSH1 0x0 PUSH2 0x35 JUMP JUMPDEST POP POP PUSH2 0x436 JUMP JUMPDEST PUSH2 0x3E DUP4 PUSH2 0x6B JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT DUP1 PUSH2 0x4B JUMPI POP DUP1 JUMPDEST ISZERO PUSH2 0x66 JUMPI PUSH2 0x64 DUP4 DUP4 PUSH2 0xAB PUSH1 0x20 SHL PUSH2 0x29 OR PUSH1 0x20 SHR JUMP JUMPDEST POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x74 DUP2 PUSH2 0xD7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xD0 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x786 PUSH1 0x27 SWAP2 CODECOPY PUSH2 0x1A9 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xEA DUP2 PUSH2 0x222 PUSH1 0x20 SHL PUSH2 0x55 OR PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x151 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720696D706C656D656E746174696F6E206973206E PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x1BDD08184818DBDB9D1C9858DD PUSH1 0x9A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH2 0x188 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL PUSH2 0x231 PUSH1 0x20 SHL PUSH2 0x71 OR PUSH1 0x20 SHR JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x40 MLOAD PUSH2 0x1C6 SWAP2 SWAP1 PUSH2 0x3E7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x201 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x206 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x218 DUP7 DUP4 DUP4 DUP8 PUSH2 0x234 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x2A3 JUMPI DUP3 MLOAD PUSH1 0x0 SUB PUSH2 0x29C JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH2 0x29C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x148 JUMP JUMPDEST POP DUP2 PUSH2 0x2AD JUMP JUMPDEST PUSH2 0x2AD DUP4 DUP4 PUSH2 0x2B5 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP2 MLOAD ISZERO PUSH2 0x2C5 JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x148 SWAP2 SWAP1 PUSH2 0x403 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x310 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2F8 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x32C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x343 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP5 ADD MLOAD SWAP1 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x360 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x374 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x386 JUMPI PUSH2 0x386 PUSH2 0x2DF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x3AE JUMPI PUSH2 0x3AE PUSH2 0x2DF JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP9 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x3C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3D8 DUP4 PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x2F5 JUMP JUMPDEST DUP1 SWAP6 POP POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x3F9 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x2F5 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x422 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x2F5 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x341 DUP1 PUSH2 0x445 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLDATASIZE PUSH2 0x13 JUMPI PUSH2 0x11 PUSH2 0x17 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x11 JUMPDEST PUSH2 0x27 PUSH2 0x22 PUSH2 0x74 JUMP JUMPDEST PUSH2 0xB9 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH2 0x4E DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2E5 PUSH1 0x27 SWAP2 CODECOPY PUSH2 0xDD JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB4 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST CALLDATASIZE PUSH1 0x0 DUP1 CALLDATACOPY PUSH1 0x0 DUP1 CALLDATASIZE PUSH1 0x0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY DUP1 DUP1 ISZERO PUSH2 0xD8 JUMPI RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH1 0x40 MLOAD PUSH2 0x107 SWAP2 SWAP1 PUSH2 0x277 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x142 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x147 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x158 DUP7 DUP4 DUP4 DUP8 PUSH2 0x162 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x1FD JUMPI DUP3 MLOAD PUSH1 0x0 SUB PUSH2 0x1F6 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND EXTCODESIZE PUSH2 0x1F6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP DUP2 PUSH2 0x207 JUMP JUMPDEST PUSH2 0x207 DUP4 DUP4 PUSH2 0x20F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP2 MLOAD ISZERO PUSH2 0x21F JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1ED SWAP2 SWAP1 PUSH2 0x293 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x26E JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x256 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x289 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x253 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x2B2 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x253 JUMP JUMPDEST PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP INVALID COINBASE PUSH5 0x6472657373 GASPRICE KECCAK256 PUSH13 0x6F772D6C6576656C2064656C65 PUSH8 0x6174652063616C6C KECCAK256 PUSH7 0x61696C6564A264 PUSH10 0x70667358221220B6D490 0xC7 0xB0 0xF7 0xD1 SWAP9 0x28 LOG4 0x49 0xEA SWAP11 0x4C 0xEC 0xBE 0xE2 0xE4 PUSH3 0xA603D4 0xDE SLT PUSH25 0x8117591D9F02564736F6C6343000812003341646472657373 GASPRICE KECCAK256 PUSH13 0x6F772D6C6576656C2064656C65 PUSH8 0x6174652063616C6C KECCAK256 PUSH7 0x61696C65640000 ","sourceMap":"567:723:2:-:0;;;958:112;;;;;;;;;;;;;;;;;;:::i;:::-;1024:39;1042:6;1050:5;1057;1024:17;:39::i;:::-;958:112;;567:723;;2057:265:3;2165:29;2176:17;2165:10;:29::i;:::-;2222:1;2208:4;:11;:15;:28;;;;2227:9;2208:28;2204:112;;;2252:53;2281:17;2300:4;2252:28;;;;;:53;;:::i;:::-;;2204:112;2057:265;;;:::o;1771:152::-;1837:37;1856:17;1837:18;:37::i;:::-;1889:27;;-1:-1:-1;;;;;1889:27:3;;;;;;;;1771:152;:::o;6674:198:11:-;6757:12;6788:77;6809:6;6817:4;6788:77;;;;;;;;;;;;;;;;;:20;:77::i;:::-;6781:84;6674:198;-1:-1:-1;;;6674:198:11:o;1406:259:3:-;1487:37;1506:17;1487:18;;;;;:37;;:::i;:::-;1479:95;;;;-1:-1:-1;;;1479:95:3;;1671:2:34;1479:95:3;;;1653:21:34;1710:2;1690:18;;;1683:30;1749:34;1729:18;;;1722:62;-1:-1:-1;;;1800:18:34;;;1793:43;1853:19;;1479:95:3;;;;;;;;;1641:17;1584:48;1030:66;1611:20;;1584:26;;;;;:48;;:::i;:::-;:74;;-1:-1:-1;;;;;;1584:74:3;-1:-1:-1;;;;;1584:74:3;;;;;;;;;;-1:-1:-1;1406:259:3:o;7058:325:11:-;7199:12;7224;7238:23;7265:6;-1:-1:-1;;;;;7265:19:11;7285:4;7265:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7223:67:11;;-1:-1:-1;7223:67:11;-1:-1:-1;7307:69:11;7334:6;7223:67;;7363:12;7307:26;:69::i;:::-;7300:76;7058:325;-1:-1:-1;;;;;;7058:325:11:o;1412:320::-;-1:-1:-1;;;;;1702:19:11;;:23;;;1412:320::o;1859:190:14:-;2029:4;1859:190::o;7671:628:11:-;7851:12;7879:7;7875:418;;;7906:10;:17;7927:1;7906:22;7902:286;;-1:-1:-1;;;;;1702:19:11;;;8113:60;;;;-1:-1:-1;;;8113:60:11;;2377:2:34;8113:60:11;;;2359:21:34;2416:2;2396:18;;;2389:30;2455:31;2435:18;;;2428:59;2504:18;;8113:60:11;2175:353:34;8113:60:11;-1:-1:-1;8208:10:11;8201:17;;7875:418;8249:33;8257:10;8269:12;8249:7;:33::i;:::-;7671:628;;;;;;:::o;8821:540::-;8980:17;;:21;8976:379;;9208:10;9202:17;9264:15;9251:10;9247:2;9243:19;9236:44;8976:379;9331:12;9324:20;;-1:-1:-1;;;9324:20:11;;;;;;;;:::i;14:127:34:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:250;231:1;241:113;255:6;252:1;249:13;241:113;;;331:11;;;325:18;312:11;;;305:39;277:2;270:10;241:113;;;-1:-1:-1;;388:1:34;370:16;;363:27;146:250::o;401:1063::-;489:6;497;550:2;538:9;529:7;525:23;521:32;518:52;;;566:1;563;556:12;518:52;592:16;;-1:-1:-1;;;;;637:31:34;;627:42;;617:70;;683:1;680;673:12;617:70;755:2;740:18;;734:25;706:5;;-1:-1:-1;;;;;;808:14:34;;;805:34;;;835:1;832;825:12;805:34;873:6;862:9;858:22;848:32;;918:7;911:4;907:2;903:13;899:27;889:55;;940:1;937;930:12;889:55;969:2;963:9;991:2;987;984:10;981:36;;;997:18;;:::i;:::-;1072:2;1066:9;1040:2;1126:13;;-1:-1:-1;;1122:22:34;;;1146:2;1118:31;1114:40;1102:53;;;1170:18;;;1190:22;;;1167:46;1164:72;;;1216:18;;:::i;:::-;1256:10;1252:2;1245:22;1291:2;1283:6;1276:18;1331:7;1326:2;1321;1317;1313:11;1309:20;1306:33;1303:53;;;1352:1;1349;1342:12;1303:53;1365:68;1430:2;1425;1417:6;1413:15;1408:2;1404;1400:11;1365:68;:::i;:::-;1452:6;1442:16;;;;;;;401:1063;;;;;:::o;1883:287::-;2012:3;2050:6;2044:13;2066:66;2125:6;2120:3;2113:4;2105:6;2101:17;2066:66;:::i;:::-;2148:16;;;;;1883:287;-1:-1:-1;;1883:287:34:o;2533:396::-;2682:2;2671:9;2664:21;2645:4;2714:6;2708:13;2757:6;2752:2;2741:9;2737:18;2730:34;2773:79;2845:6;2840:2;2829:9;2825:18;2820:2;2812:6;2808:15;2773:79;:::i;:::-;2913:2;2892:15;-1:-1:-1;;2888:29:34;2873:45;;;;2920:2;2869:54;;2533:396;-1:-1:-1;;2533:396:34:o;:::-;567:723:2;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_409":{"entryPoint":null,"id":409,"parameterSlots":0,"returnSlots":0},"@_417":{"entryPoint":null,"id":417,"parameterSlots":0,"returnSlots":0},"@_beforeFallback_422":{"entryPoint":null,"id":422,"parameterSlots":0,"returnSlots":0},"@_delegate_382":{"entryPoint":185,"id":382,"parameterSlots":1,"returnSlots":0},"@_fallback_401":{"entryPoint":23,"id":401,"parameterSlots":0,"returnSlots":0},"@_getImplementation_97":{"entryPoint":null,"id":97,"parameterSlots":0,"returnSlots":1},"@_implementation_66":{"entryPoint":116,"id":66,"parameterSlots":0,"returnSlots":1},"@_revert_1126":{"entryPoint":527,"id":1126,"parameterSlots":2,"returnSlots":0},"@functionDelegateCall_1014":{"entryPoint":41,"id":1014,"parameterSlots":2,"returnSlots":1},"@functionDelegateCall_1043":{"entryPoint":221,"id":1043,"parameterSlots":3,"returnSlots":1},"@getAddressSlot_1314":{"entryPoint":113,"id":1314,"parameterSlots":1,"returnSlots":1},"@isContract_815":{"entryPoint":85,"id":815,"parameterSlots":1,"returnSlots":1},"@verifyCallResultFromTarget_1082":{"entryPoint":354,"id":1082,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":631,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":659,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":595,"id":null,"parameterSlots":3,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:1376:34","statements":[{"nodeType":"YulBlock","src":"6:3:34","statements":[]},{"body":{"nodeType":"YulBlock","src":"80:184:34","statements":[{"nodeType":"YulVariableDeclaration","src":"90:10:34","value":{"kind":"number","nodeType":"YulLiteral","src":"99:1:34","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"94:1:34","type":""}]},{"body":{"nodeType":"YulBlock","src":"159:63:34","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"184:3:34"},{"name":"i","nodeType":"YulIdentifier","src":"189:1:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"180:3:34"},"nodeType":"YulFunctionCall","src":"180:11:34"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"203:3:34"},{"name":"i","nodeType":"YulIdentifier","src":"208:1:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"199:3:34"},"nodeType":"YulFunctionCall","src":"199:11:34"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"193:5:34"},"nodeType":"YulFunctionCall","src":"193:18:34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"173:6:34"},"nodeType":"YulFunctionCall","src":"173:39:34"},"nodeType":"YulExpressionStatement","src":"173:39:34"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"120:1:34"},{"name":"length","nodeType":"YulIdentifier","src":"123:6:34"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"117:2:34"},"nodeType":"YulFunctionCall","src":"117:13:34"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"131:19:34","statements":[{"nodeType":"YulAssignment","src":"133:15:34","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"142:1:34"},{"kind":"number","nodeType":"YulLiteral","src":"145:2:34","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"138:3:34"},"nodeType":"YulFunctionCall","src":"138:10:34"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"133:1:34"}]}]},"pre":{"nodeType":"YulBlock","src":"113:3:34","statements":[]},"src":"109:113:34"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"242:3:34"},{"name":"length","nodeType":"YulIdentifier","src":"247:6:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"238:3:34"},"nodeType":"YulFunctionCall","src":"238:16:34"},{"kind":"number","nodeType":"YulLiteral","src":"256:1:34","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"231:6:34"},"nodeType":"YulFunctionCall","src":"231:27:34"},"nodeType":"YulExpressionStatement","src":"231:27:34"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"58:3:34","type":""},{"name":"dst","nodeType":"YulTypedName","src":"63:3:34","type":""},{"name":"length","nodeType":"YulTypedName","src":"68:6:34","type":""}],"src":"14:250:34"},{"body":{"nodeType":"YulBlock","src":"406:150:34","statements":[{"nodeType":"YulVariableDeclaration","src":"416:27:34","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"436:6:34"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"430:5:34"},"nodeType":"YulFunctionCall","src":"430:13:34"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"420:6:34","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"491:6:34"},{"kind":"number","nodeType":"YulLiteral","src":"499:4:34","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"487:3:34"},"nodeType":"YulFunctionCall","src":"487:17:34"},{"name":"pos","nodeType":"YulIdentifier","src":"506:3:34"},{"name":"length","nodeType":"YulIdentifier","src":"511:6:34"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"452:34:34"},"nodeType":"YulFunctionCall","src":"452:66:34"},"nodeType":"YulExpressionStatement","src":"452:66:34"},{"nodeType":"YulAssignment","src":"527:23:34","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"538:3:34"},{"name":"length","nodeType":"YulIdentifier","src":"543:6:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"534:3:34"},"nodeType":"YulFunctionCall","src":"534:16:34"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"527:3:34"}]}]},"name":"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"382:3:34","type":""},{"name":"value0","nodeType":"YulTypedName","src":"387:6:34","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"398:3:34","type":""}],"src":"269:287:34"},{"body":{"nodeType":"YulBlock","src":"735:179:34","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"752:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"763:2:34","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"745:6:34"},"nodeType":"YulFunctionCall","src":"745:21:34"},"nodeType":"YulExpressionStatement","src":"745:21:34"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"786:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"797:2:34","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"782:3:34"},"nodeType":"YulFunctionCall","src":"782:18:34"},{"kind":"number","nodeType":"YulLiteral","src":"802:2:34","type":"","value":"29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"775:6:34"},"nodeType":"YulFunctionCall","src":"775:30:34"},"nodeType":"YulExpressionStatement","src":"775:30:34"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"825:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"836:2:34","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"821:3:34"},"nodeType":"YulFunctionCall","src":"821:18:34"},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","kind":"string","nodeType":"YulLiteral","src":"841:31:34","type":"","value":"Address: call to non-contract"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"814:6:34"},"nodeType":"YulFunctionCall","src":"814:59:34"},"nodeType":"YulExpressionStatement","src":"814:59:34"},{"nodeType":"YulAssignment","src":"882:26:34","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"894:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"905:2:34","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"890:3:34"},"nodeType":"YulFunctionCall","src":"890:18:34"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"882:4:34"}]}]},"name":"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"712:9:34","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"726:4:34","type":""}],"src":"561:353:34"},{"body":{"nodeType":"YulBlock","src":"1040:334:34","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1057:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"1068:2:34","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1050:6:34"},"nodeType":"YulFunctionCall","src":"1050:21:34"},"nodeType":"YulExpressionStatement","src":"1050:21:34"},{"nodeType":"YulVariableDeclaration","src":"1080:27:34","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1100:6:34"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1094:5:34"},"nodeType":"YulFunctionCall","src":"1094:13:34"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"1084:6:34","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1127:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"1138:2:34","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1123:3:34"},"nodeType":"YulFunctionCall","src":"1123:18:34"},{"name":"length","nodeType":"YulIdentifier","src":"1143:6:34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1116:6:34"},"nodeType":"YulFunctionCall","src":"1116:34:34"},"nodeType":"YulExpressionStatement","src":"1116:34:34"},{"expression":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1198:6:34"},{"kind":"number","nodeType":"YulLiteral","src":"1206:2:34","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1194:3:34"},"nodeType":"YulFunctionCall","src":"1194:15:34"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1215:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"1226:2:34","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1211:3:34"},"nodeType":"YulFunctionCall","src":"1211:18:34"},{"name":"length","nodeType":"YulIdentifier","src":"1231:6:34"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"1159:34:34"},"nodeType":"YulFunctionCall","src":"1159:79:34"},"nodeType":"YulExpressionStatement","src":"1159:79:34"},{"nodeType":"YulAssignment","src":"1247:121:34","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1263:9:34"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1282:6:34"},{"kind":"number","nodeType":"YulLiteral","src":"1290:2:34","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1278:3:34"},"nodeType":"YulFunctionCall","src":"1278:15:34"},{"kind":"number","nodeType":"YulLiteral","src":"1295:66:34","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1274:3:34"},"nodeType":"YulFunctionCall","src":"1274:88:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1259:3:34"},"nodeType":"YulFunctionCall","src":"1259:104:34"},{"kind":"number","nodeType":"YulLiteral","src":"1365:2:34","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1255:3:34"},"nodeType":"YulFunctionCall","src":"1255:113:34"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1247:4:34"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1009:9:34","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1020:6:34","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1031:4:34","type":""}],"src":"919:455:34"}]},"contents":"{\n    { }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Address: call to non-contract\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory_with_cleanup(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)), 64)\n    }\n}","id":34,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"60806040523661001357610011610017565b005b6100115b610027610022610074565b6100b9565b565b606061004e83836040518060600160405280602781526020016102e5602791396100dd565b9392505050565b73ffffffffffffffffffffffffffffffffffffffff163b151590565b90565b60006100b47f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5473ffffffffffffffffffffffffffffffffffffffff1690565b905090565b3660008037600080366000845af43d6000803e8080156100d8573d6000f35b3d6000fd5b60606000808573ffffffffffffffffffffffffffffffffffffffff16856040516101079190610277565b600060405180830381855af49150503d8060008114610142576040519150601f19603f3d011682016040523d82523d6000602084013e610147565b606091505b509150915061015886838387610162565b9695505050505050565b606083156101fd5782516000036101f65773ffffffffffffffffffffffffffffffffffffffff85163b6101f6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064015b60405180910390fd5b5081610207565b610207838361020f565b949350505050565b81511561021f5781518083602001fd5b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101ed9190610293565b60005b8381101561026e578181015183820152602001610256565b50506000910152565b60008251610289818460208701610253565b9190910192915050565b60208152600082518060208401526102b2816040850160208701610253565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016919091016040019291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220b6d490c7b0f7d19828a449ea9a4cecbee2e462a603d4de127808117591d9f02564736f6c63430008120033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLDATASIZE PUSH2 0x13 JUMPI PUSH2 0x11 PUSH2 0x17 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x11 JUMPDEST PUSH2 0x27 PUSH2 0x22 PUSH2 0x74 JUMP JUMPDEST PUSH2 0xB9 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH2 0x4E DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2E5 PUSH1 0x27 SWAP2 CODECOPY PUSH2 0xDD JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB4 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST CALLDATASIZE PUSH1 0x0 DUP1 CALLDATACOPY PUSH1 0x0 DUP1 CALLDATASIZE PUSH1 0x0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY DUP1 DUP1 ISZERO PUSH2 0xD8 JUMPI RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH1 0x40 MLOAD PUSH2 0x107 SWAP2 SWAP1 PUSH2 0x277 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x142 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x147 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x158 DUP7 DUP4 DUP4 DUP8 PUSH2 0x162 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x1FD JUMPI DUP3 MLOAD PUSH1 0x0 SUB PUSH2 0x1F6 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND EXTCODESIZE PUSH2 0x1F6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP DUP2 PUSH2 0x207 JUMP JUMPDEST PUSH2 0x207 DUP4 DUP4 PUSH2 0x20F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP2 MLOAD ISZERO PUSH2 0x21F JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1ED SWAP2 SWAP1 PUSH2 0x293 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x26E JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x256 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x289 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x253 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x2B2 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x253 JUMP JUMPDEST PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP INVALID COINBASE PUSH5 0x6472657373 GASPRICE KECCAK256 PUSH13 0x6F772D6C6576656C2064656C65 PUSH8 0x6174652063616C6C KECCAK256 PUSH7 0x61696C6564A264 PUSH10 0x70667358221220B6D490 0xC7 0xB0 0xF7 0xD1 SWAP9 0x28 LOG4 0x49 0xEA SWAP11 0x4C 0xEC 0xBE 0xE2 0xE4 PUSH3 0xA603D4 0xDE SLT PUSH25 0x8117591D9F02564736F6C6343000812003300000000000000 ","sourceMap":"567:723:2:-:0;;;;;;2898:11:4;:9;:11::i;:::-;567:723:2;;2675:11:4;2322:110;2397:28;2407:17;:15;:17::i;:::-;2397:9;:28::i;:::-;2322:110::o;6674:198:11:-;6757:12;6788:77;6809:6;6817:4;6788:77;;;;;;;;;;;;;;;;;:20;:77::i;:::-;6781:84;6674:198;-1:-1:-1;;;6674:198:11:o;1412:320::-;1702:19;;;:23;;;1412:320::o;1859:190:14:-;2029:4;1859:190::o;1148:140:2:-;1215:12;1246:35;1030:66:3;1254:54;;;;1175:140;1246:35:2;1239:42;;1148:140;:::o;948:895:4:-;1286:14;1283:1;1280;1267:34;1500:1;1497;1481:14;1478:1;1462:14;1455:5;1442:60;1576:16;1573:1;1570;1555:38;1614:6;1681:66;;;;1796:16;1793:1;1786:27;1681:66;1716:16;1713:1;1706:27;7058:325:11;7199:12;7224;7238:23;7265:6;:19;;7285:4;7265:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7223:67;;;;7307:69;7334:6;7342:7;7351:10;7363:12;7307:26;:69::i;:::-;7300:76;7058:325;-1:-1:-1;;;;;;7058:325:11:o;7671:628::-;7851:12;7879:7;7875:418;;;7906:10;:17;7927:1;7906:22;7902:286;;1702:19;;;;8113:60;;;;;;;763:2:34;8113:60:11;;;745:21:34;802:2;782:18;;;775:30;841:31;821:18;;;814:59;890:18;;8113:60:11;;;;;;;;;-1:-1:-1;8208:10:11;8201:17;;7875:418;8249:33;8257:10;8269:12;8249:7;:33::i;:::-;7671:628;;;;;;:::o;8821:540::-;8980:17;;:21;8976:379;;9208:10;9202:17;9264:15;9251:10;9247:2;9243:19;9236:44;8976:379;9331:12;9324:20;;;;;;;;;;;:::i;14:250:34:-;99:1;109:113;123:6;120:1;117:13;109:113;;;199:11;;;193:18;180:11;;;173:39;145:2;138:10;109:113;;;-1:-1:-1;;256:1:34;238:16;;231:27;14:250::o;269:287::-;398:3;436:6;430:13;452:66;511:6;506:3;499:4;491:6;487:17;452:66;:::i;:::-;534:16;;;;;269:287;-1:-1:-1;;269:287:34:o;919:455::-;1068:2;1057:9;1050:21;1031:4;1100:6;1094:13;1143:6;1138:2;1127:9;1123:18;1116:34;1159:79;1231:6;1226:2;1215:9;1211:18;1206:2;1198:6;1194:15;1159:79;:::i;:::-;1290:2;1278:15;1295:66;1274:88;1259:104;;;;1365:2;1255:113;;919:455;-1:-1:-1;;919:455:34:o"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_logic\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an implementation address that can be changed. This address is stored in storage in the location specified by https://eips.ethereum.org/EIPS/eip-1967[EIP1967], so that it doesn't conflict with the storage layout of the implementation behind the proxy.\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the upgradeable proxy with an initial implementation specified by `_logic`. If `_data` is nonempty, it's used as data in a delegate call to `_logic`. This will typically be an encoded function call, and allows initializing the storage of the proxy like a Solidity constructor.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":\"ERC1967Proxy\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0x3cbef5ebc24b415252e2f8c0c9254555d30d9f085603b4b80d9b5ed20ab87e90\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e8fa670c3bdce78e642cc6ae11c4cb38b133499cdce5e1990a9979d424703263\",\"dweb:/ipfs/QmVxeCUk4jL2pXQyhsoNJwyU874wRufS2WvGe8TgPKPqhE\"]},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://383fb7b8181016ac5ccf07bc9cdb7c1b5045ea36e2cc4df52bcbf20396fc7688\",\"dweb:/ipfs/QmYJ7Cg4WmE3rR8KGQxjUCXFfTH6TcwZ2Z1f6tPrq7jHFr\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":{\"keccak256\":\"0xa2b22da3032e50b55f95ec1d13336102d675f341167aa76db571ef7f8bb7975d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://96b6d77a20bebd4eb06b801d3d020c7e82be13bd535cb0d0a6b7181c51dab5d5\",\"dweb:/ipfs/QmPUR9Cv9jNFdQX6PtBfaBW1ZCnKwiu65R2VD5kbdanDyn\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":{\"keccak256\":\"0x3b21ae06bf5957f73fa16754b0669c77b7abd8ba6c072d35c3281d446fdb86c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2db8e18505e86e02526847005d7287a33e397ed7fb9eaba3fd4a4a197add16e2\",\"dweb:/ipfs/QmW9BSuKTzHWHBNSHF4L8XfVuU1uJrP2vLg84YtBd8mL82\"]},\"@openzeppelin/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc130fe33f1b2132158531a87734153293f6d07bc263ff4ac90e85da9c82c0e27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8831721b6f4cc26534d190f9f1631c3f59c9ff38efdd911f85e0882b8e360472\",\"dweb:/ipfs/QmQZnLErZNStirSQ13ZNWQgvEYUtGE5tXYwn4QUPaVUfPN\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354\",\"dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]}},\"version\":1}"}},"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol":{"ERC1967Upgrade":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"previousAdmin","type":"address"},{"indexed":false,"internalType":"address","name":"newAdmin","type":"address"}],"name":"AdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"beacon","type":"address"}],"name":"BeaconUpgraded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"This abstract contract provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots. _Available since v4.1._\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_ADMIN_SLOT\":{\"details\":\"Storage slot with the admin of the contract. This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1, and is validated in the constructor.\"},\"_BEACON_SLOT\":{\"details\":\"The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\"},\"_IMPLEMENTATION_SLOT\":{\"details\":\"Storage slot with the address of the current implementation. This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1, and is validated in the constructor.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":\"ERC1967Upgrade\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0x3cbef5ebc24b415252e2f8c0c9254555d30d9f085603b4b80d9b5ed20ab87e90\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e8fa670c3bdce78e642cc6ae11c4cb38b133499cdce5e1990a9979d424703263\",\"dweb:/ipfs/QmVxeCUk4jL2pXQyhsoNJwyU874wRufS2WvGe8TgPKPqhE\"]},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://383fb7b8181016ac5ccf07bc9cdb7c1b5045ea36e2cc4df52bcbf20396fc7688\",\"dweb:/ipfs/QmYJ7Cg4WmE3rR8KGQxjUCXFfTH6TcwZ2Z1f6tPrq7jHFr\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":{\"keccak256\":\"0x3b21ae06bf5957f73fa16754b0669c77b7abd8ba6c072d35c3281d446fdb86c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2db8e18505e86e02526847005d7287a33e397ed7fb9eaba3fd4a4a197add16e2\",\"dweb:/ipfs/QmW9BSuKTzHWHBNSHF4L8XfVuU1uJrP2vLg84YtBd8mL82\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354\",\"dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]}},\"version\":1}"}},"@openzeppelin/contracts/proxy/Proxy.sol":{"Proxy":{"abi":[{"stateMutability":"payable","type":"fallback"},{"stateMutability":"payable","type":"receive"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"This abstract contract provides a fallback function that delegates all calls to another contract using the EVM instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to be specified by overriding the virtual {_implementation} function. Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a different contract through the {_delegate} function. The success and return data of the delegated call will be returned back to the caller of the proxy.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/Proxy.sol\":\"Proxy\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc130fe33f1b2132158531a87734153293f6d07bc263ff4ac90e85da9c82c0e27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8831721b6f4cc26534d190f9f1631c3f59c9ff38efdd911f85e0882b8e360472\",\"dweb:/ipfs/QmQZnLErZNStirSQ13ZNWQgvEYUtGE5tXYwn4QUPaVUfPN\"]}},\"version\":1}"}},"@openzeppelin/contracts/proxy/beacon/IBeacon.sol":{"IBeacon":{"abi":[{"inputs":[],"name":"implementation","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"implementation()":"5c60da1b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is the interface that {BeaconProxy} expects of its beacon.\",\"kind\":\"dev\",\"methods\":{\"implementation()\":{\"details\":\"Must return an address that can be used as a delegate call target. {BeaconProxy} will check that this address is a contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":\"IBeacon\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354\",\"dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce\"]}},\"version\":1}"}},"@openzeppelin/contracts/proxy/utils/Initializable.sol":{"Initializable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_initialized\":{\"custom:oz-retyped-from\":\"bool\",\"details\":\"Indicates that the contract has been initialized.\"},\"_initializing\":{\"details\":\"Indicates that the contract is in the process of being initialized.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x3d6069be9b4c01fb81840fb9c2c4dc58dd6a6a4aafaa2c6837de8699574d84c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://720d6bb56ea0c4ef781c0bd65c5bd0541f5a46100163b2587170f97658d2deed\",\"dweb:/ipfs/QmTS2biLVPrv8CeeXCaKmkFxonMiRvc1LxiYBRYDAJHQUS\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]}},\"version\":1}"}},"@openzeppelin/contracts/proxy/utils/UUPSUpgradeable.sol":{"UUPSUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"previousAdmin","type":"address"},{"indexed":false,"internalType":"address","name":"newAdmin","type":"address"}],"name":"AdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"beacon","type":"address"}],"name":"BeaconUpgraded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"},{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"}],"name":"upgradeTo","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"upgradeToAndCall","outputs":[],"stateMutability":"payable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"proxiableUUID()":"52d1902d","upgradeTo(address)":"3659cfe6","upgradeToAndCall(address,bytes)":"4f1ef286"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism. _Available since v4.1._\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"upgradeTo(address)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"stateVariables\":{\"__self\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable state-variable-assignment\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/utils/UUPSUpgradeable.sol\":\"UUPSUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0x3cbef5ebc24b415252e2f8c0c9254555d30d9f085603b4b80d9b5ed20ab87e90\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e8fa670c3bdce78e642cc6ae11c4cb38b133499cdce5e1990a9979d424703263\",\"dweb:/ipfs/QmVxeCUk4jL2pXQyhsoNJwyU874wRufS2WvGe8TgPKPqhE\"]},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://383fb7b8181016ac5ccf07bc9cdb7c1b5045ea36e2cc4df52bcbf20396fc7688\",\"dweb:/ipfs/QmYJ7Cg4WmE3rR8KGQxjUCXFfTH6TcwZ2Z1f6tPrq7jHFr\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":{\"keccak256\":\"0x3b21ae06bf5957f73fa16754b0669c77b7abd8ba6c072d35c3281d446fdb86c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2db8e18505e86e02526847005d7287a33e397ed7fb9eaba3fd4a4a197add16e2\",\"dweb:/ipfs/QmW9BSuKTzHWHBNSHF4L8XfVuU1uJrP2vLg84YtBd8mL82\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354\",\"dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce\"]},\"@openzeppelin/contracts/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0xc6619957bcc6641fe8984bfaf9ff11a9e4b97d8149c0495f608f9a2416d7c5cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://543be67f7fa43b1b932637c1c7f12035f0f4b0f7ee2bd3c33841186f79c165c1\",\"dweb:/ipfs/QmSBPM2UVKbmJqWfD9i6hSiqbaE8TV4TSqfuiivziRRLKM\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol":{"IERC1155Receiver":{"abi":[{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC1155BatchReceived","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC1155Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)":"bc197c81","onERC1155Received(address,address,uint256,uint256,bytes)":"f23a6e61","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"_Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` (i.e. 0xbc197c81, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"ids\":\"An array containing ids of each token being transferred (order and length must match values array)\",\"operator\":\"The address which initiated the batch transfer (i.e. msg.sender)\",\"values\":\"An array containing amounts of each token being transferred (order and length must match ids array)\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\"}},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` (i.e. 0xf23a6e61, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"id\":\"The ID of the token being transferred\",\"operator\":\"The address which initiated the transfer (i.e. msg.sender)\",\"value\":\"The amount of tokens being transferred\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":\"IERC1155Receiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"IERC721Receiver":{"abi":[{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC721Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"onERC721Received(address,address,uint256,bytes)":"150b7a02"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC777/IERC777Recipient.sol":{"IERC777Recipient":{"abi":[{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"userData","type":"bytes"},{"internalType":"bytes","name":"operatorData","type":"bytes"}],"name":"tokensReceived","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"tokensReceived(address,address,address,uint256,bytes,bytes)":"0023de29"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"tokensReceived\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC777TokensRecipient standard as defined in the EIP. Accounts can be notified of {IERC777} tokens being sent to them by having a contract implement this interface (contract holders can be their own implementer) and registering it on the https://eips.ethereum.org/EIPS/eip-1820[ERC1820 global registry]. See {IERC1820Registry} and {ERC1820Implementer}.\",\"kind\":\"dev\",\"methods\":{\"tokensReceived(address,address,address,uint256,bytes,bytes)\":{\"details\":\"Called by an {IERC777} token contract whenever tokens are being moved or created into a registered account (`to`). The type of operation is conveyed by `from` being the zero address or not. This call occurs _after_ the token contract's state is updated, so {IERC777-balanceOf}, etc., can be used to query the post-operation state. This function may revert to prevent the operation from being executed.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC777/IERC777Recipient.sol\":\"IERC777Recipient\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC777/IERC777Recipient.sol\":{\"keccak256\":\"0x1a5d61db2733202ba361e6d6741cd2e662380e22b80e987eacfc91973f2267dc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04c0cd697050a6516b7779aa2343ad2d0e5217d8915ac2382681dfdf4e445be3\",\"dweb:/ipfs/QmPCBCZgm7pHBwwogE2F9NCN3UfTdLNhqc8UDEvw8kDzyA\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Address.sol":{"Address":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203239ab59550158d93b6658778e1cbf5d10d04c43c0734544525c979344dee47e64736f6c63430008120033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ORIGIN CODECOPY 0xAB MSIZE SSTORE ADD PC 0xD9 EXTCODESIZE PUSH7 0x58778E1CBF5D10 0xD0 0x4C NUMBER 0xC0 PUSH20 0x4544525C979344DEE47E64736F6C634300081200 CALLER ","sourceMap":"194:9169:11:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;194:9169:11;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203239ab59550158d93b6658778e1cbf5d10d04c43c0734544525c979344dee47e64736f6c63430008120033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ORIGIN CODECOPY 0xAB MSIZE SSTORE ADD PC 0xD9 EXTCODESIZE PUSH7 0x58778E1CBF5D10 0xD0 0x4C NUMBER 0xC0 PUSH20 0x4544525C979344DEE47E64736F6C634300081200 CALLER ","sourceMap":"194:9169:11:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Counters.sol":{"Counters":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b23d132eeff0e1383c8262312010bb6d2a9a92b55b02bfe88f52cfca1ec0f0ce64736f6c63430008120033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB2 RETURNDATASIZE SGT 0x2E 0xEF CREATE 0xE1 CODESIZE EXTCODECOPY DUP3 PUSH3 0x312010 0xBB PUSH14 0x2A9A92B55B02BFE88F52CFCA1EC0 CREATE 0xCE PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ","sourceMap":"424:971:12:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;424:971:12;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b23d132eeff0e1383c8262312010bb6d2a9a92b55b02bfe88f52cfca1ec0f0ce64736f6c63430008120033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB2 RETURNDATASIZE SGT 0x2E 0xEF CREATE 0xE1 CODESIZE EXTCODECOPY DUP3 PUSH3 0x312010 0xBB PUSH14 0x2A9A92B55B02BFE88F52CFCA1EC0 CREATE 0xCE PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ","sourceMap":"424:971:12:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Matt Condon (@shrugs)\",\"details\":\"Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Counters\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Counters.sol\":\"Counters\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Create2.sol":{"Create2":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e5d098c07dcf4dbb1c4ebd65cbd59363e612b4077bc471feb46a800ead8a68b264736f6c63430008120033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE5 0xD0 SWAP9 0xC0 PUSH30 0xCF4DBB1C4EBD65CBD59363E612B4077BC471FEB46A800EAD8A68B264736F PUSH13 0x63430008120033000000000000 ","sourceMap":"494:3457:13:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;494:3457:13;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e5d098c07dcf4dbb1c4ebd65cbd59363e612b4077bc471feb46a800ead8a68b264736f6c63430008120033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE5 0xD0 SWAP9 0xC0 PUSH30 0xCF4DBB1C4EBD65CBD59363E612B4077BC471FEB46A800EAD8A68B264736F PUSH13 0x63430008120033000000000000 ","sourceMap":"494:3457:13:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Helper to make usage of the `CREATE2` EVM opcode easier and safer. `CREATE2` can be used to compute in advance the address where a smart contract will be deployed, which allows for interesting new mechanisms known as 'counterfactual interactions'. See the https://eips.ethereum.org/EIPS/eip-1014#motivation[EIP] for more information.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Create2.sol\":\"Create2\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Create2.sol\":{\"keccak256\":\"0x6e00f269073ffc4350e56b7e8153c9092d5f70bfba423299990514183101ef89\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8dc5ff5c204604be7594ce2fa9100a0638f22b5aada6ebec1e165b0f50a48447\",\"dweb:/ipfs/QmfH7uWphPrq8jqwGvyh4pFnLEgEPmLwyGV2Bvx1Acjggh\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/StorageSlot.sol":{"StorageSlot":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122009ffe43d12108f0744da21f053c740782fb8fc63ca1c085bc9e831b559499d4064736f6c63430008120033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MULMOD SELFDESTRUCT 0xE4 RETURNDATASIZE SLT LT DUP16 SMOD PREVRANDAO 0xDA 0x21 CREATE MSTORE8 0xC7 BLOCKHASH PUSH25 0x2FB8FC63CA1C085BC9E831B559499D4064736F6C6343000812 STOP CALLER ","sourceMap":"1420:2685:14:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1420:2685:14;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122009ffe43d12108f0744da21f053c740782fb8fc63ca1c085bc9e831b559499d4064736f6c63430008120033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MULMOD SELFDESTRUCT 0xE4 RETURNDATASIZE SLT LT DUP16 SMOD PREVRANDAO 0xDA 0x21 CREATE MSTORE8 0xC7 BLOCKHASH PUSH25 0x2FB8FC63CA1C085BC9E831B559499D4064736F6C6343000812 STOP CALLER ","sourceMap":"1420:2685:14:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._ _Available since v4.9 for `string`, `bytes`._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122011d928deef417a2624db890876d2d7fc817720737d9db836a4585ce0c3fd4b2464736f6c63430008120033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GT 0xD9 0x28 0xDE 0xEF COINBASE PUSH27 0x2624DB890876D2D7FC817720737D9DB836A4585CE0C3FD4B246473 PUSH16 0x6C634300081200330000000000000000 ","sourceMap":"220:2559:15:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;220:2559:15;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122011d928deef417a2624db890876d2d7fc817720737d9db836a4585ce0c3fd4b2464736f6c63430008120033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GT 0xD9 0x28 0xDE 0xEF COINBASE PUSH27 0x2624DB890876D2D7FC817720737D9DB836A4585CE0C3FD4B246473 PUSH16 0x6C634300081200330000000000000000 ","sourceMap":"220:2559:15:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ECDSA":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ea93d5286b2cc57879c5e1a4788a9befb0eb1d4797b06c3a1e052668a4c04ed864736f6c63430008120033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEA SWAP4 0xD5 0x28 PUSH12 0x2CC57879C5E1A4788A9BEFB0 0xEB SAR SELFBALANCE SWAP8 0xB0 PUSH13 0x3A1E052668A4C04ED864736F6C PUSH4 0x43000812 STOP CALLER ","sourceMap":"369:8761:16:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;369:8761:16;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ea93d5286b2cc57879c5e1a4788a9befb0eb1d4797b06c3a1e052668a4c04ed864736f6c63430008120033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEA SWAP4 0xD5 0x28 PUSH12 0x2CC57879C5E1A4788A9BEFB0 0xEB SAR SELFBALANCE SWAP8 0xB0 PUSH13 0x3A1E052668A4C04ED864736F6C PUSH4 0x43000812 STOP CALLER ","sourceMap":"369:8761:16:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":\"ECDSA\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x809bc3edb4bcbef8263fa616c1b60ee0004b50a8a1bfa164d8f57fd31f520c58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b93a1e39a4a19eba1600b92c96f435442db88cac91e315c8291547a2a7bcfe2\",\"dweb:/ipfs/QmTm34KVe6uZBZwq8dZDNWwPcm24qBJdxqL3rPxBJ4LrMv\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208e8ea41ed26617770772847b3d9e9253cca92c64dc63f46ef767542f8c1ee50964736f6c63430008120033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP15 DUP15 LOG4 0x1E 0xD2 PUSH7 0x17770772847B3D SWAP15 SWAP3 MSTORE8 0xCC 0xA9 0x2C PUSH5 0xDC63F46EF7 PUSH8 0x542F8C1EE5096473 PUSH16 0x6C634300081200330000000000000000 ","sourceMap":"202:12582:18:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;202:12582:18;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208e8ea41ed26617770772847b3d9e9253cca92c64dc63f46ef767542f8c1ee50964736f6c63430008120033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP15 DUP15 LOG4 0x1E 0xD2 PUSH7 0x17770772847B3D SWAP15 SWAP3 MSTORE8 0xCC 0xA9 0x2C PUSH5 0xDC63F46EF7 PUSH8 0x542F8C1EE5096473 PUSH16 0x6C634300081200330000000000000000 ","sourceMap":"202:12582:18:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220fbd2e05453eaec4ec5bd0f359d75b660f5dd674e5bb5b40334f5c6786635af5f64736f6c63430008120033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFB 0xD2 0xE0 SLOAD MSTORE8 0xEA 0xEC 0x4E 0xC5 0xBD 0xF CALLDATALOAD SWAP14 PUSH22 0xB660F5DD674E5BB5B40334F5C6786635AF5F64736F6C PUSH4 0x43000812 STOP CALLER ","sourceMap":"215:1047:19:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;215:1047:19;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220fbd2e05453eaec4ec5bd0f359d75b660f5dd674e5bb5b40334f5c6786635af5f64736f6c63430008120033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFB 0xD2 0xE0 SLOAD MSTORE8 0xEA 0xEC 0x4E 0xC5 0xBD 0xF CALLDATALOAD SWAP14 PUSH22 0xB660F5DD674E5BB5B40334F5C6786635AF5F64736F6C PUSH4 0x43000812 STOP CALLER ","sourceMap":"215:1047:19:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}"}},"contracts/core/BaseAccount.sol":{"BaseAccount":{"abi":[{"inputs":[],"name":"entryPoint","outputs":[{"internalType":"contract IEntryPoint","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getNonce","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"uint256","name":"callGasLimit","type":"uint256"},{"internalType":"uint256","name":"verificationGasLimit","type":"uint256"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"uint256","name":"maxFeePerGas","type":"uint256"},{"internalType":"uint256","name":"maxPriorityFeePerGas","type":"uint256"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct UserOperation","name":"userOp","type":"tuple"},{"internalType":"bytes32","name":"userOpHash","type":"bytes32"},{"internalType":"uint256","name":"missingAccountFunds","type":"uint256"}],"name":"validateUserOp","outputs":[{"internalType":"uint256","name":"validationData","type":"uint256"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"entryPoint()":"b0d691fe","getNonce()":"d087d288","validateUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)":"3a871cdd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"entryPoint\",\"outputs\":[{\"internalType\":\"contract IEntryPoint\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"missingAccountFunds\",\"type\":\"uint256\"}],\"name\":\"validateUserOp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"validationData\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"entryPoint()\":{\"notice\":\"return the entryPoint used by this account. subclass should return the current entryPoint used by this account.\"},\"getNonce()\":{\"notice\":\"Return the account nonce. This method returns the next sequential nonce. For a nonce of a specific key, use `entrypoint.getNonce(account, key)`\"},\"validateUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)\":{\"notice\":\"Validate user's signature and nonce. subclass doesn't need to override this method. Instead, it should override the specific internal validation methods.\"}},\"notice\":\"Basic account implementation. this contract provides the basic logic for implementing the IAccount interface  - validateUserOp specific account implementation should inherit it and provide the account-specific logic\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/BaseAccount.sol\":\"BaseAccount\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"contracts/core/BaseAccount.sol\":{\"keccak256\":\"0xcc33bf670c4334f70c81ab92c03ded5ee4d28abedab06d458b2f234faceafb4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://985ce85b1e80872680db607f62fcf4becf9e2a356e7ea04b0209e4d4bc99fc48\",\"dweb:/ipfs/QmPZddeadd6n963XEeYvcyFSv6c7LcYaQ7G2LfckS7Fa3v\"]},\"contracts/core/Helpers.sol\":{\"keccak256\":\"0x0f5d5a052ba4cecc4699ca4eb0bd21787ab0a5122e3aaa33283e8009dcfba576\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0055598a026e7ab7fd22c900087c08552bfec84350854f337be786191ff571b5\",\"dweb:/ipfs/QmcVFLLLSM2TyaXKbuA718EJygHkvUBgJiAkC6rqCXjMoM\"]},\"contracts/interfaces/IAccount.sol\":{\"keccak256\":\"0x5f95f26f95b7638a679d246e4f88f8bce752c1a2da43d3672db9683584f41949\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f303a98a037054c57eb30a39a90de2339caeca2f244b4bcfd362bd80d68c9c52\",\"dweb:/ipfs/QmTSggTuH1VDj8LvZVG3mY8RupWdCCSwvuQ27Lfmeh5hfC\"]},\"contracts/interfaces/IAggregator.sol\":{\"keccak256\":\"0x882c23df83ff9eb7b6d8da9a0a2aace7ae05ceb5045bab3bcfd8424ad5e3fb94\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26515cb73553340a1347de257e9ec18176c4e1d0743f2b45b192e62fb5da9db2\",\"dweb:/ipfs/QmcVSodmViGq7QR41fzuVkxgzUfoKp14SP42EYeURPudL6\"]},\"contracts/interfaces/IEntryPoint.sol\":{\"keccak256\":\"0x789c29158831da49cb68476ed9fd474b3a96fd07833f9d01c52d96662d7ee5aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1d627a6cd0b63376627e13042f01cdf780150622443a272922f8cd9762cf86b\",\"dweb:/ipfs/Qmci2frpA8wJfmCT7p88LJSh3765WLHCL1EZbpb8C7rkWz\"]},\"contracts/interfaces/INonceManager.sol\":{\"keccak256\":\"0x559e47ae829da7b717f04aad27ea24cad0d3590dcefb71d3b5f19a79f4ad1069\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a193c6d6e35145860e9034f21302be5352239bb92d0cfb0d2a7d0dbb4d4267a2\",\"dweb:/ipfs/QmVuBq5LYBwCXXUdipdomxq82v2ybh73sBCm89AW1vvg6W\"]},\"contracts/interfaces/IStakeManager.sol\":{\"keccak256\":\"0x68fdee5452a594c7f5f2dd80b3637e9cad71fbad4b255d60cd2fa2d98290fb56\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://82407c1d978530b1f4de0abc0c03044e7b618baeb6e090612250863d94307671\",\"dweb:/ipfs/QmYYyZE2j9XVAPxoZXwMx3HGkG8XQ4C8y55dDWLMSrYJZy\"]},\"contracts/interfaces/UserOperation.sol\":{\"keccak256\":\"0x54bfc3bb0ec261c343803cadb5ba08befc65ad40d6e6d6417cb267d1e1437aaf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a115de9d38f45b40cbccdda415d43ac2efb618afcd4d4dab1d434b48b537df3\",\"dweb:/ipfs/QmehKyXL5gWE4FkwrB5QAfDzqFcTWjBUk2nULb3WoBDXcN\"]}},\"version\":1}"}},"contracts/interfaces/IAccount.sol":{"IAccount":{"abi":[{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"uint256","name":"callGasLimit","type":"uint256"},{"internalType":"uint256","name":"verificationGasLimit","type":"uint256"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"uint256","name":"maxFeePerGas","type":"uint256"},{"internalType":"uint256","name":"maxPriorityFeePerGas","type":"uint256"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct UserOperation","name":"userOp","type":"tuple"},{"internalType":"bytes32","name":"userOpHash","type":"bytes32"},{"internalType":"uint256","name":"missingAccountFunds","type":"uint256"}],"name":"validateUserOp","outputs":[{"internalType":"uint256","name":"validationData","type":"uint256"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"validateUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)":"3a871cdd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"missingAccountFunds\",\"type\":\"uint256\"}],\"name\":\"validateUserOp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"validationData\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"validateUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)\":{\"details\":\"Must validate caller is the entryPoint.      Must validate the signature and nonce\",\"params\":{\"missingAccountFunds\":\"missing funds on the account's deposit in the entrypoint.      This is the minimum amount to transfer to the sender(entryPoint) to be able to make the call.      The excess is left as a deposit in the entrypoint, for future calls.      can be withdrawn anytime using \\\"entryPoint.withdrawTo()\\\"      In case there is a paymaster in the request (or the current deposit is high enough), this value will be zero.\",\"userOp\":\"the operation that is about to be executed.\",\"userOpHash\":\"hash of the user's request data. can be used as the basis for signature.\"},\"returns\":{\"validationData\":\"packaged ValidationData structure. use `_packValidationData` and `_unpackValidationData` to encode and decode      <20-byte> sigAuthorizer - 0 for valid signature, 1 to mark signature failure,         otherwise, an address of an \\\"authorizer\\\" contract.      <6-byte> validUntil - last timestamp this operation is valid. 0 for \\\"indefinite\\\"      <6-byte> validAfter - first timestamp this operation is valid      If an account doesn't use time-range, it is enough to return SIG_VALIDATION_FAILED value (1) for signature failure.      Note that the validation code cannot use block.timestamp (or block.number) directly.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"validateUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)\":{\"notice\":\"Validate user's signature and nonce the entryPoint will make the call to the recipient only if this validation call returns successfully. signature failure should be reported by returning SIG_VALIDATION_FAILED (1). This allows making a \\\"simulation call\\\" without a valid signature Other failures (e.g. nonce mismatch, or invalid signature format) should still revert to signal failure.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IAccount.sol\":\"IAccount\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"contracts/core/Helpers.sol\":{\"keccak256\":\"0x0f5d5a052ba4cecc4699ca4eb0bd21787ab0a5122e3aaa33283e8009dcfba576\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0055598a026e7ab7fd22c900087c08552bfec84350854f337be786191ff571b5\",\"dweb:/ipfs/QmcVFLLLSM2TyaXKbuA718EJygHkvUBgJiAkC6rqCXjMoM\"]},\"contracts/interfaces/IAccount.sol\":{\"keccak256\":\"0x5f95f26f95b7638a679d246e4f88f8bce752c1a2da43d3672db9683584f41949\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f303a98a037054c57eb30a39a90de2339caeca2f244b4bcfd362bd80d68c9c52\",\"dweb:/ipfs/QmTSggTuH1VDj8LvZVG3mY8RupWdCCSwvuQ27Lfmeh5hfC\"]},\"contracts/interfaces/UserOperation.sol\":{\"keccak256\":\"0x54bfc3bb0ec261c343803cadb5ba08befc65ad40d6e6d6417cb267d1e1437aaf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a115de9d38f45b40cbccdda415d43ac2efb618afcd4d4dab1d434b48b537df3\",\"dweb:/ipfs/QmehKyXL5gWE4FkwrB5QAfDzqFcTWjBUk2nULb3WoBDXcN\"]}},\"version\":1}"}},"contracts/interfaces/IAggregator.sol":{"IAggregator":{"abi":[{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"uint256","name":"callGasLimit","type":"uint256"},{"internalType":"uint256","name":"verificationGasLimit","type":"uint256"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"uint256","name":"maxFeePerGas","type":"uint256"},{"internalType":"uint256","name":"maxPriorityFeePerGas","type":"uint256"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct UserOperation[]","name":"userOps","type":"tuple[]"}],"name":"aggregateSignatures","outputs":[{"internalType":"bytes","name":"aggregatedSignature","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"uint256","name":"callGasLimit","type":"uint256"},{"internalType":"uint256","name":"verificationGasLimit","type":"uint256"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"uint256","name":"maxFeePerGas","type":"uint256"},{"internalType":"uint256","name":"maxPriorityFeePerGas","type":"uint256"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct UserOperation[]","name":"userOps","type":"tuple[]"},{"internalType":"bytes","name":"signature","type":"bytes"}],"name":"validateSignatures","outputs":[],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"uint256","name":"callGasLimit","type":"uint256"},{"internalType":"uint256","name":"verificationGasLimit","type":"uint256"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"uint256","name":"maxFeePerGas","type":"uint256"},{"internalType":"uint256","name":"maxPriorityFeePerGas","type":"uint256"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct UserOperation","name":"userOp","type":"tuple"}],"name":"validateUserOpSignature","outputs":[{"internalType":"bytes","name":"sigForUserOp","type":"bytes"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"aggregateSignatures((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[])":"275e2d79","validateSignatures((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],bytes)":"e3563a4f","validateUserOpSignature((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))":"64c530cd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation[]\",\"name\":\"userOps\",\"type\":\"tuple[]\"}],\"name\":\"aggregateSignatures\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"aggregatedSignature\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation[]\",\"name\":\"userOps\",\"type\":\"tuple[]\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"validateSignatures\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"}],\"name\":\"validateUserOpSignature\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"sigForUserOp\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"aggregateSignatures((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[])\":{\"params\":{\"userOps\":\"array of UserOperations to collect the signatures from.\"},\"returns\":{\"aggregatedSignature\":\"the aggregated signature\"}},\"validateUserOpSignature((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))\":{\"params\":{\"userOp\":\"the userOperation received from the user.\"},\"returns\":{\"sigForUserOp\":\"the value to put into the signature field of the userOp when calling handleOps.    (usually empty, unless account and aggregator support some kind of \\\"multisig\\\"\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"aggregateSignatures((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[])\":{\"notice\":\"aggregate multiple signatures into a single value. This method is called off-chain to calculate the signature to pass with handleOps() bundler MAY use optimized custom code perform this aggregation\"},\"validateSignatures((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],bytes)\":{\"notice\":\"validate aggregated signature. revert if the aggregated signature does not match the given list of operations.\"},\"validateUserOpSignature((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))\":{\"notice\":\"validate signature of a single userOp This method is should be called by bundler after EntryPoint.simulateValidation() returns (reverts) with ValidationResultWithAggregation First it validates the signature over the userOp. Then it returns data to be used when creating the handleOps.\"}},\"notice\":\"Aggregated Signatures validator. \\u96c6\\u7d04\\u3057\\u305f\\u7f72\\u540d\\u3092\\u691c\\u8a3c\\u3059\\u308b\\u3002 \",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IAggregator.sol\":\"IAggregator\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"contracts/core/Helpers.sol\":{\"keccak256\":\"0x0f5d5a052ba4cecc4699ca4eb0bd21787ab0a5122e3aaa33283e8009dcfba576\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0055598a026e7ab7fd22c900087c08552bfec84350854f337be786191ff571b5\",\"dweb:/ipfs/QmcVFLLLSM2TyaXKbuA718EJygHkvUBgJiAkC6rqCXjMoM\"]},\"contracts/interfaces/IAggregator.sol\":{\"keccak256\":\"0x882c23df83ff9eb7b6d8da9a0a2aace7ae05ceb5045bab3bcfd8424ad5e3fb94\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26515cb73553340a1347de257e9ec18176c4e1d0743f2b45b192e62fb5da9db2\",\"dweb:/ipfs/QmcVSodmViGq7QR41fzuVkxgzUfoKp14SP42EYeURPudL6\"]},\"contracts/interfaces/UserOperation.sol\":{\"keccak256\":\"0x54bfc3bb0ec261c343803cadb5ba08befc65ad40d6e6d6417cb267d1e1437aaf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a115de9d38f45b40cbccdda415d43ac2efb618afcd4d4dab1d434b48b537df3\",\"dweb:/ipfs/QmehKyXL5gWE4FkwrB5QAfDzqFcTWjBUk2nULb3WoBDXcN\"]}},\"version\":1}"}},"contracts/interfaces/IEntryPoint.sol":{"IEntryPoint":{"abi":[{"inputs":[{"internalType":"uint256","name":"preOpGas","type":"uint256"},{"internalType":"uint256","name":"paid","type":"uint256"},{"internalType":"uint48","name":"validAfter","type":"uint48"},{"internalType":"uint48","name":"validUntil","type":"uint48"},{"internalType":"bool","name":"targetSuccess","type":"bool"},{"internalType":"bytes","name":"targetResult","type":"bytes"}],"name":"ExecutionResult","type":"error"},{"inputs":[{"internalType":"uint256","name":"opIndex","type":"uint256"},{"internalType":"string","name":"reason","type":"string"}],"name":"FailedOp","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"SenderAddressResult","type":"error"},{"inputs":[{"internalType":"address","name":"aggregator","type":"address"}],"name":"SignatureValidationFailed","type":"error"},{"inputs":[{"components":[{"internalType":"uint256","name":"preOpGas","type":"uint256"},{"internalType":"uint256","name":"prefund","type":"uint256"},{"internalType":"bool","name":"sigFailed","type":"bool"},{"internalType":"uint48","name":"validAfter","type":"uint48"},{"internalType":"uint48","name":"validUntil","type":"uint48"},{"internalType":"bytes","name":"paymasterContext","type":"bytes"}],"internalType":"struct IEntryPoint.ReturnInfo","name":"returnInfo","type":"tuple"},{"components":[{"internalType":"uint256","name":"stake","type":"uint256"},{"internalType":"uint256","name":"unstakeDelaySec","type":"uint256"}],"internalType":"struct IStakeManager.StakeInfo","name":"senderInfo","type":"tuple"},{"components":[{"internalType":"uint256","name":"stake","type":"uint256"},{"internalType":"uint256","name":"unstakeDelaySec","type":"uint256"}],"internalType":"struct IStakeManager.StakeInfo","name":"factoryInfo","type":"tuple"},{"components":[{"internalType":"uint256","name":"stake","type":"uint256"},{"internalType":"uint256","name":"unstakeDelaySec","type":"uint256"}],"internalType":"struct IStakeManager.StakeInfo","name":"paymasterInfo","type":"tuple"}],"name":"ValidationResult","type":"error"},{"inputs":[{"components":[{"internalType":"uint256","name":"preOpGas","type":"uint256"},{"internalType":"uint256","name":"prefund","type":"uint256"},{"internalType":"bool","name":"sigFailed","type":"bool"},{"internalType":"uint48","name":"validAfter","type":"uint48"},{"internalType":"uint48","name":"validUntil","type":"uint48"},{"internalType":"bytes","name":"paymasterContext","type":"bytes"}],"internalType":"struct IEntryPoint.ReturnInfo","name":"returnInfo","type":"tuple"},{"components":[{"internalType":"uint256","name":"stake","type":"uint256"},{"internalType":"uint256","name":"unstakeDelaySec","type":"uint256"}],"internalType":"struct IStakeManager.StakeInfo","name":"senderInfo","type":"tuple"},{"components":[{"internalType":"uint256","name":"stake","type":"uint256"},{"internalType":"uint256","name":"unstakeDelaySec","type":"uint256"}],"internalType":"struct IStakeManager.StakeInfo","name":"factoryInfo","type":"tuple"},{"components":[{"internalType":"uint256","name":"stake","type":"uint256"},{"internalType":"uint256","name":"unstakeDelaySec","type":"uint256"}],"internalType":"struct IStakeManager.StakeInfo","name":"paymasterInfo","type":"tuple"},{"components":[{"internalType":"address","name":"aggregator","type":"address"},{"components":[{"internalType":"uint256","name":"stake","type":"uint256"},{"internalType":"uint256","name":"unstakeDelaySec","type":"uint256"}],"internalType":"struct IStakeManager.StakeInfo","name":"stakeInfo","type":"tuple"}],"internalType":"struct IEntryPoint.AggregatorStakeInfo","name":"aggregatorInfo","type":"tuple"}],"name":"ValidationResultWithAggregation","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"userOpHash","type":"bytes32"},{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"address","name":"factory","type":"address"},{"indexed":false,"internalType":"address","name":"paymaster","type":"address"}],"name":"AccountDeployed","type":"event"},{"anonymous":false,"inputs":[],"name":"BeforeExecution","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"totalDeposit","type":"uint256"}],"name":"Deposited","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"aggregator","type":"address"}],"name":"SignatureAggregatorChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"totalStaked","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"unstakeDelaySec","type":"uint256"}],"name":"StakeLocked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"withdrawTime","type":"uint256"}],"name":"StakeUnlocked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"address","name":"withdrawAddress","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"StakeWithdrawn","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"userOpHash","type":"bytes32"},{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"address","name":"paymaster","type":"address"},{"indexed":false,"internalType":"uint256","name":"nonce","type":"uint256"},{"indexed":false,"internalType":"bool","name":"success","type":"bool"},{"indexed":false,"internalType":"uint256","name":"actualGasCost","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"actualGasUsed","type":"uint256"}],"name":"UserOperationEvent","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"userOpHash","type":"bytes32"},{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"uint256","name":"nonce","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"revertReason","type":"bytes"}],"name":"UserOperationRevertReason","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"address","name":"withdrawAddress","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Withdrawn","type":"event"},{"inputs":[{"internalType":"uint32","name":"_unstakeDelaySec","type":"uint32"}],"name":"addStake","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"depositTo","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getDepositInfo","outputs":[{"components":[{"internalType":"uint112","name":"deposit","type":"uint112"},{"internalType":"bool","name":"staked","type":"bool"},{"internalType":"uint112","name":"stake","type":"uint112"},{"internalType":"uint32","name":"unstakeDelaySec","type":"uint32"},{"internalType":"uint48","name":"withdrawTime","type":"uint48"}],"internalType":"struct IStakeManager.DepositInfo","name":"info","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint192","name":"key","type":"uint192"}],"name":"getNonce","outputs":[{"internalType":"uint256","name":"nonce","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes","name":"initCode","type":"bytes"}],"name":"getSenderAddress","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"uint256","name":"callGasLimit","type":"uint256"},{"internalType":"uint256","name":"verificationGasLimit","type":"uint256"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"uint256","name":"maxFeePerGas","type":"uint256"},{"internalType":"uint256","name":"maxPriorityFeePerGas","type":"uint256"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct UserOperation","name":"userOp","type":"tuple"}],"name":"getUserOpHash","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"uint256","name":"callGasLimit","type":"uint256"},{"internalType":"uint256","name":"verificationGasLimit","type":"uint256"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"uint256","name":"maxFeePerGas","type":"uint256"},{"internalType":"uint256","name":"maxPriorityFeePerGas","type":"uint256"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct UserOperation[]","name":"userOps","type":"tuple[]"},{"internalType":"contract IAggregator","name":"aggregator","type":"address"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct IEntryPoint.UserOpsPerAggregator[]","name":"opsPerAggregator","type":"tuple[]"},{"internalType":"address payable","name":"beneficiary","type":"address"}],"name":"handleAggregatedOps","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"uint256","name":"callGasLimit","type":"uint256"},{"internalType":"uint256","name":"verificationGasLimit","type":"uint256"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"uint256","name":"maxFeePerGas","type":"uint256"},{"internalType":"uint256","name":"maxPriorityFeePerGas","type":"uint256"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct UserOperation[]","name":"ops","type":"tuple[]"},{"internalType":"address payable","name":"beneficiary","type":"address"}],"name":"handleOps","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint192","name":"key","type":"uint192"}],"name":"incrementNonce","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"uint256","name":"callGasLimit","type":"uint256"},{"internalType":"uint256","name":"verificationGasLimit","type":"uint256"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"uint256","name":"maxFeePerGas","type":"uint256"},{"internalType":"uint256","name":"maxPriorityFeePerGas","type":"uint256"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct UserOperation","name":"op","type":"tuple"},{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes","name":"targetCallData","type":"bytes"}],"name":"simulateHandleOp","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"uint256","name":"callGasLimit","type":"uint256"},{"internalType":"uint256","name":"verificationGasLimit","type":"uint256"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"uint256","name":"maxFeePerGas","type":"uint256"},{"internalType":"uint256","name":"maxPriorityFeePerGas","type":"uint256"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct UserOperation","name":"userOp","type":"tuple"}],"name":"simulateValidation","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"unlockStake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"withdrawAddress","type":"address"}],"name":"withdrawStake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"withdrawAddress","type":"address"},{"internalType":"uint256","name":"withdrawAmount","type":"uint256"}],"name":"withdrawTo","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"addStake(uint32)":"0396cb60","balanceOf(address)":"70a08231","depositTo(address)":"b760faf9","getDepositInfo(address)":"5287ce12","getNonce(address,uint192)":"35567e1a","getSenderAddress(bytes)":"9b249f69","getUserOpHash((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))":"a6193531","handleAggregatedOps(((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],address,bytes)[],address)":"4b1d7cf5","handleOps((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],address)":"1fad948c","incrementNonce(uint192)":"0bd28e3b","simulateHandleOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),address,bytes)":"d6383f94","simulateValidation((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))":"ee219423","unlockStake()":"bb9fe6bf","withdrawStake(address)":"c23a5cea","withdrawTo(address,uint256)":"205c2878"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"preOpGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"paid\",\"type\":\"uint256\"},{\"internalType\":\"uint48\",\"name\":\"validAfter\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"validUntil\",\"type\":\"uint48\"},{\"internalType\":\"bool\",\"name\":\"targetSuccess\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"targetResult\",\"type\":\"bytes\"}],\"name\":\"ExecutionResult\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"opIndex\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"FailedOp\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"SenderAddressResult\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"aggregator\",\"type\":\"address\"}],\"name\":\"SignatureValidationFailed\",\"type\":\"error\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"preOpGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"prefund\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"sigFailed\",\"type\":\"bool\"},{\"internalType\":\"uint48\",\"name\":\"validAfter\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"validUntil\",\"type\":\"uint48\"},{\"internalType\":\"bytes\",\"name\":\"paymasterContext\",\"type\":\"bytes\"}],\"internalType\":\"struct IEntryPoint.ReturnInfo\",\"name\":\"returnInfo\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"stake\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unstakeDelaySec\",\"type\":\"uint256\"}],\"internalType\":\"struct IStakeManager.StakeInfo\",\"name\":\"senderInfo\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"stake\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unstakeDelaySec\",\"type\":\"uint256\"}],\"internalType\":\"struct IStakeManager.StakeInfo\",\"name\":\"factoryInfo\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"stake\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unstakeDelaySec\",\"type\":\"uint256\"}],\"internalType\":\"struct IStakeManager.StakeInfo\",\"name\":\"paymasterInfo\",\"type\":\"tuple\"}],\"name\":\"ValidationResult\",\"type\":\"error\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"preOpGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"prefund\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"sigFailed\",\"type\":\"bool\"},{\"internalType\":\"uint48\",\"name\":\"validAfter\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"validUntil\",\"type\":\"uint48\"},{\"internalType\":\"bytes\",\"name\":\"paymasterContext\",\"type\":\"bytes\"}],\"internalType\":\"struct IEntryPoint.ReturnInfo\",\"name\":\"returnInfo\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"stake\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unstakeDelaySec\",\"type\":\"uint256\"}],\"internalType\":\"struct IStakeManager.StakeInfo\",\"name\":\"senderInfo\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"stake\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unstakeDelaySec\",\"type\":\"uint256\"}],\"internalType\":\"struct IStakeManager.StakeInfo\",\"name\":\"factoryInfo\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"stake\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unstakeDelaySec\",\"type\":\"uint256\"}],\"internalType\":\"struct IStakeManager.StakeInfo\",\"name\":\"paymasterInfo\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"aggregator\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"stake\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unstakeDelaySec\",\"type\":\"uint256\"}],\"internalType\":\"struct IStakeManager.StakeInfo\",\"name\":\"stakeInfo\",\"type\":\"tuple\"}],\"internalType\":\"struct IEntryPoint.AggregatorStakeInfo\",\"name\":\"aggregatorInfo\",\"type\":\"tuple\"}],\"name\":\"ValidationResultWithAggregation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"paymaster\",\"type\":\"address\"}],\"name\":\"AccountDeployed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"BeforeExecution\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalDeposit\",\"type\":\"uint256\"}],\"name\":\"Deposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"aggregator\",\"type\":\"address\"}],\"name\":\"SignatureAggregatorChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalStaked\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"unstakeDelaySec\",\"type\":\"uint256\"}],\"name\":\"StakeLocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"withdrawTime\",\"type\":\"uint256\"}],\"name\":\"StakeUnlocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"StakeWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"paymaster\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"actualGasCost\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"actualGasUsed\",\"type\":\"uint256\"}],\"name\":\"UserOperationEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"revertReason\",\"type\":\"bytes\"}],\"name\":\"UserOperationRevertReason\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_unstakeDelaySec\",\"type\":\"uint32\"}],\"name\":\"addStake\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"depositTo\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getDepositInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"uint112\",\"name\":\"deposit\",\"type\":\"uint112\"},{\"internalType\":\"bool\",\"name\":\"staked\",\"type\":\"bool\"},{\"internalType\":\"uint112\",\"name\":\"stake\",\"type\":\"uint112\"},{\"internalType\":\"uint32\",\"name\":\"unstakeDelaySec\",\"type\":\"uint32\"},{\"internalType\":\"uint48\",\"name\":\"withdrawTime\",\"type\":\"uint48\"}],\"internalType\":\"struct IStakeManager.DepositInfo\",\"name\":\"info\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint192\",\"name\":\"key\",\"type\":\"uint192\"}],\"name\":\"getNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"}],\"name\":\"getSenderAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"}],\"name\":\"getUserOpHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation[]\",\"name\":\"userOps\",\"type\":\"tuple[]\"},{\"internalType\":\"contract IAggregator\",\"name\":\"aggregator\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct IEntryPoint.UserOpsPerAggregator[]\",\"name\":\"opsPerAggregator\",\"type\":\"tuple[]\"},{\"internalType\":\"address payable\",\"name\":\"beneficiary\",\"type\":\"address\"}],\"name\":\"handleAggregatedOps\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation[]\",\"name\":\"ops\",\"type\":\"tuple[]\"},{\"internalType\":\"address payable\",\"name\":\"beneficiary\",\"type\":\"address\"}],\"name\":\"handleOps\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint192\",\"name\":\"key\",\"type\":\"uint192\"}],\"name\":\"incrementNonce\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation\",\"name\":\"op\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"targetCallData\",\"type\":\"bytes\"}],\"name\":\"simulateHandleOp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"}],\"name\":\"simulateValidation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unlockStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"}],\"name\":\"withdrawStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"withdrawAmount\",\"type\":\"uint256\"}],\"name\":\"withdrawTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"FailedOp(uint256,string)\":[{\"params\":{\"opIndex\":\"- index into the array of ops to the failed one (in simulateValidation, this is always zero)\",\"reason\":\"- revert reason      The string starts with a unique code \\\"AAmn\\\", where \\\"m\\\" is \\\"1\\\" for factory, \\\"2\\\" for account and \\\"3\\\" for paymaster issues,      so a failure can be attributed to the correct entity.   Should be caught in off-chain handleOps simulation and not happen on-chain.   Useful for mitigating DoS attempts against batchers or for troubleshooting of factory/account/paymaster reverts.\"}}],\"ValidationResult((uint256,uint256,bool,uint48,uint48,bytes),(uint256,uint256),(uint256,uint256),(uint256,uint256))\":[{\"params\":{\"factoryInfo\":\"stake information about the factory (if any)\",\"paymasterInfo\":\"stake information about the paymaster (if any)\",\"returnInfo\":\"gas and time-range returned values\",\"senderInfo\":\"stake information about the sender\"}}],\"ValidationResultWithAggregation((uint256,uint256,bool,uint48,uint48,bytes),(uint256,uint256),(uint256,uint256),(uint256,uint256),(address,(uint256,uint256)))\":[{\"params\":{\"aggregatorInfo\":\"signature aggregation info (if the account requires signature aggregator)      bundler MUST use it to verify the signature, or reject the UserOperation\",\"factoryInfo\":\"stake information about the factory (if any)\",\"paymasterInfo\":\"stake information about the paymaster (if any)\",\"returnInfo\":\"gas and time-range returned values\",\"senderInfo\":\"stake information about the sender\"}}]},\"events\":{\"AccountDeployed(bytes32,address,address,address)\":{\"params\":{\"factory\":\"the factory used to deploy this account (in the initCode)\",\"paymaster\":\"the paymaster used by this UserOp\",\"sender\":\"the account that is deployed\",\"userOpHash\":\"the userOp that deployed this account. UserOperationEvent will follow.\"}},\"UserOperationRevertReason(bytes32,address,uint256,bytes)\":{\"params\":{\"nonce\":\"the nonce used in the request\",\"revertReason\":\"- the return bytes from the (reverted) call to \\\"callData\\\".\",\"sender\":\"the sender of this request\",\"userOpHash\":\"the request unique identifier.\"}}},\"kind\":\"dev\",\"methods\":{\"addStake(uint32)\":{\"params\":{\"_unstakeDelaySec\":\"the new lock duration before the deposit can be withdrawn.\"}},\"balanceOf(address)\":{\"returns\":{\"_0\":\"the deposit (for gas payment) of the account\"}},\"getDepositInfo(address)\":{\"returns\":{\"info\":\"- full deposit information of given account\"}},\"getNonce(address,uint192)\":{\"params\":{\"key\":\"the high 192 bit of the nonce\",\"sender\":\"the account address\"},\"returns\":{\"nonce\":\"a full nonce to pass for next UserOp with this sender.\"}},\"getSenderAddress(bytes)\":{\"params\":{\"initCode\":\"the constructor code to be passed into the UserOperation.\"}},\"handleAggregatedOps(((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],address,bytes)[],address)\":{\"params\":{\"beneficiary\":\"the address to receive the fees\",\"opsPerAggregator\":\"the operations to execute, grouped by aggregator (or address(0) for no-aggregator accounts)\"}},\"handleOps((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],address)\":{\"params\":{\"beneficiary\":\"the address to receive the fees\",\"ops\":\"the operations to execute\"}},\"simulateHandleOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),address,bytes)\":{\"params\":{\"op\":\"the UserOperation to simulate\",\"target\":\"if nonzero, a target address to call after userop simulation. If called, the targetSuccess and targetResult        are set to the return from that call.\",\"targetCallData\":\"callData to pass to target address\"}},\"simulateValidation((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))\":{\"details\":\"this method always revert. Successful result is ValidationResult error. other errors are failures.The node must also verify it doesn't use banned opcodes, and that it doesn't reference storage outside the account's data.\",\"params\":{\"userOp\":\"the user operation to validate.\"}},\"withdrawStake(address)\":{\"params\":{\"withdrawAddress\":\"the address to send withdrawn value.\"}},\"withdrawTo(address,uint256)\":{\"params\":{\"withdrawAddress\":\"the address to send withdrawn value.\",\"withdrawAmount\":\"the amount to withdraw.\"}}},\"version\":1},\"userdoc\":{\"errors\":{\"ExecutionResult(uint256,uint256,uint48,uint48,bool,bytes)\":[{\"notice\":\"return value of simulateHandleOp\"}],\"FailedOp(uint256,string)\":[{\"notice\":\"a custom revert error of handleOps, to identify the offending op.  NOTE: if simulateValidation passes successfully, there should be no reason for handleOps to fail on it.\"}],\"SenderAddressResult(address)\":[{\"notice\":\"return value of getSenderAddress\"}],\"SignatureValidationFailed(address)\":[{\"notice\":\"error case when a signature aggregator fails to verify the aggregated signature it had created.\"}],\"ValidationResult((uint256,uint256,bool,uint48,uint48,bytes),(uint256,uint256),(uint256,uint256),(uint256,uint256))\":[{\"notice\":\"Successful result from simulateValidation.\"}],\"ValidationResultWithAggregation((uint256,uint256,bool,uint48,uint48,bytes),(uint256,uint256),(uint256,uint256),(uint256,uint256),(address,(uint256,uint256)))\":[{\"notice\":\"Successful result from simulateValidation, if the account returns a signature aggregator\"}]},\"events\":{\"AccountDeployed(bytes32,address,address,address)\":{\"notice\":\"account \\\"sender\\\" was deployed.\"},\"BeforeExecution()\":{\"notice\":\"an event emitted by handleOps(), before starting the execution loop. any event emitted before this event, is part of the validation.\"},\"SignatureAggregatorChanged(address)\":{\"notice\":\"signature aggregator used by the following UserOperationEvents within this bundle.\"},\"StakeLocked(address,uint256,uint256)\":{\"notice\":\"Emitted when stake or unstake delay are modified\"},\"StakeUnlocked(address,uint256)\":{\"notice\":\"Emitted once a stake is scheduled for withdrawal\"},\"UserOperationRevertReason(bytes32,address,uint256,bytes)\":{\"notice\":\"An event emitted if the UserOperation \\\"callData\\\" reverted with non-zero length\"}},\"kind\":\"user\",\"methods\":{\"addStake(uint32)\":{\"notice\":\"add to the account's stake - amount and delay any pending unstake is first cancelled.\"},\"depositTo(address)\":{\"notice\":\"add to the deposit of the given account\"},\"getNonce(address,uint192)\":{\"notice\":\"Return the next nonce for this sender. Within a given key, the nonce values are sequenced (starting with zero, and incremented by one on each userop) But UserOp with different keys can come with arbitrary order. \"},\"getSenderAddress(bytes)\":{\"notice\":\"Get counterfactual sender address.  Calculate the sender contract address that will be generated by the initCode and salt in the UserOperation. this method always revert, and returns the address in SenderAddressResult error\"},\"getUserOpHash((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))\":{\"notice\":\"generate a request Id - unique identifier for this request. the request ID is a hash over the content of the userOp (except the signature), the entrypoint and the chainid.\"},\"handleAggregatedOps(((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],address,bytes)[],address)\":{\"notice\":\"Execute a batch of UserOperation with Aggregators\"},\"handleOps((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],address)\":{\"notice\":\"Execute a batch of UserOperation. no signature aggregator is used. if any account requires an aggregator (that is, it returned an aggregator when performing simulateValidation), then handleAggregatedOps() must be used instead.\"},\"incrementNonce(uint192)\":{\"notice\":\"Manually increment the nonce of the sender. This method is exposed just for completeness.. Account does NOT need to call it, neither during validation, nor elsewhere, as the EntryPoint will update the nonce regardless. Possible use-case is call it with various keys to \\\"initialize\\\" their nonces to one, so that future UserOperations will not pay extra for the first transaction with a given key.\"},\"simulateHandleOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),address,bytes)\":{\"notice\":\"simulate full execution of a UserOperation (including both validation and target execution) this method will always revert with \\\"ExecutionResult\\\". it performs full validation of the UserOperation, but ignores signature error. an optional target address is called after the userop succeeds, and its value is returned (before the entire call is reverted) Note that in order to collect the the success/failure of the target call, it must be executed with trace enabled to track the emitted events.\"},\"simulateValidation((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))\":{\"notice\":\"Simulate a call to account.validateUserOp and paymaster.validatePaymasterUserOp.\"},\"unlockStake()\":{\"notice\":\"attempt to unlock the stake. the value can be withdrawn (using withdrawStake) after the unstake delay.\"},\"withdrawStake(address)\":{\"notice\":\"withdraw from the (unlocked) stake. must first call unlockStake and wait for the unstakeDelay to pass\"},\"withdrawTo(address,uint256)\":{\"notice\":\"withdraw from the deposit.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IEntryPoint.sol\":\"IEntryPoint\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"contracts/core/Helpers.sol\":{\"keccak256\":\"0x0f5d5a052ba4cecc4699ca4eb0bd21787ab0a5122e3aaa33283e8009dcfba576\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0055598a026e7ab7fd22c900087c08552bfec84350854f337be786191ff571b5\",\"dweb:/ipfs/QmcVFLLLSM2TyaXKbuA718EJygHkvUBgJiAkC6rqCXjMoM\"]},\"contracts/interfaces/IAggregator.sol\":{\"keccak256\":\"0x882c23df83ff9eb7b6d8da9a0a2aace7ae05ceb5045bab3bcfd8424ad5e3fb94\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26515cb73553340a1347de257e9ec18176c4e1d0743f2b45b192e62fb5da9db2\",\"dweb:/ipfs/QmcVSodmViGq7QR41fzuVkxgzUfoKp14SP42EYeURPudL6\"]},\"contracts/interfaces/IEntryPoint.sol\":{\"keccak256\":\"0x789c29158831da49cb68476ed9fd474b3a96fd07833f9d01c52d96662d7ee5aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1d627a6cd0b63376627e13042f01cdf780150622443a272922f8cd9762cf86b\",\"dweb:/ipfs/Qmci2frpA8wJfmCT7p88LJSh3765WLHCL1EZbpb8C7rkWz\"]},\"contracts/interfaces/INonceManager.sol\":{\"keccak256\":\"0x559e47ae829da7b717f04aad27ea24cad0d3590dcefb71d3b5f19a79f4ad1069\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a193c6d6e35145860e9034f21302be5352239bb92d0cfb0d2a7d0dbb4d4267a2\",\"dweb:/ipfs/QmVuBq5LYBwCXXUdipdomxq82v2ybh73sBCm89AW1vvg6W\"]},\"contracts/interfaces/IStakeManager.sol\":{\"keccak256\":\"0x68fdee5452a594c7f5f2dd80b3637e9cad71fbad4b255d60cd2fa2d98290fb56\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://82407c1d978530b1f4de0abc0c03044e7b618baeb6e090612250863d94307671\",\"dweb:/ipfs/QmYYyZE2j9XVAPxoZXwMx3HGkG8XQ4C8y55dDWLMSrYJZy\"]},\"contracts/interfaces/UserOperation.sol\":{\"keccak256\":\"0x54bfc3bb0ec261c343803cadb5ba08befc65ad40d6e6d6417cb267d1e1437aaf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a115de9d38f45b40cbccdda415d43ac2efb618afcd4d4dab1d434b48b537df3\",\"dweb:/ipfs/QmehKyXL5gWE4FkwrB5QAfDzqFcTWjBUk2nULb3WoBDXcN\"]}},\"version\":1}"}},"contracts/interfaces/INonceManager.sol":{"INonceManager":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint192","name":"key","type":"uint192"}],"name":"getNonce","outputs":[{"internalType":"uint256","name":"nonce","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint192","name":"key","type":"uint192"}],"name":"incrementNonce","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getNonce(address,uint192)":"35567e1a","incrementNonce(uint192)":"0bd28e3b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint192\",\"name\":\"key\",\"type\":\"uint192\"}],\"name\":\"getNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint192\",\"name\":\"key\",\"type\":\"uint192\"}],\"name\":\"incrementNonce\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getNonce(address,uint192)\":{\"params\":{\"key\":\"the high 192 bit of the nonce\",\"sender\":\"the account address\"},\"returns\":{\"nonce\":\"a full nonce to pass for next UserOp with this sender.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getNonce(address,uint192)\":{\"notice\":\"Return the next nonce for this sender. Within a given key, the nonce values are sequenced (starting with zero, and incremented by one on each userop) But UserOp with different keys can come with arbitrary order. \"},\"incrementNonce(uint192)\":{\"notice\":\"Manually increment the nonce of the sender. This method is exposed just for completeness.. Account does NOT need to call it, neither during validation, nor elsewhere, as the EntryPoint will update the nonce regardless. Possible use-case is call it with various keys to \\\"initialize\\\" their nonces to one, so that future UserOperations will not pay extra for the first transaction with a given key.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/INonceManager.sol\":\"INonceManager\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"contracts/interfaces/INonceManager.sol\":{\"keccak256\":\"0x559e47ae829da7b717f04aad27ea24cad0d3590dcefb71d3b5f19a79f4ad1069\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a193c6d6e35145860e9034f21302be5352239bb92d0cfb0d2a7d0dbb4d4267a2\",\"dweb:/ipfs/QmVuBq5LYBwCXXUdipdomxq82v2ybh73sBCm89AW1vvg6W\"]}},\"version\":1}"}},"contracts/interfaces/IPaymaster.sol":{"IPaymaster":{"abi":[{"inputs":[{"internalType":"enum IPaymaster.PostOpMode","name":"mode","type":"uint8"},{"internalType":"bytes","name":"context","type":"bytes"},{"internalType":"uint256","name":"actualGasCost","type":"uint256"}],"name":"postOp","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"uint256","name":"callGasLimit","type":"uint256"},{"internalType":"uint256","name":"verificationGasLimit","type":"uint256"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"uint256","name":"maxFeePerGas","type":"uint256"},{"internalType":"uint256","name":"maxPriorityFeePerGas","type":"uint256"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct UserOperation","name":"userOp","type":"tuple"},{"internalType":"bytes32","name":"userOpHash","type":"bytes32"},{"internalType":"uint256","name":"maxCost","type":"uint256"}],"name":"validatePaymasterUserOp","outputs":[{"internalType":"bytes","name":"context","type":"bytes"},{"internalType":"uint256","name":"validationData","type":"uint256"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"postOp(uint8,bytes,uint256)":"a9a23409","validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)":"f465c77e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"enum IPaymaster.PostOpMode\",\"name\":\"mode\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"context\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"actualGasCost\",\"type\":\"uint256\"}],\"name\":\"postOp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"maxCost\",\"type\":\"uint256\"}],\"name\":\"validatePaymasterUserOp\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"context\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"validationData\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"postOp(uint8,bytes,uint256)\":{\"params\":{\"actualGasCost\":\"- actual gas used so far (without this postOp call).\",\"context\":\"- the context value returned by validatePaymasterUserOp\",\"mode\":\"enum with the following options:      opSucceeded - user operation succeeded.      opReverted  - user op reverted. still has to pay for gas.      postOpReverted - user op succeeded, but caused postOp (in mode=opSucceeded) to revert.                       Now this is the 2nd call, after user's op was deliberately reverted.\"}},\"validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)\":{\"params\":{\"maxCost\":\"the maximum cost of this transaction (based on maximum gas and gas price from userOp)\",\"userOp\":\"the user operation\",\"userOpHash\":\"hash of the user's request data.\"},\"returns\":{\"context\":\"value to send to a postOp      zero length to signify postOp is not required.\",\"validationData\":\"signature and time-range of this operation, encoded the same as the return value of validateUserOperation      <20-byte> sigAuthorizer - 0 for valid signature, 1 to mark signature failure,         otherwise, an address of an \\\"authorizer\\\" contract.      <6-byte> validUntil - last timestamp this operation is valid. 0 for \\\"indefinite\\\"      <6-byte> validAfter - first timestamp this operation is valid      Note that the validation code cannot use block.timestamp (or block.number) directly.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"postOp(uint8,bytes,uint256)\":{\"notice\":\"post-operation handler. Must verify sender is the entryPoint\"},\"validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)\":{\"notice\":\"payment validation: check if paymaster agrees to pay. Must verify sender is the entryPoint. Revert to reject this request. Note that bundlers will reject this method if it changes the state, unless the paymaster is trusted (whitelisted) The paymaster pre-pays using its deposit, and receive back a refund after the postOp method returns.\"}},\"notice\":\"the interface exposed by a paymaster contract, who agrees to pay the gas for user's operations. a paymaster must hold a stake to cover the required entrypoint stake and also the gas for the transaction.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IPaymaster.sol\":\"IPaymaster\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"contracts/core/Helpers.sol\":{\"keccak256\":\"0x0f5d5a052ba4cecc4699ca4eb0bd21787ab0a5122e3aaa33283e8009dcfba576\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0055598a026e7ab7fd22c900087c08552bfec84350854f337be786191ff571b5\",\"dweb:/ipfs/QmcVFLLLSM2TyaXKbuA718EJygHkvUBgJiAkC6rqCXjMoM\"]},\"contracts/interfaces/IPaymaster.sol\":{\"keccak256\":\"0xe40ea43ee5994c359b8c2d6dc09595ec1b0c4315104a812cfebbb71cd26f6d62\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb4db6bbcf2ae41ac36344cb9ae6d7f2f024f6ee093099c336a240cb13c5d041\",\"dweb:/ipfs/QmYbm2BVTHbpPaiSyUJ8W3wD3My7Q2VWDtYjHWv65qWW1M\"]},\"contracts/interfaces/UserOperation.sol\":{\"keccak256\":\"0x54bfc3bb0ec261c343803cadb5ba08befc65ad40d6e6d6417cb267d1e1437aaf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a115de9d38f45b40cbccdda415d43ac2efb618afcd4d4dab1d434b48b537df3\",\"dweb:/ipfs/QmehKyXL5gWE4FkwrB5QAfDzqFcTWjBUk2nULb3WoBDXcN\"]}},\"version\":1}"}},"contracts/interfaces/IStakeManager.sol":{"IStakeManager":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"totalDeposit","type":"uint256"}],"name":"Deposited","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"totalStaked","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"unstakeDelaySec","type":"uint256"}],"name":"StakeLocked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"withdrawTime","type":"uint256"}],"name":"StakeUnlocked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"address","name":"withdrawAddress","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"StakeWithdrawn","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"address","name":"withdrawAddress","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Withdrawn","type":"event"},{"inputs":[{"internalType":"uint32","name":"_unstakeDelaySec","type":"uint32"}],"name":"addStake","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"depositTo","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getDepositInfo","outputs":[{"components":[{"internalType":"uint112","name":"deposit","type":"uint112"},{"internalType":"bool","name":"staked","type":"bool"},{"internalType":"uint112","name":"stake","type":"uint112"},{"internalType":"uint32","name":"unstakeDelaySec","type":"uint32"},{"internalType":"uint48","name":"withdrawTime","type":"uint48"}],"internalType":"struct IStakeManager.DepositInfo","name":"info","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"unlockStake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"withdrawAddress","type":"address"}],"name":"withdrawStake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"withdrawAddress","type":"address"},{"internalType":"uint256","name":"withdrawAmount","type":"uint256"}],"name":"withdrawTo","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"addStake(uint32)":"0396cb60","balanceOf(address)":"70a08231","depositTo(address)":"b760faf9","getDepositInfo(address)":"5287ce12","unlockStake()":"bb9fe6bf","withdrawStake(address)":"c23a5cea","withdrawTo(address,uint256)":"205c2878"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalDeposit\",\"type\":\"uint256\"}],\"name\":\"Deposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalStaked\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"unstakeDelaySec\",\"type\":\"uint256\"}],\"name\":\"StakeLocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"withdrawTime\",\"type\":\"uint256\"}],\"name\":\"StakeUnlocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"StakeWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_unstakeDelaySec\",\"type\":\"uint32\"}],\"name\":\"addStake\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"depositTo\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getDepositInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"uint112\",\"name\":\"deposit\",\"type\":\"uint112\"},{\"internalType\":\"bool\",\"name\":\"staked\",\"type\":\"bool\"},{\"internalType\":\"uint112\",\"name\":\"stake\",\"type\":\"uint112\"},{\"internalType\":\"uint32\",\"name\":\"unstakeDelaySec\",\"type\":\"uint32\"},{\"internalType\":\"uint48\",\"name\":\"withdrawTime\",\"type\":\"uint48\"}],\"internalType\":\"struct IStakeManager.DepositInfo\",\"name\":\"info\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unlockStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"}],\"name\":\"withdrawStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"withdrawAmount\",\"type\":\"uint256\"}],\"name\":\"withdrawTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addStake(uint32)\":{\"params\":{\"_unstakeDelaySec\":\"the new lock duration before the deposit can be withdrawn.\"}},\"balanceOf(address)\":{\"returns\":{\"_0\":\"the deposit (for gas payment) of the account\"}},\"getDepositInfo(address)\":{\"returns\":{\"info\":\"- full deposit information of given account\"}},\"withdrawStake(address)\":{\"params\":{\"withdrawAddress\":\"the address to send withdrawn value.\"}},\"withdrawTo(address,uint256)\":{\"params\":{\"withdrawAddress\":\"the address to send withdrawn value.\",\"withdrawAmount\":\"the amount to withdraw.\"}}},\"version\":1},\"userdoc\":{\"events\":{\"StakeLocked(address,uint256,uint256)\":{\"notice\":\"Emitted when stake or unstake delay are modified\"},\"StakeUnlocked(address,uint256)\":{\"notice\":\"Emitted once a stake is scheduled for withdrawal\"}},\"kind\":\"user\",\"methods\":{\"addStake(uint32)\":{\"notice\":\"add to the account's stake - amount and delay any pending unstake is first cancelled.\"},\"depositTo(address)\":{\"notice\":\"add to the deposit of the given account\"},\"unlockStake()\":{\"notice\":\"attempt to unlock the stake. the value can be withdrawn (using withdrawStake) after the unstake delay.\"},\"withdrawStake(address)\":{\"notice\":\"withdraw from the (unlocked) stake. must first call unlockStake and wait for the unstakeDelay to pass\"},\"withdrawTo(address,uint256)\":{\"notice\":\"withdraw from the deposit.\"}},\"notice\":\"manage deposits and stakes. deposit is just a balance used to pay for UserOperations (either by a paymaster or an account) stake is value locked for at least \\\"unstakeDelay\\\" by the staked entity. \",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IStakeManager.sol\":\"IStakeManager\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IStakeManager.sol\":{\"keccak256\":\"0x68fdee5452a594c7f5f2dd80b3637e9cad71fbad4b255d60cd2fa2d98290fb56\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://82407c1d978530b1f4de0abc0c03044e7b618baeb6e090612250863d94307671\",\"dweb:/ipfs/QmYYyZE2j9XVAPxoZXwMx3HGkG8XQ4C8y55dDWLMSrYJZy\"]}},\"version\":1}"}},"contracts/interfaces/UserOperation.sol":{"UserOperationLib":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122019b593ee9b7fea04aa2ae568c0a17e5d23800b6477a054c7c68ff7039754c92a64736f6c63430008120033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NOT 0xB5 SWAP4 0xEE SWAP12 PUSH32 0xEA04AA2AE568C0A17E5D23800B6477A054C7C68FF7039754C92A64736F6C6343 STOP ADDMOD SLT STOP CALLER ","sourceMap":"1627:2115:28:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1627:2115:28;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122019b593ee9b7fea04aa2ae568c0a17e5d23800b6477a054c7c68ff7039754c92a64736f6c63430008120033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NOT 0xB5 SWAP4 0xEE SWAP12 PUSH32 0xEA04AA2AE568C0A17E5D23800B6477A054C7C68FF7039754C92A64736F6C6343 STOP ADDMOD SLT STOP CALLER ","sourceMap":"1627:2115:28:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Utility functions helpful when working with UserOperation structs.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/UserOperation.sol\":\"UserOperationLib\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"contracts/core/Helpers.sol\":{\"keccak256\":\"0x0f5d5a052ba4cecc4699ca4eb0bd21787ab0a5122e3aaa33283e8009dcfba576\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0055598a026e7ab7fd22c900087c08552bfec84350854f337be786191ff571b5\",\"dweb:/ipfs/QmcVFLLLSM2TyaXKbuA718EJygHkvUBgJiAkC6rqCXjMoM\"]},\"contracts/interfaces/UserOperation.sol\":{\"keccak256\":\"0x54bfc3bb0ec261c343803cadb5ba08befc65ad40d6e6d6417cb267d1e1437aaf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a115de9d38f45b40cbccdda415d43ac2efb618afcd4d4dab1d434b48b537df3\",\"dweb:/ipfs/QmehKyXL5gWE4FkwrB5QAfDzqFcTWjBUk2nULb3WoBDXcN\"]}},\"version\":1}"}},"contracts/samples/FactoryManager.sol":{"FactoryManager":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"factoryId","type":"uint256"},{"indexed":false,"internalType":"address","name":"factoryAddress","type":"address"}],"name":"FactoryCreated","type":"event"},{"inputs":[],"name":"ENTRY_POINT_ADDRESS","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"factoryAddress","type":"address"},{"internalType":"uint32","name":"unstakeDelaySec","type":"uint32"}],"name":"addStake","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"createFactory","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"factories","outputs":[{"internalType":"contract SimpleAccountFactory","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"factoryMap","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getFactories","outputs":[{"internalType":"contract SimpleAccountFactory[]","name":"coll","type":"address[]"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6080604052600080546001600160a01b031916735ff137d4b0fdcd49dca30c7cf57e578a026d278917905534801561003657600080fd5b50613a2d806100466000396000f3fe6080604052600436106100655760003560e01c80639ab4a98c116100435780639ab4a98c146100eb578063a905054d14610100578063efa8d3381461012d57600080fd5b8063451711591461006a578063672383c41461007f5780637e6cbb6a146100c9575b600080fd5b61007d610078366004610406565b610170565b005b34801561008b57600080fd5b5061009f61009a366004610461565b6101fe565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b3480156100d557600080fd5b506100de610235565b6040516100c0919061047a565b3480156100f757600080fd5b5061007d6102a4565b34801561010c57600080fd5b5060005461009f9073ffffffffffffffffffffffffffffffffffffffff1681565b34801561013957600080fd5b5061009f610148366004610461565b60036020526000908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b6040517f0396cb6000000000000000000000000000000000000000000000000000000000815263ffffffff82166004820152829073ffffffffffffffffffffffffffffffffffffffff821690630396cb609034906024016000604051808303818588803b1580156101e057600080fd5b505af11580156101f4573d6000803e3d6000fd5b5050505050505050565b6002818154811061020e57600080fd5b60009182526020909120015473ffffffffffffffffffffffffffffffffffffffff16905081565b6060600280548060200260200160405190810160405280929190818152602001828054801561029a57602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff16815260019091019060200180831161026f575b5050505050905090565b60006102af60015490565b60008054604051929350909173ffffffffffffffffffffffffffffffffffffffff909116906102dd906103f9565b73ffffffffffffffffffffffffffffffffffffffff9091168152602001604051809103906000f080158015610316573d6000803e3d6000fd5b506002805460018082019092557f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace01805473ffffffffffffffffffffffffffffffffffffffff84167fffffffffffffffffffffffff0000000000000000000000000000000000000000918216811790925560008681526003602052604090208054909116909117905580548101905590506040805183815273ffffffffffffffffffffffffffffffffffffffff831660208201527fefa81a4569551eed9daab49e121e3b5f2d9a57e6aba5992fad6daae99b3b36a5910160405180910390a15050565b613523806104d583390190565b6000806040838503121561041957600080fd5b823573ffffffffffffffffffffffffffffffffffffffff8116811461043d57600080fd5b9150602083013563ffffffff8116811461045657600080fd5b809150509250929050565b60006020828403121561047357600080fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b818110156104c857835173ffffffffffffffffffffffffffffffffffffffff1683529284019291840191600101610496565b5090969550505050505056fe60c060405234801561001057600080fd5b5060405161352338038061352383398101604081905261002f9161008d565b8060405161003c90610080565b6001600160a01b039091168152602001604051809103906000f080158015610068573d6000803e3d6000fd5b506001600160a01b039081166080521660a0526100bd565b6125a680610f7d83390190565b60006020828403121561009f57600080fd5b81516001600160a01b03811681146100b657600080fd5b9392505050565b60805160a051610e876100f66000396000818161013c015261019201526000818160930152818161027601526104200152610e876000f3fe608060405260043610620000615760003560e01c80635fbfb9cf11620000485780635fbfb9cf14620000de5780638cb84e181462000103578063b0d691fe146200012857600080fd5b80630396cb60146200006657806311464fbe146200007f575b600080fd5b6200007d620000773660046200056c565b6200015e565b005b3480156200008c57600080fd5b50620000b57f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b348015620000eb57600080fd5b50620000b5620000fd36600462000594565b6200020a565b3480156200011057600080fd5b50620000b56200012236600462000594565b620003b3565b3480156200013557600080fd5b50620000b57f000000000000000000000000000000000000000000000000000000000000000081565b6040517f0396cb6000000000000000000000000000000000000000000000000000000000815263ffffffff821660048201527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1690630396cb609034906024016000604051808303818588803b158015620001ed57600080fd5b505af115801562000202573d6000803e3d6000fd5b505050505050565b6000806200021760005490565b90506000620002278585620003b3565b905073ffffffffffffffffffffffffffffffffffffffff81163b80156200025357509150620003ad9050565b60405173ffffffffffffffffffffffffffffffffffffffff8716602482015285907f000000000000000000000000000000000000000000000000000000000000000090604401604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fc4d66de800000000000000000000000000000000000000000000000000000000179052516200031b906200055e565b6200032892919062000601565b8190604051809103906000f590508015801562000349573d6000803e3d6000fd5b5093506200035b600080546001019055565b6040805184815273ffffffffffffffffffffffffffffffffffffffff841660208201527f7757890bcab34d673dfca6b71df1b57f75a2fe4231d6e8de726caf534ab1fdd6910160405180910390a15050505b92915050565b6000620005248260001b60405180602001620003cf906200055e565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe082820381018352601f90910116604081905273ffffffffffffffffffffffffffffffffffffffff871660248201527f000000000000000000000000000000000000000000000000000000000000000090604401604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152918152602080830180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fc4d66de8000000000000000000000000000000000000000000000000000000001790529051620004ca9392910162000601565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529082905262000508929160200162000671565b604051602081830303815290604052805190602001206200052b565b9392505050565b6000620005248383306000604051836040820152846020820152828152600b8101905060ff815360559020949350505050565b6107ad80620006a583390190565b6000602082840312156200057f57600080fd5b813563ffffffff811681146200052457600080fd5b60008060408385031215620005a857600080fd5b823573ffffffffffffffffffffffffffffffffffffffff81168114620005cd57600080fd5b946020939093013593505050565b60005b83811015620005f8578181015183820152602001620005de565b50506000910152565b73ffffffffffffffffffffffffffffffffffffffff8316815260406020820152600082518060408401526200063e816060850160208701620005db565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016919091016060019392505050565b6000835162000685818460208801620005db565b8351908301906200069b818360208801620005db565b0194935050505056fe60806040526040516107ad3803806107ad83398101604081905261002291610319565b61002e82826000610035565b5050610436565b61003e8361006b565b60008251118061004b5750805b156100665761006483836100ab60201b6100291760201c565b505b505050565b610074816100d7565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606100d08383604051806060016040528060278152602001610786602791396101a9565b9392505050565b6100ea8161022260201b6100551760201c565b6101515760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b60648201526084015b60405180910390fd5b806101887f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b61023160201b6100711760201c565b80546001600160a01b0319166001600160a01b039290921691909117905550565b6060600080856001600160a01b0316856040516101c691906103e7565b600060405180830381855af49150503d8060008114610201576040519150601f19603f3d011682016040523d82523d6000602084013e610206565b606091505b50909250905061021886838387610234565b9695505050505050565b6001600160a01b03163b151590565b90565b606083156102a357825160000361029c576001600160a01b0385163b61029c5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610148565b50816102ad565b6102ad83836102b5565b949350505050565b8151156102c55781518083602001fd5b8060405162461bcd60e51b81526004016101489190610403565b634e487b7160e01b600052604160045260246000fd5b60005b838110156103105781810151838201526020016102f8565b50506000910152565b6000806040838503121561032c57600080fd5b82516001600160a01b038116811461034357600080fd5b60208401519092506001600160401b038082111561036057600080fd5b818501915085601f83011261037457600080fd5b815181811115610386576103866102df565b604051601f8201601f19908116603f011681019083821181831017156103ae576103ae6102df565b816040528281528860208487010111156103c757600080fd5b6103d88360208301602088016102f5565b80955050505050509250929050565b600082516103f98184602087016102f5565b9190910192915050565b60208152600082518060208401526104228160408501602087016102f5565b601f01601f19169190910160400192915050565b610341806104456000396000f3fe60806040523661001357610011610017565b005b6100115b610027610022610074565b6100b9565b565b606061004e83836040518060600160405280602781526020016102e5602791396100dd565b9392505050565b73ffffffffffffffffffffffffffffffffffffffff163b151590565b90565b60006100b47f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5473ffffffffffffffffffffffffffffffffffffffff1690565b905090565b3660008037600080366000845af43d6000803e8080156100d8573d6000f35b3d6000fd5b60606000808573ffffffffffffffffffffffffffffffffffffffff16856040516101079190610277565b600060405180830381855af49150503d8060008114610142576040519150601f19603f3d011682016040523d82523d6000602084013e610147565b606091505b509150915061015886838387610162565b9695505050505050565b606083156101fd5782516000036101f65773ffffffffffffffffffffffffffffffffffffffff85163b6101f6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064015b60405180910390fd5b5081610207565b610207838361020f565b949350505050565b81511561021f5781518083602001fd5b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101ed9190610293565b60005b8381101561026e578181015183820152602001610256565b50506000910152565b60008251610289818460208701610253565b9190910192915050565b60208152600082518060208401526102b2816040850160208701610253565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016919091016040019291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220b6d490c7b0f7d19828a449ea9a4cecbee2e462a603d4de127808117591d9f02564736f6c63430008120033416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220eb3ce247c401307168a8b677733675e96f6f6a51720a8840db994054877dea1764736f6c6343000812003360c0604052306080523480156200001557600080fd5b50604051620025a6380380620025a6833981016040819052620000389162000117565b6001600160a01b03811660a0526200004f62000056565b5062000149565b600054610100900460ff1615620000c35760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60005460ff9081161462000115576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b6000602082840312156200012a57600080fd5b81516001600160a01b03811681146200014257600080fd5b9392505050565b60805160a0516123ea620001bc6000396000818161032f015281816108810152818161092801528181610d4c01528181610f9d01528181610fe40152818161133601526115c801526000818161066b0152818161071b015281816109ec01528181610a9c0152610be501526123ea6000f3fe60806040526004361061012c5760003560e01c806352d1902d116100a5578063bc197c8111610074578063c4d66de811610059578063c4d66de8146103d0578063d087d288146103f0578063f23a6e611461040557600080fd5b8063bc197c8114610373578063c399ec88146103bb57600080fd5b806352d1902d146102b35780638da5cb5b146102c8578063b0d691fe14610320578063b61d27f61461035357600080fd5b80633659cfe6116100fc5780634a58db19116100e15780634a58db19146102785780634d44560d146102805780634f1ef286146102a057600080fd5b80633659cfe61461022a5780633a871cdd1461024a57600080fd5b806223de291461013857806301ffc9a71461015f578063150b7a021461019457806318dfb3c71461020a57600080fd5b3661013357005b600080fd5b34801561014457600080fd5b5061015d610153366004611c92565b5050505050505050565b005b34801561016b57600080fd5b5061017f61017a366004611d43565b61044b565b60405190151581526020015b60405180910390f35b3480156101a057600080fd5b506101d96101af366004611d85565b7f150b7a020000000000000000000000000000000000000000000000000000000095945050505050565b6040517fffffffff00000000000000000000000000000000000000000000000000000000909116815260200161018b565b34801561021657600080fd5b5061015d610225366004611e3d565b610530565b34801561023657600080fd5b5061015d610245366004611ea9565b610654565b34801561025657600080fd5b5061026a610265366004611ec6565b610859565b60405190815260200161018b565b61015d61087f565b34801561028c57600080fd5b5061015d61029b366004611f1a565b61091e565b61015d6102ae366004611f75565b6109d5565b3480156102bf57600080fd5b5061026a610bcb565b3480156102d457600080fd5b506000546102fb9062010000900473ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161018b565b34801561032c57600080fd5b507f00000000000000000000000000000000000000000000000000000000000000006102fb565b34801561035f57600080fd5b5061015d61036e366004612057565b610cb7565b34801561037f57600080fd5b506101d961038e3660046120a7565b7fbc197c810000000000000000000000000000000000000000000000000000000098975050505050505050565b3480156103c757600080fd5b5061026a610d06565b3480156103dc57600080fd5b5061015d6103eb366004611ea9565b610dbd565b3480156103fc57600080fd5b5061026a610f50565b34801561041157600080fd5b506101d9610420366004612145565b7ff23a6e61000000000000000000000000000000000000000000000000000000009695505050505050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f150b7a020000000000000000000000000000000000000000000000000000000014806104de57507fffffffff0000000000000000000000000000000000000000000000000000000082167f4e2312e000000000000000000000000000000000000000000000000000000000145b8061052a57507fffffffff0000000000000000000000000000000000000000000000000000000082167f01ffc9a700000000000000000000000000000000000000000000000000000000145b92915050565b610538610fcc565b8281146105a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f77726f6e67206172726179206c656e677468730000000000000000000000000060448201526064015b60405180910390fd5b60005b8381101561064d5761063b8585838181106105c6576105c66121c1565b90506020020160208101906105db9190611ea9565b60008585858181106105ef576105ef6121c1565b905060200281019061060191906121f0565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061109592505050565b8061064581612255565b9150506105a9565b5050505050565b73ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000163003610719576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201527f64656c656761746563616c6c0000000000000000000000000000000000000000606482015260840161059d565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1661078e7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5473ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff1614610831576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201527f6163746976652070726f78790000000000000000000000000000000000000000606482015260840161059d565b61083a81611112565b604080516000808252602082019092526108569183919061111a565b50565b600061086361131e565b61086d84846113bd565b905061087882611476565b9392505050565b7f00000000000000000000000000000000000000000000000000000000000000006040517fb760faf900000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff919091169063b760faf99034906024016000604051808303818588803b15801561090a57600080fd5b505af115801561064d573d6000803e3d6000fd5b6109266114e1565b7f00000000000000000000000000000000000000000000000000000000000000006040517f205c287800000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff848116600483015260248201849052919091169063205c287890604401600060405180830381600087803b1580156109b957600080fd5b505af11580156109cd573d6000803e3d6000fd5b505050505050565b73ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000163003610a9a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201527f64656c656761746563616c6c0000000000000000000000000000000000000000606482015260840161059d565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16610b0f7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5473ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff1614610bb2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201527f6163746976652070726f78790000000000000000000000000000000000000000606482015260840161059d565b610bbb82611112565b610bc78282600161111a565b5050565b60003073ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614610c92576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c0000000000000000606482015260840161059d565b507f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc90565b610cbf610fcc565b610d00848484848080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061109592505050565b50505050565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009073ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016906370a08231906024015b602060405180830381865afa158015610d94573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610db891906122b4565b905090565b600054610100900460ff1615808015610ddd5750600054600160ff909116105b80610df75750303b158015610df7575060005460ff166001145b610e83576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a6564000000000000000000000000000000000000606482015260840161059d565b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011790558015610ee157600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff166101001790555b610eea82611572565b8015610bc757600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15050565b6040517f35567e1a0000000000000000000000000000000000000000000000000000000081523060048201526000602482018190529073ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016906335567e1a90604401610d77565b3373ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016148061102d575060005462010000900473ffffffffffffffffffffffffffffffffffffffff1633145b611093576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f6163636f756e743a206e6f74204f776e6572206f7220456e747279506f696e74604482015260640161059d565b565b6000808473ffffffffffffffffffffffffffffffffffffffff1684846040516110be91906122f1565b60006040518083038185875af1925050503d80600081146110fb576040519150601f19603f3d011682016040523d82523d6000602084013e611100565b606091505b50915091508161064d57805160208201fd5b6108566114e1565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff16156111525761114d83611611565b505050565b8273ffffffffffffffffffffffffffffffffffffffff166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa9250505080156111d7575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682019092526111d4918101906122b4565b60015b611263576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201527f6f6e206973206e6f742055555053000000000000000000000000000000000000606482015260840161059d565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc8114611312576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f7860448201527f6961626c65555549440000000000000000000000000000000000000000000000606482015260840161059d565b5061114d83838361171b565b3373ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614611093576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f6163636f756e743a206e6f742066726f6d20456e747279506f696e7400000000604482015260640161059d565b7f19457468657265756d205369676e6564204d6573736167653a0a3332000000006000908152601c829052603c812061143a6113fd6101408601866121f0565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525085939250506117409050565b60005462010000900473ffffffffffffffffffffffffffffffffffffffff90811691161461146c57600191505061052a565b5060009392505050565b80156108565760405160009033907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90849084818181858888f193505050503d806000811461064d576040519150601f19603f3d011682016040523d82523d6000602084013e61064d565b60005462010000900473ffffffffffffffffffffffffffffffffffffffff1633148061150c57503330145b611093576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f6f6e6c79206f776e657200000000000000000000000000000000000000000000604482015260640161059d565b600080547fffffffffffffffffffff0000000000000000000000000000000000000000ffff166201000073ffffffffffffffffffffffffffffffffffffffff8481168202929092178084556040519190048216927f0000000000000000000000000000000000000000000000000000000000000000909216917f47e55c76e7a6f1fd8996a1da8008c1ea29699cca35e7bcd057f2dec313b6e5de91a350565b73ffffffffffffffffffffffffffffffffffffffff81163b6116b5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201527f6f74206120636f6e747261637400000000000000000000000000000000000000606482015260840161059d565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b61172483611764565b6000825111806117315750805b1561114d57610d0083836117b1565b600080600061174f85856117d6565b9150915061175c8161181b565b509392505050565b61176d81611611565b60405173ffffffffffffffffffffffffffffffffffffffff8216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b6060610878838360405180606001604052806027815260200161238e602791396119ce565b600080825160410361180c5760208301516040840151606085015160001a61180087828585611a53565b94509450505050611814565b506000905060025b9250929050565b600081600481111561182f5761182f61230d565b036118375750565b600181600481111561184b5761184b61230d565b036118b2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f45434453413a20696e76616c6964207369676e61747572650000000000000000604482015260640161059d565b60028160048111156118c6576118c661230d565b0361192d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e67746800604482015260640161059d565b60038160048111156119415761194161230d565b03610856576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c60448201527f7565000000000000000000000000000000000000000000000000000000000000606482015260840161059d565b60606000808573ffffffffffffffffffffffffffffffffffffffff16856040516119f891906122f1565b600060405180830381855af49150503d8060008114611a33576040519150601f19603f3d011682016040523d82523d6000602084013e611a38565b606091505b5091509150611a4986838387611b42565b9695505050505050565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115611a8a5750600090506003611b39565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015611ade573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015191505073ffffffffffffffffffffffffffffffffffffffff8116611b3257600060019250925050611b39565b9150600090505b94509492505050565b60608315611bd8578251600003611bd15773ffffffffffffffffffffffffffffffffffffffff85163b611bd1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161059d565b5081611be2565b611be28383611bea565b949350505050565b815115611bfa5781518083602001fd5b806040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161059d919061233c565b73ffffffffffffffffffffffffffffffffffffffff8116811461085657600080fd5b60008083601f840112611c6257600080fd5b50813567ffffffffffffffff811115611c7a57600080fd5b60208301915083602082850101111561181457600080fd5b60008060008060008060008060c0898b031215611cae57600080fd5b8835611cb981611c2e565b97506020890135611cc981611c2e565b96506040890135611cd981611c2e565b955060608901359450608089013567ffffffffffffffff80821115611cfd57600080fd5b611d098c838d01611c50565b909650945060a08b0135915080821115611d2257600080fd5b50611d2f8b828c01611c50565b999c989b5096995094979396929594505050565b600060208284031215611d5557600080fd5b81357fffffffff000000000000000000000000000000000000000000000000000000008116811461087857600080fd5b600080600080600060808688031215611d9d57600080fd5b8535611da881611c2e565b94506020860135611db881611c2e565b935060408601359250606086013567ffffffffffffffff811115611ddb57600080fd5b611de788828901611c50565b969995985093965092949392505050565b60008083601f840112611e0a57600080fd5b50813567ffffffffffffffff811115611e2257600080fd5b6020830191508360208260051b850101111561181457600080fd5b60008060008060408587031215611e5357600080fd5b843567ffffffffffffffff80821115611e6b57600080fd5b611e7788838901611df8565b90965094506020870135915080821115611e9057600080fd5b50611e9d87828801611df8565b95989497509550505050565b600060208284031215611ebb57600080fd5b813561087881611c2e565b600080600060608486031215611edb57600080fd5b833567ffffffffffffffff811115611ef257600080fd5b84016101608187031215611f0557600080fd5b95602085013595506040909401359392505050565b60008060408385031215611f2d57600080fd5b8235611f3881611c2e565b946020939093013593505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60008060408385031215611f8857600080fd5b8235611f9381611c2e565b9150602083013567ffffffffffffffff80821115611fb057600080fd5b818501915085601f830112611fc457600080fd5b813581811115611fd657611fd6611f46565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f0116810190838211818310171561201c5761201c611f46565b8160405282815288602084870101111561203557600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b6000806000806060858703121561206d57600080fd5b843561207881611c2e565b935060208501359250604085013567ffffffffffffffff81111561209b57600080fd5b611e9d87828801611c50565b60008060008060008060008060a0898b0312156120c357600080fd5b88356120ce81611c2e565b975060208901356120de81611c2e565b9650604089013567ffffffffffffffff808211156120fb57600080fd5b6121078c838d01611df8565b909850965060608b013591508082111561212057600080fd5b61212c8c838d01611df8565b909650945060808b0135915080821115611d2257600080fd5b60008060008060008060a0878903121561215e57600080fd5b863561216981611c2e565b9550602087013561217981611c2e565b94506040870135935060608701359250608087013567ffffffffffffffff8111156121a357600080fd5b6121af89828a01611c50565b979a9699509497509295939492505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261222557600080fd5b83018035915067ffffffffffffffff82111561224057600080fd5b60200191503681900382131561181457600080fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036122ad577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b5060010190565b6000602082840312156122c657600080fd5b5051919050565b60005b838110156122e85781810151838201526020016122d0565b50506000910152565b600082516123038184602087016122cd565b9190910192915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b602081526000825180602084015261235b8160408501602087016122cd565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016919091016040019291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a264697066735822122014e1cbcd9a6655a444f8eb73ceb55ace8aa8f9628fb9e13f39143adc3483262c64736f6c63430008120033a2646970667358221220ca6f058ba63116f28fd954ee13cbdaa19ebf8d8f6904a53ba11cea74d3f1853964736f6c63430008120033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH20 0x5FF137D4B0FDCD49DCA30C7CF57E578A026D2789 OR SWAP1 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x36 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A2D DUP1 PUSH2 0x46 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x65 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9AB4A98C GT PUSH2 0x43 JUMPI DUP1 PUSH4 0x9AB4A98C EQ PUSH2 0xEB JUMPI DUP1 PUSH4 0xA905054D EQ PUSH2 0x100 JUMPI DUP1 PUSH4 0xEFA8D338 EQ PUSH2 0x12D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x45171159 EQ PUSH2 0x6A JUMPI DUP1 PUSH4 0x672383C4 EQ PUSH2 0x7F JUMPI DUP1 PUSH4 0x7E6CBB6A EQ PUSH2 0xC9 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7D PUSH2 0x78 CALLDATASIZE PUSH1 0x4 PUSH2 0x406 JUMP JUMPDEST PUSH2 0x170 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x9F PUSH2 0x9A CALLDATASIZE PUSH1 0x4 PUSH2 0x461 JUMP JUMPDEST PUSH2 0x1FE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xDE PUSH2 0x235 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC0 SWAP2 SWAP1 PUSH2 0x47A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7D PUSH2 0x2A4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x10C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH2 0x9F SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x139 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x9F PUSH2 0x148 CALLDATASIZE PUSH1 0x4 PUSH2 0x461 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x396CB6000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH4 0xFFFFFFFF DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE DUP3 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 PUSH4 0x396CB60 SWAP1 CALLVALUE SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1F4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x20E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x29A JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x26F JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AF PUSH1 0x1 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD SWAP3 SWAP4 POP SWAP1 SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND SWAP1 PUSH2 0x2DD SWAP1 PUSH2 0x3F9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH2 0x316 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 DUP1 DUP3 ADD SWAP1 SWAP3 SSTORE PUSH32 0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACE ADD DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 SWAP2 DUP3 AND DUP2 OR SWAP1 SWAP3 SSTORE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SWAP2 OR SWAP1 SSTORE DUP1 SLOAD DUP2 ADD SWAP1 SSTORE SWAP1 POP PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0xEFA81A4569551EED9DAAB49E121E3B5F2D9A57E6ABA5992FAD6DAAE99B3B36A5 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH2 0x3523 DUP1 PUSH2 0x4D5 DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x419 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x43D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH4 0xFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x456 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x473 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x4C8 JUMPI DUP4 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x496 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP INVALID PUSH1 0xC0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x3523 CODESIZE SUB DUP1 PUSH2 0x3523 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0x8D JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH2 0x3C SWAP1 PUSH2 0x80 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH2 0x68 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x80 MSTORE AND PUSH1 0xA0 MSTORE PUSH2 0xBD JUMP JUMPDEST PUSH2 0x25A6 DUP1 PUSH2 0xF7D DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xB6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH2 0xE87 PUSH2 0xF6 PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x13C ADD MSTORE PUSH2 0x192 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH1 0x93 ADD MSTORE DUP2 DUP2 PUSH2 0x276 ADD MSTORE PUSH2 0x420 ADD MSTORE PUSH2 0xE87 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH3 0x61 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5FBFB9CF GT PUSH3 0x48 JUMPI DUP1 PUSH4 0x5FBFB9CF EQ PUSH3 0xDE JUMPI DUP1 PUSH4 0x8CB84E18 EQ PUSH3 0x103 JUMPI DUP1 PUSH4 0xB0D691FE EQ PUSH3 0x128 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x396CB60 EQ PUSH3 0x66 JUMPI DUP1 PUSH4 0x11464FBE EQ PUSH3 0x7F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x7D PUSH3 0x77 CALLDATASIZE PUSH1 0x4 PUSH3 0x56C JUMP JUMPDEST PUSH3 0x15E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x8C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0xB5 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0xEB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0xB5 PUSH3 0xFD CALLDATASIZE PUSH1 0x4 PUSH3 0x594 JUMP JUMPDEST PUSH3 0x20A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x110 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0xB5 PUSH3 0x122 CALLDATASIZE PUSH1 0x4 PUSH3 0x594 JUMP JUMPDEST PUSH3 0x3B3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x135 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0xB5 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x396CB6000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH4 0xFFFFFFFF DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH4 0x396CB60 SWAP1 CALLVALUE SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x1ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x202 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH3 0x217 PUSH1 0x0 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH3 0x227 DUP6 DUP6 PUSH3 0x3B3 JUMP JUMPDEST SWAP1 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND EXTCODESIZE DUP1 ISZERO PUSH3 0x253 JUMPI POP SWAP2 POP PUSH3 0x3AD SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND PUSH1 0x24 DUP3 ADD MSTORE DUP6 SWAP1 PUSH32 0x0 SWAP1 PUSH1 0x44 ADD PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC4D66DE800000000000000000000000000000000000000000000000000000000 OR SWAP1 MSTORE MLOAD PUSH3 0x31B SWAP1 PUSH3 0x55E JUMP JUMPDEST PUSH3 0x328 SWAP3 SWAP2 SWAP1 PUSH3 0x601 JUMP JUMPDEST DUP2 SWAP1 PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE2 SWAP1 POP DUP1 ISZERO DUP1 ISZERO PUSH3 0x349 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP SWAP4 POP PUSH3 0x35B PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x7757890BCAB34D673DFCA6B71DF1B57F75A2FE4231D6E8DE726CAF534AB1FDD6 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x524 DUP3 PUSH1 0x0 SHL PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH3 0x3CF SWAP1 PUSH3 0x55E JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP3 DUP3 SUB DUP2 ADD DUP4 MSTORE PUSH1 0x1F SWAP1 SWAP2 ADD AND PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x0 SWAP1 PUSH1 0x44 ADD PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP1 DUP4 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC4D66DE800000000000000000000000000000000000000000000000000000000 OR SWAP1 MSTORE SWAP1 MLOAD PUSH3 0x4CA SWAP4 SWAP3 SWAP2 ADD PUSH3 0x601 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH3 0x508 SWAP3 SWAP2 PUSH1 0x20 ADD PUSH3 0x671 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH3 0x52B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x524 DUP4 DUP4 ADDRESS PUSH1 0x0 PUSH1 0x40 MLOAD DUP4 PUSH1 0x40 DUP3 ADD MSTORE DUP5 PUSH1 0x20 DUP3 ADD MSTORE DUP3 DUP2 MSTORE PUSH1 0xB DUP2 ADD SWAP1 POP PUSH1 0xFF DUP2 MSTORE8 PUSH1 0x55 SWAP1 KECCAK256 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x7AD DUP1 PUSH3 0x6A5 DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x57F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH4 0xFFFFFFFF DUP2 AND DUP2 EQ PUSH3 0x524 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x5A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH3 0x5CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x5F8 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH3 0x5DE JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x40 DUP5 ADD MSTORE PUSH3 0x63E DUP2 PUSH1 0x60 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH3 0x5DB JUMP JUMPDEST PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x60 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH3 0x685 DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH3 0x5DB JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH3 0x69B DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH3 0x5DB JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x7AD CODESIZE SUB DUP1 PUSH2 0x7AD DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x22 SWAP2 PUSH2 0x319 JUMP JUMPDEST PUSH2 0x2E DUP3 DUP3 PUSH1 0x0 PUSH2 0x35 JUMP JUMPDEST POP POP PUSH2 0x436 JUMP JUMPDEST PUSH2 0x3E DUP4 PUSH2 0x6B JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT DUP1 PUSH2 0x4B JUMPI POP DUP1 JUMPDEST ISZERO PUSH2 0x66 JUMPI PUSH2 0x64 DUP4 DUP4 PUSH2 0xAB PUSH1 0x20 SHL PUSH2 0x29 OR PUSH1 0x20 SHR JUMP JUMPDEST POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x74 DUP2 PUSH2 0xD7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xD0 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x786 PUSH1 0x27 SWAP2 CODECOPY PUSH2 0x1A9 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xEA DUP2 PUSH2 0x222 PUSH1 0x20 SHL PUSH2 0x55 OR PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x151 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720696D706C656D656E746174696F6E206973206E PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x1BDD08184818DBDB9D1C9858DD PUSH1 0x9A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH2 0x188 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL PUSH2 0x231 PUSH1 0x20 SHL PUSH2 0x71 OR PUSH1 0x20 SHR JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x40 MLOAD PUSH2 0x1C6 SWAP2 SWAP1 PUSH2 0x3E7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x201 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x206 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x218 DUP7 DUP4 DUP4 DUP8 PUSH2 0x234 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x2A3 JUMPI DUP3 MLOAD PUSH1 0x0 SUB PUSH2 0x29C JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH2 0x29C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x148 JUMP JUMPDEST POP DUP2 PUSH2 0x2AD JUMP JUMPDEST PUSH2 0x2AD DUP4 DUP4 PUSH2 0x2B5 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP2 MLOAD ISZERO PUSH2 0x2C5 JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x148 SWAP2 SWAP1 PUSH2 0x403 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x310 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2F8 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x32C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x343 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP5 ADD MLOAD SWAP1 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x360 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x374 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x386 JUMPI PUSH2 0x386 PUSH2 0x2DF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x3AE JUMPI PUSH2 0x3AE PUSH2 0x2DF JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP9 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x3C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3D8 DUP4 PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x2F5 JUMP JUMPDEST DUP1 SWAP6 POP POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x3F9 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x2F5 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x422 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x2F5 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x341 DUP1 PUSH2 0x445 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLDATASIZE PUSH2 0x13 JUMPI PUSH2 0x11 PUSH2 0x17 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x11 JUMPDEST PUSH2 0x27 PUSH2 0x22 PUSH2 0x74 JUMP JUMPDEST PUSH2 0xB9 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH2 0x4E DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2E5 PUSH1 0x27 SWAP2 CODECOPY PUSH2 0xDD JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB4 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST CALLDATASIZE PUSH1 0x0 DUP1 CALLDATACOPY PUSH1 0x0 DUP1 CALLDATASIZE PUSH1 0x0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY DUP1 DUP1 ISZERO PUSH2 0xD8 JUMPI RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH1 0x40 MLOAD PUSH2 0x107 SWAP2 SWAP1 PUSH2 0x277 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x142 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x147 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x158 DUP7 DUP4 DUP4 DUP8 PUSH2 0x162 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x1FD JUMPI DUP3 MLOAD PUSH1 0x0 SUB PUSH2 0x1F6 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND EXTCODESIZE PUSH2 0x1F6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP DUP2 PUSH2 0x207 JUMP JUMPDEST PUSH2 0x207 DUP4 DUP4 PUSH2 0x20F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP2 MLOAD ISZERO PUSH2 0x21F JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1ED SWAP2 SWAP1 PUSH2 0x293 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x26E JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x256 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x289 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x253 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x2B2 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x253 JUMP JUMPDEST PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP INVALID COINBASE PUSH5 0x6472657373 GASPRICE KECCAK256 PUSH13 0x6F772D6C6576656C2064656C65 PUSH8 0x6174652063616C6C KECCAK256 PUSH7 0x61696C6564A264 PUSH10 0x70667358221220B6D490 0xC7 0xB0 0xF7 0xD1 SWAP9 0x28 LOG4 0x49 0xEA SWAP11 0x4C 0xEC 0xBE 0xE2 0xE4 PUSH3 0xA603D4 0xDE SLT PUSH25 0x8117591D9F02564736F6C6343000812003341646472657373 GASPRICE KECCAK256 PUSH13 0x6F772D6C6576656C2064656C65 PUSH8 0x6174652063616C6C KECCAK256 PUSH7 0x61696C6564A264 PUSH10 0x70667358221220EB3CE2 SELFBALANCE 0xC4 ADD ADDRESS PUSH18 0x68A8B677733675E96F6F6A51720A8840DB99 BLOCKHASH SLOAD DUP8 PUSH30 0xEA1764736F6C6343000812003360C0604052306080523480156200001557 PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x25A6 CODESIZE SUB DUP1 PUSH3 0x25A6 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x38 SWAP2 PUSH3 0x117 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0xA0 MSTORE PUSH3 0x4F PUSH3 0x56 JUMP JUMPDEST POP PUSH3 0x149 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH3 0xC3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320696E697469 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x616C697A696E67 PUSH1 0xC8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0xFF SWAP1 DUP2 AND EQ PUSH3 0x115 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0xFF SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x12A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x142 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH2 0x23EA PUSH3 0x1BC PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x32F ADD MSTORE DUP2 DUP2 PUSH2 0x881 ADD MSTORE DUP2 DUP2 PUSH2 0x928 ADD MSTORE DUP2 DUP2 PUSH2 0xD4C ADD MSTORE DUP2 DUP2 PUSH2 0xF9D ADD MSTORE DUP2 DUP2 PUSH2 0xFE4 ADD MSTORE DUP2 DUP2 PUSH2 0x1336 ADD MSTORE PUSH2 0x15C8 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x66B ADD MSTORE DUP2 DUP2 PUSH2 0x71B ADD MSTORE DUP2 DUP2 PUSH2 0x9EC ADD MSTORE DUP2 DUP2 PUSH2 0xA9C ADD MSTORE PUSH2 0xBE5 ADD MSTORE PUSH2 0x23EA PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x52D1902D GT PUSH2 0xA5 JUMPI DUP1 PUSH4 0xBC197C81 GT PUSH2 0x74 JUMPI DUP1 PUSH4 0xC4D66DE8 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xC4D66DE8 EQ PUSH2 0x3D0 JUMPI DUP1 PUSH4 0xD087D288 EQ PUSH2 0x3F0 JUMPI DUP1 PUSH4 0xF23A6E61 EQ PUSH2 0x405 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xBC197C81 EQ PUSH2 0x373 JUMPI DUP1 PUSH4 0xC399EC88 EQ PUSH2 0x3BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x52D1902D EQ PUSH2 0x2B3 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2C8 JUMPI DUP1 PUSH4 0xB0D691FE EQ PUSH2 0x320 JUMPI DUP1 PUSH4 0xB61D27F6 EQ PUSH2 0x353 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3659CFE6 GT PUSH2 0xFC JUMPI DUP1 PUSH4 0x4A58DB19 GT PUSH2 0xE1 JUMPI DUP1 PUSH4 0x4A58DB19 EQ PUSH2 0x278 JUMPI DUP1 PUSH4 0x4D44560D EQ PUSH2 0x280 JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x2A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3659CFE6 EQ PUSH2 0x22A JUMPI DUP1 PUSH4 0x3A871CDD EQ PUSH2 0x24A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0x23DE29 EQ PUSH2 0x138 JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0x150B7A02 EQ PUSH2 0x194 JUMPI DUP1 PUSH4 0x18DFB3C7 EQ PUSH2 0x20A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x133 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x144 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15D PUSH2 0x153 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C92 JUMP JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x16B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17F PUSH2 0x17A CALLDATASIZE PUSH1 0x4 PUSH2 0x1D43 JUMP JUMPDEST PUSH2 0x44B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D9 PUSH2 0x1AF CALLDATASIZE PUSH1 0x4 PUSH2 0x1D85 JUMP JUMPDEST PUSH32 0x150B7A0200000000000000000000000000000000000000000000000000000000 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x18B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x216 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15D PUSH2 0x225 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E3D JUMP JUMPDEST PUSH2 0x530 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x236 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15D PUSH2 0x245 CALLDATASIZE PUSH1 0x4 PUSH2 0x1EA9 JUMP JUMPDEST PUSH2 0x654 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x256 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26A PUSH2 0x265 CALLDATASIZE PUSH1 0x4 PUSH2 0x1EC6 JUMP JUMPDEST PUSH2 0x859 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x18B JUMP JUMPDEST PUSH2 0x15D PUSH2 0x87F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15D PUSH2 0x29B CALLDATASIZE PUSH1 0x4 PUSH2 0x1F1A JUMP JUMPDEST PUSH2 0x91E JUMP JUMPDEST PUSH2 0x15D PUSH2 0x2AE CALLDATASIZE PUSH1 0x4 PUSH2 0x1F75 JUMP JUMPDEST PUSH2 0x9D5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26A PUSH2 0xBCB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH2 0x2FB SWAP1 PUSH3 0x10000 SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x18B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH32 0x0 PUSH2 0x2FB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x35F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15D PUSH2 0x36E CALLDATASIZE PUSH1 0x4 PUSH2 0x2057 JUMP JUMPDEST PUSH2 0xCB7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D9 PUSH2 0x38E CALLDATASIZE PUSH1 0x4 PUSH2 0x20A7 JUMP JUMPDEST PUSH32 0xBC197C8100000000000000000000000000000000000000000000000000000000 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26A PUSH2 0xD06 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15D PUSH2 0x3EB CALLDATASIZE PUSH1 0x4 PUSH2 0x1EA9 JUMP JUMPDEST PUSH2 0xDBD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26A PUSH2 0xF50 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x411 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D9 PUSH2 0x420 CALLDATASIZE PUSH1 0x4 PUSH2 0x2145 JUMP JUMPDEST PUSH32 0xF23A6E6100000000000000000000000000000000000000000000000000000000 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH32 0x150B7A0200000000000000000000000000000000000000000000000000000000 EQ DUP1 PUSH2 0x4DE JUMPI POP PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH32 0x4E2312E000000000000000000000000000000000000000000000000000000000 EQ JUMPDEST DUP1 PUSH2 0x52A JUMPI POP PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x538 PUSH2 0xFCC JUMP JUMPDEST DUP3 DUP2 EQ PUSH2 0x5A6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x77726F6E67206172726179206C656E6774687300000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x64D JUMPI PUSH2 0x63B DUP6 DUP6 DUP4 DUP2 DUP2 LT PUSH2 0x5C6 JUMPI PUSH2 0x5C6 PUSH2 0x21C1 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x5DB SWAP2 SWAP1 PUSH2 0x1EA9 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP6 DUP6 DUP2 DUP2 LT PUSH2 0x5EF JUMPI PUSH2 0x5EF PUSH2 0x21C1 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL DUP2 ADD SWAP1 PUSH2 0x601 SWAP2 SWAP1 PUSH2 0x21F0 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x1095 SWAP3 POP POP POP JUMP JUMPDEST DUP1 PUSH2 0x645 DUP2 PUSH2 0x2255 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x5A9 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND ADDRESS SUB PUSH2 0x719 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x64656C656761746563616C6C0000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x59D JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x78E PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x831 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6163746976652070726F78790000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x59D JUMP JUMPDEST PUSH2 0x83A DUP2 PUSH2 0x1112 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x856 SWAP2 DUP4 SWAP2 SWAP1 PUSH2 0x111A JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x863 PUSH2 0x131E JUMP JUMPDEST PUSH2 0x86D DUP5 DUP5 PUSH2 0x13BD JUMP JUMPDEST SWAP1 POP PUSH2 0x878 DUP3 PUSH2 0x1476 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x0 PUSH1 0x40 MLOAD PUSH32 0xB760FAF900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 SWAP1 SWAP2 AND SWAP1 PUSH4 0xB760FAF9 SWAP1 CALLVALUE SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x90A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x64D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH2 0x926 PUSH2 0x14E1 JUMP JUMPDEST PUSH32 0x0 PUSH1 0x40 MLOAD PUSH32 0x205C287800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE SWAP2 SWAP1 SWAP2 AND SWAP1 PUSH4 0x205C2878 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9CD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND ADDRESS SUB PUSH2 0xA9A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x64656C656761746563616C6C0000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x59D JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB0F PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBB2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6163746976652070726F78790000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x59D JUMP JUMPDEST PUSH2 0xBBB DUP3 PUSH2 0x1112 JUMP JUMPDEST PUSH2 0xBC7 DUP3 DUP3 PUSH1 0x1 PUSH2 0x111A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND EQ PUSH2 0xC92 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x555550535570677261646561626C653A206D757374206E6F742062652063616C PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6C6564207468726F7567682064656C656761746563616C6C0000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x59D JUMP JUMPDEST POP PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SWAP1 JUMP JUMPDEST PUSH2 0xCBF PUSH2 0xFCC JUMP JUMPDEST PUSH2 0xD00 DUP5 DUP5 DUP5 DUP5 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x1095 SWAP3 POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD94 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDB8 SWAP2 SWAP1 PUSH2 0x22B4 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 DUP1 ISZERO PUSH2 0xDDD JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xFF SWAP1 SWAP2 AND LT JUMPDEST DUP1 PUSH2 0xDF7 JUMPI POP ADDRESS EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDF7 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND PUSH1 0x1 EQ JUMPDEST PUSH2 0xE83 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x647920696E697469616C697A6564000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x59D JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND PUSH1 0x1 OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0xEE1 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FF AND PUSH2 0x100 OR SWAP1 SSTORE JUMPDEST PUSH2 0xEEA DUP3 PUSH2 0x1572 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xBC7 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FF AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x35567E1A00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x24 DUP3 ADD DUP2 SWAP1 MSTORE SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND SWAP1 PUSH4 0x35567E1A SWAP1 PUSH1 0x44 ADD PUSH2 0xD77 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND EQ DUP1 PUSH2 0x102D JUMPI POP PUSH1 0x0 SLOAD PUSH3 0x10000 SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ JUMPDEST PUSH2 0x1093 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6163636F756E743A206E6F74204F776E6572206F7220456E747279506F696E74 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x59D JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x10BE SWAP2 SWAP1 PUSH2 0x22F1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x10FB JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1100 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x64D JUMPI DUP1 MLOAD PUSH1 0x20 DUP3 ADD REVERT JUMPDEST PUSH2 0x856 PUSH2 0x14E1 JUMP JUMPDEST PUSH32 0x4910FDFA16FED3260ED0E7147F7CC6DA11A60208B5B9406D12A635614FFD9143 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1152 JUMPI PUSH2 0x114D DUP4 PUSH2 0x1611 JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x11D7 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x11D4 SWAP2 DUP2 ADD SWAP1 PUSH2 0x22B4 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1263 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A206E657720696D706C656D656E74617469 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F6E206973206E6F742055555053000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x59D JUMP JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP2 EQ PUSH2 0x1312 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A20756E737570706F727465642070726F78 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6961626C65555549440000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x59D JUMP JUMPDEST POP PUSH2 0x114D DUP4 DUP4 DUP4 PUSH2 0x171B JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND EQ PUSH2 0x1093 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6163636F756E743A206E6F742066726F6D20456E747279506F696E7400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x59D JUMP JUMPDEST PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1C DUP3 SWAP1 MSTORE PUSH1 0x3C DUP2 KECCAK256 PUSH2 0x143A PUSH2 0x13FD PUSH2 0x140 DUP7 ADD DUP7 PUSH2 0x21F0 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP DUP6 SWAP4 SWAP3 POP POP PUSH2 0x1740 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH3 0x10000 SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x146C JUMPI PUSH1 0x1 SWAP2 POP POP PUSH2 0x52A JUMP JUMPDEST POP PUSH1 0x0 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 ISZERO PUSH2 0x856 JUMPI PUSH1 0x40 MLOAD PUSH1 0x0 SWAP1 CALLER SWAP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP5 SWAP1 DUP5 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x64D JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x64D JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH3 0x10000 SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ DUP1 PUSH2 0x150C JUMPI POP CALLER ADDRESS EQ JUMPDEST PUSH2 0x1093 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6F6E6C79206F776E657200000000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x59D JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000FFFF AND PUSH3 0x10000 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP2 AND DUP3 MUL SWAP3 SWAP1 SWAP3 OR DUP1 DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 DIV DUP3 AND SWAP3 PUSH32 0x0 SWAP1 SWAP3 AND SWAP2 PUSH32 0x47E55C76E7A6F1FD8996A1DA8008C1EA29699CCA35E7BCD057F2DEC313B6E5DE SWAP2 LOG3 POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND EXTCODESIZE PUSH2 0x16B5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720696D706C656D656E746174696F6E206973206E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F74206120636F6E747261637400000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x59D JUMP JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x1724 DUP4 PUSH2 0x1764 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT DUP1 PUSH2 0x1731 JUMPI POP DUP1 JUMPDEST ISZERO PUSH2 0x114D JUMPI PUSH2 0xD00 DUP4 DUP4 PUSH2 0x17B1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x174F DUP6 DUP6 PUSH2 0x17D6 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x175C DUP2 PUSH2 0x181B JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x176D DUP2 PUSH2 0x1611 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x878 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x238E PUSH1 0x27 SWAP2 CODECOPY PUSH2 0x19CE JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 MLOAD PUSH1 0x41 SUB PUSH2 0x180C JUMPI PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x40 DUP5 ADD MLOAD PUSH1 0x60 DUP6 ADD MLOAD PUSH1 0x0 BYTE PUSH2 0x1800 DUP8 DUP3 DUP6 DUP6 PUSH2 0x1A53 JUMP JUMPDEST SWAP5 POP SWAP5 POP POP POP POP PUSH2 0x1814 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 POP PUSH1 0x2 JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x182F JUMPI PUSH2 0x182F PUSH2 0x230D JUMP JUMPDEST SUB PUSH2 0x1837 JUMPI POP JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x184B JUMPI PUSH2 0x184B PUSH2 0x230D JUMP JUMPDEST SUB PUSH2 0x18B2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E61747572650000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x59D JUMP JUMPDEST PUSH1 0x2 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x18C6 JUMPI PUSH2 0x18C6 PUSH2 0x230D JUMP JUMPDEST SUB PUSH2 0x192D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E6174757265206C656E67746800 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x59D JUMP JUMPDEST PUSH1 0x3 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1941 JUMPI PUSH2 0x1941 PUSH2 0x230D JUMP JUMPDEST SUB PUSH2 0x856 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E6174757265202773272076616C PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7565000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x59D JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH1 0x40 MLOAD PUSH2 0x19F8 SWAP2 SWAP1 PUSH2 0x22F1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1A33 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1A38 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1A49 DUP7 DUP4 DUP4 DUP8 PUSH2 0x1B42 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP4 GT ISZERO PUSH2 0x1A8A JUMPI POP PUSH1 0x0 SWAP1 POP PUSH1 0x3 PUSH2 0x1B39 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP1 DUP5 MSTORE DUP10 SWAP1 MSTORE PUSH1 0xFF DUP9 AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1ADE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 ADD MLOAD SWAP2 POP POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0x1B32 JUMPI PUSH1 0x0 PUSH1 0x1 SWAP3 POP SWAP3 POP POP PUSH2 0x1B39 JUMP JUMPDEST SWAP2 POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x1BD8 JUMPI DUP3 MLOAD PUSH1 0x0 SUB PUSH2 0x1BD1 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND EXTCODESIZE PUSH2 0x1BD1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x59D JUMP JUMPDEST POP DUP2 PUSH2 0x1BE2 JUMP JUMPDEST PUSH2 0x1BE2 DUP4 DUP4 PUSH2 0x1BEA JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP2 MLOAD ISZERO PUSH2 0x1BFA JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x59D SWAP2 SWAP1 PUSH2 0x233C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x856 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1C62 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1C7A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x1814 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP10 DUP12 SUB SLT ISZERO PUSH2 0x1CAE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP9 CALLDATALOAD PUSH2 0x1CB9 DUP2 PUSH2 0x1C2E JUMP JUMPDEST SWAP8 POP PUSH1 0x20 DUP10 ADD CALLDATALOAD PUSH2 0x1CC9 DUP2 PUSH2 0x1C2E JUMP JUMPDEST SWAP7 POP PUSH1 0x40 DUP10 ADD CALLDATALOAD PUSH2 0x1CD9 DUP2 PUSH2 0x1C2E JUMP JUMPDEST SWAP6 POP PUSH1 0x60 DUP10 ADD CALLDATALOAD SWAP5 POP PUSH1 0x80 DUP10 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1CFD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1D09 DUP13 DUP4 DUP14 ADD PUSH2 0x1C50 JUMP JUMPDEST SWAP1 SWAP7 POP SWAP5 POP PUSH1 0xA0 DUP12 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1D22 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D2F DUP12 DUP3 DUP13 ADD PUSH2 0x1C50 JUMP JUMPDEST SWAP10 SWAP13 SWAP9 SWAP12 POP SWAP7 SWAP10 POP SWAP5 SWAP8 SWAP4 SWAP7 SWAP3 SWAP6 SWAP5 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D55 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND DUP2 EQ PUSH2 0x878 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1D9D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0x1DA8 DUP2 PUSH2 0x1C2E JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH2 0x1DB8 DUP2 PUSH2 0x1C2E JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1DDB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1DE7 DUP9 DUP3 DUP10 ADD PUSH2 0x1C50 JUMP JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 POP SWAP3 SWAP5 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1E0A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1E22 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x1814 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x40 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1E53 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1E6B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1E77 DUP9 DUP4 DUP10 ADD PUSH2 0x1DF8 JUMP JUMPDEST SWAP1 SWAP7 POP SWAP5 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1E90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E9D DUP8 DUP3 DUP9 ADD PUSH2 0x1DF8 JUMP JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP6 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1EBB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x878 DUP2 PUSH2 0x1C2E JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1EDB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1EF2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 ADD PUSH2 0x160 DUP2 DUP8 SUB SLT ISZERO PUSH2 0x1F05 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1F2D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1F38 DUP2 PUSH2 0x1C2E JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1F88 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1F93 DUP2 PUSH2 0x1C2E JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1FB0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1FC4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x1FD6 JUMPI PUSH2 0x1FD6 PUSH2 0x1F46 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x201C JUMPI PUSH2 0x201C PUSH2 0x1F46 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP9 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x2035 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x206D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0x2078 DUP2 PUSH2 0x1C2E JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x209B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1E9D DUP8 DUP3 DUP9 ADD PUSH2 0x1C50 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xA0 DUP10 DUP12 SUB SLT ISZERO PUSH2 0x20C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP9 CALLDATALOAD PUSH2 0x20CE DUP2 PUSH2 0x1C2E JUMP JUMPDEST SWAP8 POP PUSH1 0x20 DUP10 ADD CALLDATALOAD PUSH2 0x20DE DUP2 PUSH2 0x1C2E JUMP JUMPDEST SWAP7 POP PUSH1 0x40 DUP10 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x20FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2107 DUP13 DUP4 DUP14 ADD PUSH2 0x1DF8 JUMP JUMPDEST SWAP1 SWAP9 POP SWAP7 POP PUSH1 0x60 DUP12 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x2120 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x212C DUP13 DUP4 DUP14 ADD PUSH2 0x1DF8 JUMP JUMPDEST SWAP1 SWAP7 POP SWAP5 POP PUSH1 0x80 DUP12 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1D22 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xA0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x215E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 CALLDATALOAD PUSH2 0x2169 DUP2 PUSH2 0x1C2E JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD PUSH2 0x2179 DUP2 PUSH2 0x1C2E JUMP JUMPDEST SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD SWAP3 POP PUSH1 0x80 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x21A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x21AF DUP10 DUP3 DUP11 ADD PUSH2 0x1C50 JUMP JUMPDEST SWAP8 SWAP11 SWAP7 SWAP10 POP SWAP5 SWAP8 POP SWAP3 SWAP6 SWAP4 SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 CALLDATALOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE1 DUP5 CALLDATASIZE SUB ADD DUP2 SLT PUSH2 0x2225 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 ADD DUP1 CALLDATALOAD SWAP2 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2240 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 ADD SWAP2 POP CALLDATASIZE DUP2 SWAP1 SUB DUP3 SGT ISZERO PUSH2 0x1814 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x22AD JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x22C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x22E8 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x22D0 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x2303 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x22CD JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x235B DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x22CD JUMP JUMPDEST PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP INVALID COINBASE PUSH5 0x6472657373 GASPRICE KECCAK256 PUSH13 0x6F772D6C6576656C2064656C65 PUSH8 0x6174652063616C6C KECCAK256 PUSH7 0x61696C6564A264 PUSH10 0x7066735822122014E1CB 0xCD SWAP11 PUSH7 0x55A444F8EB73CE 0xB5 GAS 0xCE DUP11 0xA8 0xF9 PUSH3 0x8FB9E1 EXTCODEHASH CODECOPY EQ GASPRICE 0xDC CALLVALUE DUP4 0x26 0x2C PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCA PUSH16 0x58BA63116F28FD954EE13CBDAA19EBF DUP14 DUP16 PUSH10 0x4A53BA11CEA74D3F185 CODECOPY PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ","sourceMap":"236:1852:29:-:0;;;375:79;;;-1:-1:-1;;;;;;375:79:29;412:42;375:79;;;236:1852;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@ENTRY_POINT_ADDRESS_3974":{"entryPoint":null,"id":3974,"parameterSlots":0,"returnSlots":0},"@addStake_4077":{"entryPoint":368,"id":4077,"parameterSlots":2,"returnSlots":0},"@createFactory_4041":{"entryPoint":676,"id":4041,"parameterSlots":0,"returnSlots":0},"@current_1145":{"entryPoint":null,"id":1145,"parameterSlots":1,"returnSlots":1},"@factories_3981":{"entryPoint":510,"id":3981,"parameterSlots":0,"returnSlots":0},"@factoryMap_3985":{"entryPoint":null,"id":3985,"parameterSlots":0,"returnSlots":0},"@getFactories_4052":{"entryPoint":565,"id":4052,"parameterSlots":0,"returnSlots":1},"@increment_1159":{"entryPoint":null,"id":1159,"parameterSlots":1,"returnSlots":0},"abi_decode_tuple_t_addresst_uint32":{"entryPoint":1030,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256":{"entryPoint":1121,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_array$_t_contract$_SimpleAccountFactory_$4588_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":1146,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_IEntryPoint_$3605__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_SimpleAccountFactory_$4588__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:2638:34","statements":[{"nodeType":"YulBlock","src":"6:3:34","statements":[]},{"body":{"nodeType":"YulBlock","src":"100:395:34","statements":[{"body":{"nodeType":"YulBlock","src":"146:16:34","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"155:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"158:1:34","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"148:6:34"},"nodeType":"YulFunctionCall","src":"148:12:34"},"nodeType":"YulExpressionStatement","src":"148:12:34"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"121:7:34"},{"name":"headStart","nodeType":"YulIdentifier","src":"130:9:34"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"117:3:34"},"nodeType":"YulFunctionCall","src":"117:23:34"},{"kind":"number","nodeType":"YulLiteral","src":"142:2:34","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"113:3:34"},"nodeType":"YulFunctionCall","src":"113:32:34"},"nodeType":"YulIf","src":"110:52:34"},{"nodeType":"YulVariableDeclaration","src":"171:36:34","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"197:9:34"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"184:12:34"},"nodeType":"YulFunctionCall","src":"184:23:34"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"175:5:34","type":""}]},{"body":{"nodeType":"YulBlock","src":"293:16:34","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"302:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"305:1:34","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"295:6:34"},"nodeType":"YulFunctionCall","src":"295:12:34"},"nodeType":"YulExpressionStatement","src":"295:12:34"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"229:5:34"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"240:5:34"},{"kind":"number","nodeType":"YulLiteral","src":"247:42:34","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"236:3:34"},"nodeType":"YulFunctionCall","src":"236:54:34"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"226:2:34"},"nodeType":"YulFunctionCall","src":"226:65:34"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"219:6:34"},"nodeType":"YulFunctionCall","src":"219:73:34"},"nodeType":"YulIf","src":"216:93:34"},{"nodeType":"YulAssignment","src":"318:15:34","value":{"name":"value","nodeType":"YulIdentifier","src":"328:5:34"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"318:6:34"}]},{"nodeType":"YulVariableDeclaration","src":"342:47:34","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"374:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"385:2:34","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"370:3:34"},"nodeType":"YulFunctionCall","src":"370:18:34"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"357:12:34"},"nodeType":"YulFunctionCall","src":"357:32:34"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"346:7:34","type":""}]},{"body":{"nodeType":"YulBlock","src":"447:16:34","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"456:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"459:1:34","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"449:6:34"},"nodeType":"YulFunctionCall","src":"449:12:34"},"nodeType":"YulExpressionStatement","src":"449:12:34"}]},"condition":{"arguments":[{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"411:7:34"},{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"424:7:34"},{"kind":"number","nodeType":"YulLiteral","src":"433:10:34","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"420:3:34"},"nodeType":"YulFunctionCall","src":"420:24:34"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"408:2:34"},"nodeType":"YulFunctionCall","src":"408:37:34"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"401:6:34"},"nodeType":"YulFunctionCall","src":"401:45:34"},"nodeType":"YulIf","src":"398:65:34"},{"nodeType":"YulAssignment","src":"472:17:34","value":{"name":"value_1","nodeType":"YulIdentifier","src":"482:7:34"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"472:6:34"}]}]},"name":"abi_decode_tuple_t_addresst_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"58:9:34","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"69:7:34","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"81:6:34","type":""},{"name":"value1","nodeType":"YulTypedName","src":"89:6:34","type":""}],"src":"14:481:34"},{"body":{"nodeType":"YulBlock","src":"570:110:34","statements":[{"body":{"nodeType":"YulBlock","src":"616:16:34","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"625:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"628:1:34","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"618:6:34"},"nodeType":"YulFunctionCall","src":"618:12:34"},"nodeType":"YulExpressionStatement","src":"618:12:34"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"591:7:34"},{"name":"headStart","nodeType":"YulIdentifier","src":"600:9:34"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"587:3:34"},"nodeType":"YulFunctionCall","src":"587:23:34"},{"kind":"number","nodeType":"YulLiteral","src":"612:2:34","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"583:3:34"},"nodeType":"YulFunctionCall","src":"583:32:34"},"nodeType":"YulIf","src":"580:52:34"},{"nodeType":"YulAssignment","src":"641:33:34","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"664:9:34"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"651:12:34"},"nodeType":"YulFunctionCall","src":"651:23:34"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"641:6:34"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"536:9:34","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"547:7:34","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"559:6:34","type":""}],"src":"500:180:34"},{"body":{"nodeType":"YulBlock","src":"815:125:34","statements":[{"nodeType":"YulAssignment","src":"825:26:34","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"837:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"848:2:34","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"833:3:34"},"nodeType":"YulFunctionCall","src":"833:18:34"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"825:4:34"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"867:9:34"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"882:6:34"},{"kind":"number","nodeType":"YulLiteral","src":"890:42:34","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"878:3:34"},"nodeType":"YulFunctionCall","src":"878:55:34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"860:6:34"},"nodeType":"YulFunctionCall","src":"860:74:34"},"nodeType":"YulExpressionStatement","src":"860:74:34"}]},"name":"abi_encode_tuple_t_contract$_SimpleAccountFactory_$4588__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"784:9:34","type":""},{"name":"value0","nodeType":"YulTypedName","src":"795:6:34","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"806:4:34","type":""}],"src":"685:255:34"},{"body":{"nodeType":"YulBlock","src":"1125:530:34","statements":[{"nodeType":"YulVariableDeclaration","src":"1135:12:34","value":{"kind":"number","nodeType":"YulLiteral","src":"1145:2:34","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1139:2:34","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1156:32:34","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1174:9:34"},{"name":"_1","nodeType":"YulIdentifier","src":"1185:2:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1170:3:34"},"nodeType":"YulFunctionCall","src":"1170:18:34"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"1160:6:34","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1204:9:34"},{"name":"_1","nodeType":"YulIdentifier","src":"1215:2:34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1197:6:34"},"nodeType":"YulFunctionCall","src":"1197:21:34"},"nodeType":"YulExpressionStatement","src":"1197:21:34"},{"nodeType":"YulVariableDeclaration","src":"1227:17:34","value":{"name":"tail_1","nodeType":"YulIdentifier","src":"1238:6:34"},"variables":[{"name":"pos","nodeType":"YulTypedName","src":"1231:3:34","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1253:27:34","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1273:6:34"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1267:5:34"},"nodeType":"YulFunctionCall","src":"1267:13:34"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"1257:6:34","type":""}]},{"expression":{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"1296:6:34"},{"name":"length","nodeType":"YulIdentifier","src":"1304:6:34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1289:6:34"},"nodeType":"YulFunctionCall","src":"1289:22:34"},"nodeType":"YulExpressionStatement","src":"1289:22:34"},{"nodeType":"YulAssignment","src":"1320:25:34","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1331:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"1342:2:34","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1327:3:34"},"nodeType":"YulFunctionCall","src":"1327:18:34"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"1320:3:34"}]},{"nodeType":"YulVariableDeclaration","src":"1354:29:34","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1372:6:34"},{"name":"_1","nodeType":"YulIdentifier","src":"1380:2:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1368:3:34"},"nodeType":"YulFunctionCall","src":"1368:15:34"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"1358:6:34","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1392:10:34","value":{"kind":"number","nodeType":"YulLiteral","src":"1401:1:34","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1396:1:34","type":""}]},{"body":{"nodeType":"YulBlock","src":"1460:169:34","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1481:3:34"},{"arguments":[{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"1496:6:34"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1490:5:34"},"nodeType":"YulFunctionCall","src":"1490:13:34"},{"kind":"number","nodeType":"YulLiteral","src":"1505:42:34","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1486:3:34"},"nodeType":"YulFunctionCall","src":"1486:62:34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1474:6:34"},"nodeType":"YulFunctionCall","src":"1474:75:34"},"nodeType":"YulExpressionStatement","src":"1474:75:34"},{"nodeType":"YulAssignment","src":"1562:19:34","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1573:3:34"},{"name":"_1","nodeType":"YulIdentifier","src":"1578:2:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1569:3:34"},"nodeType":"YulFunctionCall","src":"1569:12:34"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"1562:3:34"}]},{"nodeType":"YulAssignment","src":"1594:25:34","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"1608:6:34"},{"name":"_1","nodeType":"YulIdentifier","src":"1616:2:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1604:3:34"},"nodeType":"YulFunctionCall","src":"1604:15:34"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"1594:6:34"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1422:1:34"},{"name":"length","nodeType":"YulIdentifier","src":"1425:6:34"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1419:2:34"},"nodeType":"YulFunctionCall","src":"1419:13:34"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1433:18:34","statements":[{"nodeType":"YulAssignment","src":"1435:14:34","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1444:1:34"},{"kind":"number","nodeType":"YulLiteral","src":"1447:1:34","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1440:3:34"},"nodeType":"YulFunctionCall","src":"1440:9:34"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1435:1:34"}]}]},"pre":{"nodeType":"YulBlock","src":"1415:3:34","statements":[]},"src":"1411:218:34"},{"nodeType":"YulAssignment","src":"1638:11:34","value":{"name":"pos","nodeType":"YulIdentifier","src":"1646:3:34"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1638:4:34"}]}]},"name":"abi_encode_tuple_t_array$_t_contract$_SimpleAccountFactory_$4588_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1094:9:34","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1105:6:34","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1116:4:34","type":""}],"src":"945:710:34"},{"body":{"nodeType":"YulBlock","src":"1761:125:34","statements":[{"nodeType":"YulAssignment","src":"1771:26:34","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1783:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"1794:2:34","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1779:3:34"},"nodeType":"YulFunctionCall","src":"1779:18:34"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1771:4:34"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1813:9:34"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1828:6:34"},{"kind":"number","nodeType":"YulLiteral","src":"1836:42:34","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1824:3:34"},"nodeType":"YulFunctionCall","src":"1824:55:34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1806:6:34"},"nodeType":"YulFunctionCall","src":"1806:74:34"},"nodeType":"YulExpressionStatement","src":"1806:74:34"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1730:9:34","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1741:6:34","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1752:4:34","type":""}],"src":"1660:226:34"},{"body":{"nodeType":"YulBlock","src":"1990:93:34","statements":[{"nodeType":"YulAssignment","src":"2000:26:34","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2012:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"2023:2:34","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2008:3:34"},"nodeType":"YulFunctionCall","src":"2008:18:34"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2000:4:34"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2042:9:34"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2057:6:34"},{"kind":"number","nodeType":"YulLiteral","src":"2065:10:34","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2053:3:34"},"nodeType":"YulFunctionCall","src":"2053:23:34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2035:6:34"},"nodeType":"YulFunctionCall","src":"2035:42:34"},"nodeType":"YulExpressionStatement","src":"2035:42:34"}]},"name":"abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1959:9:34","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1970:6:34","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1981:4:34","type":""}],"src":"1891:192:34"},{"body":{"nodeType":"YulBlock","src":"2209:125:34","statements":[{"nodeType":"YulAssignment","src":"2219:26:34","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2231:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"2242:2:34","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2227:3:34"},"nodeType":"YulFunctionCall","src":"2227:18:34"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2219:4:34"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2261:9:34"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2276:6:34"},{"kind":"number","nodeType":"YulLiteral","src":"2284:42:34","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2272:3:34"},"nodeType":"YulFunctionCall","src":"2272:55:34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2254:6:34"},"nodeType":"YulFunctionCall","src":"2254:74:34"},"nodeType":"YulExpressionStatement","src":"2254:74:34"}]},"name":"abi_encode_tuple_t_contract$_IEntryPoint_$3605__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2178:9:34","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2189:6:34","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2200:4:34","type":""}],"src":"2088:246:34"},{"body":{"nodeType":"YulBlock","src":"2468:168:34","statements":[{"nodeType":"YulAssignment","src":"2478:26:34","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2490:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"2501:2:34","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2486:3:34"},"nodeType":"YulFunctionCall","src":"2486:18:34"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2478:4:34"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2520:9:34"},{"name":"value0","nodeType":"YulIdentifier","src":"2531:6:34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2513:6:34"},"nodeType":"YulFunctionCall","src":"2513:25:34"},"nodeType":"YulExpressionStatement","src":"2513:25:34"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2558:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"2569:2:34","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2554:3:34"},"nodeType":"YulFunctionCall","src":"2554:18:34"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"2578:6:34"},{"kind":"number","nodeType":"YulLiteral","src":"2586:42:34","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2574:3:34"},"nodeType":"YulFunctionCall","src":"2574:55:34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2547:6:34"},"nodeType":"YulFunctionCall","src":"2547:83:34"},"nodeType":"YulExpressionStatement","src":"2547:83:34"}]},"name":"abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2429:9:34","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2440:6:34","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2448:6:34","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2459:4:34","type":""}],"src":"2339:297:34"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_addresst_uint32(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        if iszero(eq(value_1, and(value_1, 0xffffffff))) { revert(0, 0) }\n        value1 := value_1\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_contract$_SimpleAccountFactory_$4588__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_array$_t_contract$_SimpleAccountFactory_$4588_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let srcPtr := add(value0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, and(mload(srcPtr), 0xffffffffffffffffffffffffffffffffffffffff))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffff))\n    }\n    function abi_encode_tuple_t_contract$_IEntryPoint_$3605__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n}","id":34,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"6080604052600436106100655760003560e01c80639ab4a98c116100435780639ab4a98c146100eb578063a905054d14610100578063efa8d3381461012d57600080fd5b8063451711591461006a578063672383c41461007f5780637e6cbb6a146100c9575b600080fd5b61007d610078366004610406565b610170565b005b34801561008b57600080fd5b5061009f61009a366004610461565b6101fe565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b3480156100d557600080fd5b506100de610235565b6040516100c0919061047a565b3480156100f757600080fd5b5061007d6102a4565b34801561010c57600080fd5b5060005461009f9073ffffffffffffffffffffffffffffffffffffffff1681565b34801561013957600080fd5b5061009f610148366004610461565b60036020526000908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b6040517f0396cb6000000000000000000000000000000000000000000000000000000000815263ffffffff82166004820152829073ffffffffffffffffffffffffffffffffffffffff821690630396cb609034906024016000604051808303818588803b1580156101e057600080fd5b505af11580156101f4573d6000803e3d6000fd5b5050505050505050565b6002818154811061020e57600080fd5b60009182526020909120015473ffffffffffffffffffffffffffffffffffffffff16905081565b6060600280548060200260200160405190810160405280929190818152602001828054801561029a57602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff16815260019091019060200180831161026f575b5050505050905090565b60006102af60015490565b60008054604051929350909173ffffffffffffffffffffffffffffffffffffffff909116906102dd906103f9565b73ffffffffffffffffffffffffffffffffffffffff9091168152602001604051809103906000f080158015610316573d6000803e3d6000fd5b506002805460018082019092557f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace01805473ffffffffffffffffffffffffffffffffffffffff84167fffffffffffffffffffffffff0000000000000000000000000000000000000000918216811790925560008681526003602052604090208054909116909117905580548101905590506040805183815273ffffffffffffffffffffffffffffffffffffffff831660208201527fefa81a4569551eed9daab49e121e3b5f2d9a57e6aba5992fad6daae99b3b36a5910160405180910390a15050565b613523806104d583390190565b6000806040838503121561041957600080fd5b823573ffffffffffffffffffffffffffffffffffffffff8116811461043d57600080fd5b9150602083013563ffffffff8116811461045657600080fd5b809150509250929050565b60006020828403121561047357600080fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b818110156104c857835173ffffffffffffffffffffffffffffffffffffffff1683529284019291840191600101610496565b5090969550505050505056fe60c060405234801561001057600080fd5b5060405161352338038061352383398101604081905261002f9161008d565b8060405161003c90610080565b6001600160a01b039091168152602001604051809103906000f080158015610068573d6000803e3d6000fd5b506001600160a01b039081166080521660a0526100bd565b6125a680610f7d83390190565b60006020828403121561009f57600080fd5b81516001600160a01b03811681146100b657600080fd5b9392505050565b60805160a051610e876100f66000396000818161013c015261019201526000818160930152818161027601526104200152610e876000f3fe608060405260043610620000615760003560e01c80635fbfb9cf11620000485780635fbfb9cf14620000de5780638cb84e181462000103578063b0d691fe146200012857600080fd5b80630396cb60146200006657806311464fbe146200007f575b600080fd5b6200007d620000773660046200056c565b6200015e565b005b3480156200008c57600080fd5b50620000b57f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b348015620000eb57600080fd5b50620000b5620000fd36600462000594565b6200020a565b3480156200011057600080fd5b50620000b56200012236600462000594565b620003b3565b3480156200013557600080fd5b50620000b57f000000000000000000000000000000000000000000000000000000000000000081565b6040517f0396cb6000000000000000000000000000000000000000000000000000000000815263ffffffff821660048201527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1690630396cb609034906024016000604051808303818588803b158015620001ed57600080fd5b505af115801562000202573d6000803e3d6000fd5b505050505050565b6000806200021760005490565b90506000620002278585620003b3565b905073ffffffffffffffffffffffffffffffffffffffff81163b80156200025357509150620003ad9050565b60405173ffffffffffffffffffffffffffffffffffffffff8716602482015285907f000000000000000000000000000000000000000000000000000000000000000090604401604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fc4d66de800000000000000000000000000000000000000000000000000000000179052516200031b906200055e565b6200032892919062000601565b8190604051809103906000f590508015801562000349573d6000803e3d6000fd5b5093506200035b600080546001019055565b6040805184815273ffffffffffffffffffffffffffffffffffffffff841660208201527f7757890bcab34d673dfca6b71df1b57f75a2fe4231d6e8de726caf534ab1fdd6910160405180910390a15050505b92915050565b6000620005248260001b60405180602001620003cf906200055e565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe082820381018352601f90910116604081905273ffffffffffffffffffffffffffffffffffffffff871660248201527f000000000000000000000000000000000000000000000000000000000000000090604401604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152918152602080830180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fc4d66de8000000000000000000000000000000000000000000000000000000001790529051620004ca9392910162000601565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529082905262000508929160200162000671565b604051602081830303815290604052805190602001206200052b565b9392505050565b6000620005248383306000604051836040820152846020820152828152600b8101905060ff815360559020949350505050565b6107ad80620006a583390190565b6000602082840312156200057f57600080fd5b813563ffffffff811681146200052457600080fd5b60008060408385031215620005a857600080fd5b823573ffffffffffffffffffffffffffffffffffffffff81168114620005cd57600080fd5b946020939093013593505050565b60005b83811015620005f8578181015183820152602001620005de565b50506000910152565b73ffffffffffffffffffffffffffffffffffffffff8316815260406020820152600082518060408401526200063e816060850160208701620005db565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016919091016060019392505050565b6000835162000685818460208801620005db565b8351908301906200069b818360208801620005db565b0194935050505056fe60806040526040516107ad3803806107ad83398101604081905261002291610319565b61002e82826000610035565b5050610436565b61003e8361006b565b60008251118061004b5750805b156100665761006483836100ab60201b6100291760201c565b505b505050565b610074816100d7565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606100d08383604051806060016040528060278152602001610786602791396101a9565b9392505050565b6100ea8161022260201b6100551760201c565b6101515760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b60648201526084015b60405180910390fd5b806101887f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b61023160201b6100711760201c565b80546001600160a01b0319166001600160a01b039290921691909117905550565b6060600080856001600160a01b0316856040516101c691906103e7565b600060405180830381855af49150503d8060008114610201576040519150601f19603f3d011682016040523d82523d6000602084013e610206565b606091505b50909250905061021886838387610234565b9695505050505050565b6001600160a01b03163b151590565b90565b606083156102a357825160000361029c576001600160a01b0385163b61029c5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610148565b50816102ad565b6102ad83836102b5565b949350505050565b8151156102c55781518083602001fd5b8060405162461bcd60e51b81526004016101489190610403565b634e487b7160e01b600052604160045260246000fd5b60005b838110156103105781810151838201526020016102f8565b50506000910152565b6000806040838503121561032c57600080fd5b82516001600160a01b038116811461034357600080fd5b60208401519092506001600160401b038082111561036057600080fd5b818501915085601f83011261037457600080fd5b815181811115610386576103866102df565b604051601f8201601f19908116603f011681019083821181831017156103ae576103ae6102df565b816040528281528860208487010111156103c757600080fd5b6103d88360208301602088016102f5565b80955050505050509250929050565b600082516103f98184602087016102f5565b9190910192915050565b60208152600082518060208401526104228160408501602087016102f5565b601f01601f19169190910160400192915050565b610341806104456000396000f3fe60806040523661001357610011610017565b005b6100115b610027610022610074565b6100b9565b565b606061004e83836040518060600160405280602781526020016102e5602791396100dd565b9392505050565b73ffffffffffffffffffffffffffffffffffffffff163b151590565b90565b60006100b47f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5473ffffffffffffffffffffffffffffffffffffffff1690565b905090565b3660008037600080366000845af43d6000803e8080156100d8573d6000f35b3d6000fd5b60606000808573ffffffffffffffffffffffffffffffffffffffff16856040516101079190610277565b600060405180830381855af49150503d8060008114610142576040519150601f19603f3d011682016040523d82523d6000602084013e610147565b606091505b509150915061015886838387610162565b9695505050505050565b606083156101fd5782516000036101f65773ffffffffffffffffffffffffffffffffffffffff85163b6101f6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064015b60405180910390fd5b5081610207565b610207838361020f565b949350505050565b81511561021f5781518083602001fd5b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101ed9190610293565b60005b8381101561026e578181015183820152602001610256565b50506000910152565b60008251610289818460208701610253565b9190910192915050565b60208152600082518060208401526102b2816040850160208701610253565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016919091016040019291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220b6d490c7b0f7d19828a449ea9a4cecbee2e462a603d4de127808117591d9f02564736f6c63430008120033416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220eb3ce247c401307168a8b677733675e96f6f6a51720a8840db994054877dea1764736f6c6343000812003360c0604052306080523480156200001557600080fd5b50604051620025a6380380620025a6833981016040819052620000389162000117565b6001600160a01b03811660a0526200004f62000056565b5062000149565b600054610100900460ff1615620000c35760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60005460ff9081161462000115576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b6000602082840312156200012a57600080fd5b81516001600160a01b03811681146200014257600080fd5b9392505050565b60805160a0516123ea620001bc6000396000818161032f015281816108810152818161092801528181610d4c01528181610f9d01528181610fe40152818161133601526115c801526000818161066b0152818161071b015281816109ec01528181610a9c0152610be501526123ea6000f3fe60806040526004361061012c5760003560e01c806352d1902d116100a5578063bc197c8111610074578063c4d66de811610059578063c4d66de8146103d0578063d087d288146103f0578063f23a6e611461040557600080fd5b8063bc197c8114610373578063c399ec88146103bb57600080fd5b806352d1902d146102b35780638da5cb5b146102c8578063b0d691fe14610320578063b61d27f61461035357600080fd5b80633659cfe6116100fc5780634a58db19116100e15780634a58db19146102785780634d44560d146102805780634f1ef286146102a057600080fd5b80633659cfe61461022a5780633a871cdd1461024a57600080fd5b806223de291461013857806301ffc9a71461015f578063150b7a021461019457806318dfb3c71461020a57600080fd5b3661013357005b600080fd5b34801561014457600080fd5b5061015d610153366004611c92565b5050505050505050565b005b34801561016b57600080fd5b5061017f61017a366004611d43565b61044b565b60405190151581526020015b60405180910390f35b3480156101a057600080fd5b506101d96101af366004611d85565b7f150b7a020000000000000000000000000000000000000000000000000000000095945050505050565b6040517fffffffff00000000000000000000000000000000000000000000000000000000909116815260200161018b565b34801561021657600080fd5b5061015d610225366004611e3d565b610530565b34801561023657600080fd5b5061015d610245366004611ea9565b610654565b34801561025657600080fd5b5061026a610265366004611ec6565b610859565b60405190815260200161018b565b61015d61087f565b34801561028c57600080fd5b5061015d61029b366004611f1a565b61091e565b61015d6102ae366004611f75565b6109d5565b3480156102bf57600080fd5b5061026a610bcb565b3480156102d457600080fd5b506000546102fb9062010000900473ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161018b565b34801561032c57600080fd5b507f00000000000000000000000000000000000000000000000000000000000000006102fb565b34801561035f57600080fd5b5061015d61036e366004612057565b610cb7565b34801561037f57600080fd5b506101d961038e3660046120a7565b7fbc197c810000000000000000000000000000000000000000000000000000000098975050505050505050565b3480156103c757600080fd5b5061026a610d06565b3480156103dc57600080fd5b5061015d6103eb366004611ea9565b610dbd565b3480156103fc57600080fd5b5061026a610f50565b34801561041157600080fd5b506101d9610420366004612145565b7ff23a6e61000000000000000000000000000000000000000000000000000000009695505050505050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f150b7a020000000000000000000000000000000000000000000000000000000014806104de57507fffffffff0000000000000000000000000000000000000000000000000000000082167f4e2312e000000000000000000000000000000000000000000000000000000000145b8061052a57507fffffffff0000000000000000000000000000000000000000000000000000000082167f01ffc9a700000000000000000000000000000000000000000000000000000000145b92915050565b610538610fcc565b8281146105a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f77726f6e67206172726179206c656e677468730000000000000000000000000060448201526064015b60405180910390fd5b60005b8381101561064d5761063b8585838181106105c6576105c66121c1565b90506020020160208101906105db9190611ea9565b60008585858181106105ef576105ef6121c1565b905060200281019061060191906121f0565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061109592505050565b8061064581612255565b9150506105a9565b5050505050565b73ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000163003610719576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201527f64656c656761746563616c6c0000000000000000000000000000000000000000606482015260840161059d565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1661078e7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5473ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff1614610831576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201527f6163746976652070726f78790000000000000000000000000000000000000000606482015260840161059d565b61083a81611112565b604080516000808252602082019092526108569183919061111a565b50565b600061086361131e565b61086d84846113bd565b905061087882611476565b9392505050565b7f00000000000000000000000000000000000000000000000000000000000000006040517fb760faf900000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff919091169063b760faf99034906024016000604051808303818588803b15801561090a57600080fd5b505af115801561064d573d6000803e3d6000fd5b6109266114e1565b7f00000000000000000000000000000000000000000000000000000000000000006040517f205c287800000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff848116600483015260248201849052919091169063205c287890604401600060405180830381600087803b1580156109b957600080fd5b505af11580156109cd573d6000803e3d6000fd5b505050505050565b73ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000163003610a9a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201527f64656c656761746563616c6c0000000000000000000000000000000000000000606482015260840161059d565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16610b0f7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5473ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff1614610bb2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201527f6163746976652070726f78790000000000000000000000000000000000000000606482015260840161059d565b610bbb82611112565b610bc78282600161111a565b5050565b60003073ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614610c92576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c0000000000000000606482015260840161059d565b507f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc90565b610cbf610fcc565b610d00848484848080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061109592505050565b50505050565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009073ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016906370a08231906024015b602060405180830381865afa158015610d94573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610db891906122b4565b905090565b600054610100900460ff1615808015610ddd5750600054600160ff909116105b80610df75750303b158015610df7575060005460ff166001145b610e83576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a6564000000000000000000000000000000000000606482015260840161059d565b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011790558015610ee157600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff166101001790555b610eea82611572565b8015610bc757600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15050565b6040517f35567e1a0000000000000000000000000000000000000000000000000000000081523060048201526000602482018190529073ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016906335567e1a90604401610d77565b3373ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016148061102d575060005462010000900473ffffffffffffffffffffffffffffffffffffffff1633145b611093576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f6163636f756e743a206e6f74204f776e6572206f7220456e747279506f696e74604482015260640161059d565b565b6000808473ffffffffffffffffffffffffffffffffffffffff1684846040516110be91906122f1565b60006040518083038185875af1925050503d80600081146110fb576040519150601f19603f3d011682016040523d82523d6000602084013e611100565b606091505b50915091508161064d57805160208201fd5b6108566114e1565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff16156111525761114d83611611565b505050565b8273ffffffffffffffffffffffffffffffffffffffff166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa9250505080156111d7575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682019092526111d4918101906122b4565b60015b611263576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201527f6f6e206973206e6f742055555053000000000000000000000000000000000000606482015260840161059d565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc8114611312576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f7860448201527f6961626c65555549440000000000000000000000000000000000000000000000606482015260840161059d565b5061114d83838361171b565b3373ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614611093576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f6163636f756e743a206e6f742066726f6d20456e747279506f696e7400000000604482015260640161059d565b7f19457468657265756d205369676e6564204d6573736167653a0a3332000000006000908152601c829052603c812061143a6113fd6101408601866121f0565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525085939250506117409050565b60005462010000900473ffffffffffffffffffffffffffffffffffffffff90811691161461146c57600191505061052a565b5060009392505050565b80156108565760405160009033907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90849084818181858888f193505050503d806000811461064d576040519150601f19603f3d011682016040523d82523d6000602084013e61064d565b60005462010000900473ffffffffffffffffffffffffffffffffffffffff1633148061150c57503330145b611093576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f6f6e6c79206f776e657200000000000000000000000000000000000000000000604482015260640161059d565b600080547fffffffffffffffffffff0000000000000000000000000000000000000000ffff166201000073ffffffffffffffffffffffffffffffffffffffff8481168202929092178084556040519190048216927f0000000000000000000000000000000000000000000000000000000000000000909216917f47e55c76e7a6f1fd8996a1da8008c1ea29699cca35e7bcd057f2dec313b6e5de91a350565b73ffffffffffffffffffffffffffffffffffffffff81163b6116b5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201527f6f74206120636f6e747261637400000000000000000000000000000000000000606482015260840161059d565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b61172483611764565b6000825111806117315750805b1561114d57610d0083836117b1565b600080600061174f85856117d6565b9150915061175c8161181b565b509392505050565b61176d81611611565b60405173ffffffffffffffffffffffffffffffffffffffff8216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b6060610878838360405180606001604052806027815260200161238e602791396119ce565b600080825160410361180c5760208301516040840151606085015160001a61180087828585611a53565b94509450505050611814565b506000905060025b9250929050565b600081600481111561182f5761182f61230d565b036118375750565b600181600481111561184b5761184b61230d565b036118b2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f45434453413a20696e76616c6964207369676e61747572650000000000000000604482015260640161059d565b60028160048111156118c6576118c661230d565b0361192d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e67746800604482015260640161059d565b60038160048111156119415761194161230d565b03610856576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c60448201527f7565000000000000000000000000000000000000000000000000000000000000606482015260840161059d565b60606000808573ffffffffffffffffffffffffffffffffffffffff16856040516119f891906122f1565b600060405180830381855af49150503d8060008114611a33576040519150601f19603f3d011682016040523d82523d6000602084013e611a38565b606091505b5091509150611a4986838387611b42565b9695505050505050565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115611a8a5750600090506003611b39565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015611ade573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015191505073ffffffffffffffffffffffffffffffffffffffff8116611b3257600060019250925050611b39565b9150600090505b94509492505050565b60608315611bd8578251600003611bd15773ffffffffffffffffffffffffffffffffffffffff85163b611bd1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161059d565b5081611be2565b611be28383611bea565b949350505050565b815115611bfa5781518083602001fd5b806040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161059d919061233c565b73ffffffffffffffffffffffffffffffffffffffff8116811461085657600080fd5b60008083601f840112611c6257600080fd5b50813567ffffffffffffffff811115611c7a57600080fd5b60208301915083602082850101111561181457600080fd5b60008060008060008060008060c0898b031215611cae57600080fd5b8835611cb981611c2e565b97506020890135611cc981611c2e565b96506040890135611cd981611c2e565b955060608901359450608089013567ffffffffffffffff80821115611cfd57600080fd5b611d098c838d01611c50565b909650945060a08b0135915080821115611d2257600080fd5b50611d2f8b828c01611c50565b999c989b5096995094979396929594505050565b600060208284031215611d5557600080fd5b81357fffffffff000000000000000000000000000000000000000000000000000000008116811461087857600080fd5b600080600080600060808688031215611d9d57600080fd5b8535611da881611c2e565b94506020860135611db881611c2e565b935060408601359250606086013567ffffffffffffffff811115611ddb57600080fd5b611de788828901611c50565b969995985093965092949392505050565b60008083601f840112611e0a57600080fd5b50813567ffffffffffffffff811115611e2257600080fd5b6020830191508360208260051b850101111561181457600080fd5b60008060008060408587031215611e5357600080fd5b843567ffffffffffffffff80821115611e6b57600080fd5b611e7788838901611df8565b90965094506020870135915080821115611e9057600080fd5b50611e9d87828801611df8565b95989497509550505050565b600060208284031215611ebb57600080fd5b813561087881611c2e565b600080600060608486031215611edb57600080fd5b833567ffffffffffffffff811115611ef257600080fd5b84016101608187031215611f0557600080fd5b95602085013595506040909401359392505050565b60008060408385031215611f2d57600080fd5b8235611f3881611c2e565b946020939093013593505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60008060408385031215611f8857600080fd5b8235611f9381611c2e565b9150602083013567ffffffffffffffff80821115611fb057600080fd5b818501915085601f830112611fc457600080fd5b813581811115611fd657611fd6611f46565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f0116810190838211818310171561201c5761201c611f46565b8160405282815288602084870101111561203557600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b6000806000806060858703121561206d57600080fd5b843561207881611c2e565b935060208501359250604085013567ffffffffffffffff81111561209b57600080fd5b611e9d87828801611c50565b60008060008060008060008060a0898b0312156120c357600080fd5b88356120ce81611c2e565b975060208901356120de81611c2e565b9650604089013567ffffffffffffffff808211156120fb57600080fd5b6121078c838d01611df8565b909850965060608b013591508082111561212057600080fd5b61212c8c838d01611df8565b909650945060808b0135915080821115611d2257600080fd5b60008060008060008060a0878903121561215e57600080fd5b863561216981611c2e565b9550602087013561217981611c2e565b94506040870135935060608701359250608087013567ffffffffffffffff8111156121a357600080fd5b6121af89828a01611c50565b979a9699509497509295939492505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261222557600080fd5b83018035915067ffffffffffffffff82111561224057600080fd5b60200191503681900382131561181457600080fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036122ad577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b5060010190565b6000602082840312156122c657600080fd5b5051919050565b60005b838110156122e85781810151838201526020016122d0565b50506000910152565b600082516123038184602087016122cd565b9190910192915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b602081526000825180602084015261235b8160408501602087016122cd565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016919091016040019291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a264697066735822122014e1cbcd9a6655a444f8eb73ceb55ace8aa8f9628fb9e13f39143adc3483262c64736f6c63430008120033a2646970667358221220ca6f058ba63116f28fd954ee13cbdaa19ebf8d8f6904a53ba11cea74d3f1853964736f6c63430008120033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x65 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9AB4A98C GT PUSH2 0x43 JUMPI DUP1 PUSH4 0x9AB4A98C EQ PUSH2 0xEB JUMPI DUP1 PUSH4 0xA905054D EQ PUSH2 0x100 JUMPI DUP1 PUSH4 0xEFA8D338 EQ PUSH2 0x12D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x45171159 EQ PUSH2 0x6A JUMPI DUP1 PUSH4 0x672383C4 EQ PUSH2 0x7F JUMPI DUP1 PUSH4 0x7E6CBB6A EQ PUSH2 0xC9 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7D PUSH2 0x78 CALLDATASIZE PUSH1 0x4 PUSH2 0x406 JUMP JUMPDEST PUSH2 0x170 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x9F PUSH2 0x9A CALLDATASIZE PUSH1 0x4 PUSH2 0x461 JUMP JUMPDEST PUSH2 0x1FE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xDE PUSH2 0x235 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC0 SWAP2 SWAP1 PUSH2 0x47A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7D PUSH2 0x2A4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x10C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH2 0x9F SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x139 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x9F PUSH2 0x148 CALLDATASIZE PUSH1 0x4 PUSH2 0x461 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x396CB6000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH4 0xFFFFFFFF DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE DUP3 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 PUSH4 0x396CB60 SWAP1 CALLVALUE SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1F4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x20E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x29A JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x26F JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AF PUSH1 0x1 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD SWAP3 SWAP4 POP SWAP1 SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND SWAP1 PUSH2 0x2DD SWAP1 PUSH2 0x3F9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH2 0x316 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 DUP1 DUP3 ADD SWAP1 SWAP3 SSTORE PUSH32 0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACE ADD DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 SWAP2 DUP3 AND DUP2 OR SWAP1 SWAP3 SSTORE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SWAP2 OR SWAP1 SSTORE DUP1 SLOAD DUP2 ADD SWAP1 SSTORE SWAP1 POP PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0xEFA81A4569551EED9DAAB49E121E3B5F2D9A57E6ABA5992FAD6DAAE99B3B36A5 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH2 0x3523 DUP1 PUSH2 0x4D5 DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x419 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x43D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH4 0xFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x456 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x473 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x4C8 JUMPI DUP4 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x496 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP INVALID PUSH1 0xC0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x3523 CODESIZE SUB DUP1 PUSH2 0x3523 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0x8D JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH2 0x3C SWAP1 PUSH2 0x80 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH2 0x68 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x80 MSTORE AND PUSH1 0xA0 MSTORE PUSH2 0xBD JUMP JUMPDEST PUSH2 0x25A6 DUP1 PUSH2 0xF7D DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xB6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH2 0xE87 PUSH2 0xF6 PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x13C ADD MSTORE PUSH2 0x192 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH1 0x93 ADD MSTORE DUP2 DUP2 PUSH2 0x276 ADD MSTORE PUSH2 0x420 ADD MSTORE PUSH2 0xE87 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH3 0x61 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5FBFB9CF GT PUSH3 0x48 JUMPI DUP1 PUSH4 0x5FBFB9CF EQ PUSH3 0xDE JUMPI DUP1 PUSH4 0x8CB84E18 EQ PUSH3 0x103 JUMPI DUP1 PUSH4 0xB0D691FE EQ PUSH3 0x128 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x396CB60 EQ PUSH3 0x66 JUMPI DUP1 PUSH4 0x11464FBE EQ PUSH3 0x7F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x7D PUSH3 0x77 CALLDATASIZE PUSH1 0x4 PUSH3 0x56C JUMP JUMPDEST PUSH3 0x15E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x8C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0xB5 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0xEB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0xB5 PUSH3 0xFD CALLDATASIZE PUSH1 0x4 PUSH3 0x594 JUMP JUMPDEST PUSH3 0x20A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x110 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0xB5 PUSH3 0x122 CALLDATASIZE PUSH1 0x4 PUSH3 0x594 JUMP JUMPDEST PUSH3 0x3B3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x135 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0xB5 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x396CB6000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH4 0xFFFFFFFF DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH4 0x396CB60 SWAP1 CALLVALUE SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x1ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x202 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH3 0x217 PUSH1 0x0 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH3 0x227 DUP6 DUP6 PUSH3 0x3B3 JUMP JUMPDEST SWAP1 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND EXTCODESIZE DUP1 ISZERO PUSH3 0x253 JUMPI POP SWAP2 POP PUSH3 0x3AD SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND PUSH1 0x24 DUP3 ADD MSTORE DUP6 SWAP1 PUSH32 0x0 SWAP1 PUSH1 0x44 ADD PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC4D66DE800000000000000000000000000000000000000000000000000000000 OR SWAP1 MSTORE MLOAD PUSH3 0x31B SWAP1 PUSH3 0x55E JUMP JUMPDEST PUSH3 0x328 SWAP3 SWAP2 SWAP1 PUSH3 0x601 JUMP JUMPDEST DUP2 SWAP1 PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE2 SWAP1 POP DUP1 ISZERO DUP1 ISZERO PUSH3 0x349 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP SWAP4 POP PUSH3 0x35B PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x7757890BCAB34D673DFCA6B71DF1B57F75A2FE4231D6E8DE726CAF534AB1FDD6 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x524 DUP3 PUSH1 0x0 SHL PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH3 0x3CF SWAP1 PUSH3 0x55E JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP3 DUP3 SUB DUP2 ADD DUP4 MSTORE PUSH1 0x1F SWAP1 SWAP2 ADD AND PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x0 SWAP1 PUSH1 0x44 ADD PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP1 DUP4 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC4D66DE800000000000000000000000000000000000000000000000000000000 OR SWAP1 MSTORE SWAP1 MLOAD PUSH3 0x4CA SWAP4 SWAP3 SWAP2 ADD PUSH3 0x601 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH3 0x508 SWAP3 SWAP2 PUSH1 0x20 ADD PUSH3 0x671 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH3 0x52B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x524 DUP4 DUP4 ADDRESS PUSH1 0x0 PUSH1 0x40 MLOAD DUP4 PUSH1 0x40 DUP3 ADD MSTORE DUP5 PUSH1 0x20 DUP3 ADD MSTORE DUP3 DUP2 MSTORE PUSH1 0xB DUP2 ADD SWAP1 POP PUSH1 0xFF DUP2 MSTORE8 PUSH1 0x55 SWAP1 KECCAK256 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x7AD DUP1 PUSH3 0x6A5 DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x57F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH4 0xFFFFFFFF DUP2 AND DUP2 EQ PUSH3 0x524 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x5A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH3 0x5CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x5F8 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH3 0x5DE JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x40 DUP5 ADD MSTORE PUSH3 0x63E DUP2 PUSH1 0x60 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH3 0x5DB JUMP JUMPDEST PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x60 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH3 0x685 DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH3 0x5DB JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH3 0x69B DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH3 0x5DB JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x7AD CODESIZE SUB DUP1 PUSH2 0x7AD DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x22 SWAP2 PUSH2 0x319 JUMP JUMPDEST PUSH2 0x2E DUP3 DUP3 PUSH1 0x0 PUSH2 0x35 JUMP JUMPDEST POP POP PUSH2 0x436 JUMP JUMPDEST PUSH2 0x3E DUP4 PUSH2 0x6B JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT DUP1 PUSH2 0x4B JUMPI POP DUP1 JUMPDEST ISZERO PUSH2 0x66 JUMPI PUSH2 0x64 DUP4 DUP4 PUSH2 0xAB PUSH1 0x20 SHL PUSH2 0x29 OR PUSH1 0x20 SHR JUMP JUMPDEST POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x74 DUP2 PUSH2 0xD7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xD0 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x786 PUSH1 0x27 SWAP2 CODECOPY PUSH2 0x1A9 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xEA DUP2 PUSH2 0x222 PUSH1 0x20 SHL PUSH2 0x55 OR PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x151 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720696D706C656D656E746174696F6E206973206E PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x1BDD08184818DBDB9D1C9858DD PUSH1 0x9A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH2 0x188 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL PUSH2 0x231 PUSH1 0x20 SHL PUSH2 0x71 OR PUSH1 0x20 SHR JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x40 MLOAD PUSH2 0x1C6 SWAP2 SWAP1 PUSH2 0x3E7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x201 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x206 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x218 DUP7 DUP4 DUP4 DUP8 PUSH2 0x234 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x2A3 JUMPI DUP3 MLOAD PUSH1 0x0 SUB PUSH2 0x29C JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH2 0x29C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x148 JUMP JUMPDEST POP DUP2 PUSH2 0x2AD JUMP JUMPDEST PUSH2 0x2AD DUP4 DUP4 PUSH2 0x2B5 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP2 MLOAD ISZERO PUSH2 0x2C5 JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x148 SWAP2 SWAP1 PUSH2 0x403 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x310 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2F8 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x32C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x343 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP5 ADD MLOAD SWAP1 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x360 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x374 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x386 JUMPI PUSH2 0x386 PUSH2 0x2DF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x3AE JUMPI PUSH2 0x3AE PUSH2 0x2DF JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP9 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x3C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3D8 DUP4 PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x2F5 JUMP JUMPDEST DUP1 SWAP6 POP POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x3F9 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x2F5 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x422 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x2F5 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x341 DUP1 PUSH2 0x445 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLDATASIZE PUSH2 0x13 JUMPI PUSH2 0x11 PUSH2 0x17 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x11 JUMPDEST PUSH2 0x27 PUSH2 0x22 PUSH2 0x74 JUMP JUMPDEST PUSH2 0xB9 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH2 0x4E DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2E5 PUSH1 0x27 SWAP2 CODECOPY PUSH2 0xDD JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB4 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST CALLDATASIZE PUSH1 0x0 DUP1 CALLDATACOPY PUSH1 0x0 DUP1 CALLDATASIZE PUSH1 0x0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY DUP1 DUP1 ISZERO PUSH2 0xD8 JUMPI RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH1 0x40 MLOAD PUSH2 0x107 SWAP2 SWAP1 PUSH2 0x277 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x142 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x147 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x158 DUP7 DUP4 DUP4 DUP8 PUSH2 0x162 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x1FD JUMPI DUP3 MLOAD PUSH1 0x0 SUB PUSH2 0x1F6 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND EXTCODESIZE PUSH2 0x1F6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP DUP2 PUSH2 0x207 JUMP JUMPDEST PUSH2 0x207 DUP4 DUP4 PUSH2 0x20F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP2 MLOAD ISZERO PUSH2 0x21F JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1ED SWAP2 SWAP1 PUSH2 0x293 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x26E JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x256 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x289 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x253 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x2B2 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x253 JUMP JUMPDEST PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP INVALID COINBASE PUSH5 0x6472657373 GASPRICE KECCAK256 PUSH13 0x6F772D6C6576656C2064656C65 PUSH8 0x6174652063616C6C KECCAK256 PUSH7 0x61696C6564A264 PUSH10 0x70667358221220B6D490 0xC7 0xB0 0xF7 0xD1 SWAP9 0x28 LOG4 0x49 0xEA SWAP11 0x4C 0xEC 0xBE 0xE2 0xE4 PUSH3 0xA603D4 0xDE SLT PUSH25 0x8117591D9F02564736F6C6343000812003341646472657373 GASPRICE KECCAK256 PUSH13 0x6F772D6C6576656C2064656C65 PUSH8 0x6174652063616C6C KECCAK256 PUSH7 0x61696C6564A264 PUSH10 0x70667358221220EB3CE2 SELFBALANCE 0xC4 ADD ADDRESS PUSH18 0x68A8B677733675E96F6F6A51720A8840DB99 BLOCKHASH SLOAD DUP8 PUSH30 0xEA1764736F6C6343000812003360C0604052306080523480156200001557 PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x25A6 CODESIZE SUB DUP1 PUSH3 0x25A6 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x38 SWAP2 PUSH3 0x117 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0xA0 MSTORE PUSH3 0x4F PUSH3 0x56 JUMP JUMPDEST POP PUSH3 0x149 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH3 0xC3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320696E697469 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x616C697A696E67 PUSH1 0xC8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0xFF SWAP1 DUP2 AND EQ PUSH3 0x115 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0xFF SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x12A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x142 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH2 0x23EA PUSH3 0x1BC PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x32F ADD MSTORE DUP2 DUP2 PUSH2 0x881 ADD MSTORE DUP2 DUP2 PUSH2 0x928 ADD MSTORE DUP2 DUP2 PUSH2 0xD4C ADD MSTORE DUP2 DUP2 PUSH2 0xF9D ADD MSTORE DUP2 DUP2 PUSH2 0xFE4 ADD MSTORE DUP2 DUP2 PUSH2 0x1336 ADD MSTORE PUSH2 0x15C8 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x66B ADD MSTORE DUP2 DUP2 PUSH2 0x71B ADD MSTORE DUP2 DUP2 PUSH2 0x9EC ADD MSTORE DUP2 DUP2 PUSH2 0xA9C ADD MSTORE PUSH2 0xBE5 ADD MSTORE PUSH2 0x23EA PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x52D1902D GT PUSH2 0xA5 JUMPI DUP1 PUSH4 0xBC197C81 GT PUSH2 0x74 JUMPI DUP1 PUSH4 0xC4D66DE8 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xC4D66DE8 EQ PUSH2 0x3D0 JUMPI DUP1 PUSH4 0xD087D288 EQ PUSH2 0x3F0 JUMPI DUP1 PUSH4 0xF23A6E61 EQ PUSH2 0x405 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xBC197C81 EQ PUSH2 0x373 JUMPI DUP1 PUSH4 0xC399EC88 EQ PUSH2 0x3BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x52D1902D EQ PUSH2 0x2B3 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2C8 JUMPI DUP1 PUSH4 0xB0D691FE EQ PUSH2 0x320 JUMPI DUP1 PUSH4 0xB61D27F6 EQ PUSH2 0x353 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3659CFE6 GT PUSH2 0xFC JUMPI DUP1 PUSH4 0x4A58DB19 GT PUSH2 0xE1 JUMPI DUP1 PUSH4 0x4A58DB19 EQ PUSH2 0x278 JUMPI DUP1 PUSH4 0x4D44560D EQ PUSH2 0x280 JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x2A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3659CFE6 EQ PUSH2 0x22A JUMPI DUP1 PUSH4 0x3A871CDD EQ PUSH2 0x24A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0x23DE29 EQ PUSH2 0x138 JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0x150B7A02 EQ PUSH2 0x194 JUMPI DUP1 PUSH4 0x18DFB3C7 EQ PUSH2 0x20A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x133 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x144 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15D PUSH2 0x153 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C92 JUMP JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x16B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17F PUSH2 0x17A CALLDATASIZE PUSH1 0x4 PUSH2 0x1D43 JUMP JUMPDEST PUSH2 0x44B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D9 PUSH2 0x1AF CALLDATASIZE PUSH1 0x4 PUSH2 0x1D85 JUMP JUMPDEST PUSH32 0x150B7A0200000000000000000000000000000000000000000000000000000000 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x18B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x216 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15D PUSH2 0x225 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E3D JUMP JUMPDEST PUSH2 0x530 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x236 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15D PUSH2 0x245 CALLDATASIZE PUSH1 0x4 PUSH2 0x1EA9 JUMP JUMPDEST PUSH2 0x654 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x256 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26A PUSH2 0x265 CALLDATASIZE PUSH1 0x4 PUSH2 0x1EC6 JUMP JUMPDEST PUSH2 0x859 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x18B JUMP JUMPDEST PUSH2 0x15D PUSH2 0x87F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15D PUSH2 0x29B CALLDATASIZE PUSH1 0x4 PUSH2 0x1F1A JUMP JUMPDEST PUSH2 0x91E JUMP JUMPDEST PUSH2 0x15D PUSH2 0x2AE CALLDATASIZE PUSH1 0x4 PUSH2 0x1F75 JUMP JUMPDEST PUSH2 0x9D5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26A PUSH2 0xBCB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH2 0x2FB SWAP1 PUSH3 0x10000 SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x18B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH32 0x0 PUSH2 0x2FB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x35F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15D PUSH2 0x36E CALLDATASIZE PUSH1 0x4 PUSH2 0x2057 JUMP JUMPDEST PUSH2 0xCB7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D9 PUSH2 0x38E CALLDATASIZE PUSH1 0x4 PUSH2 0x20A7 JUMP JUMPDEST PUSH32 0xBC197C8100000000000000000000000000000000000000000000000000000000 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26A PUSH2 0xD06 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15D PUSH2 0x3EB CALLDATASIZE PUSH1 0x4 PUSH2 0x1EA9 JUMP JUMPDEST PUSH2 0xDBD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26A PUSH2 0xF50 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x411 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D9 PUSH2 0x420 CALLDATASIZE PUSH1 0x4 PUSH2 0x2145 JUMP JUMPDEST PUSH32 0xF23A6E6100000000000000000000000000000000000000000000000000000000 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH32 0x150B7A0200000000000000000000000000000000000000000000000000000000 EQ DUP1 PUSH2 0x4DE JUMPI POP PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH32 0x4E2312E000000000000000000000000000000000000000000000000000000000 EQ JUMPDEST DUP1 PUSH2 0x52A JUMPI POP PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x538 PUSH2 0xFCC JUMP JUMPDEST DUP3 DUP2 EQ PUSH2 0x5A6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x77726F6E67206172726179206C656E6774687300000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x64D JUMPI PUSH2 0x63B DUP6 DUP6 DUP4 DUP2 DUP2 LT PUSH2 0x5C6 JUMPI PUSH2 0x5C6 PUSH2 0x21C1 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x5DB SWAP2 SWAP1 PUSH2 0x1EA9 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP6 DUP6 DUP2 DUP2 LT PUSH2 0x5EF JUMPI PUSH2 0x5EF PUSH2 0x21C1 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL DUP2 ADD SWAP1 PUSH2 0x601 SWAP2 SWAP1 PUSH2 0x21F0 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x1095 SWAP3 POP POP POP JUMP JUMPDEST DUP1 PUSH2 0x645 DUP2 PUSH2 0x2255 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x5A9 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND ADDRESS SUB PUSH2 0x719 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x64656C656761746563616C6C0000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x59D JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x78E PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x831 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6163746976652070726F78790000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x59D JUMP JUMPDEST PUSH2 0x83A DUP2 PUSH2 0x1112 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x856 SWAP2 DUP4 SWAP2 SWAP1 PUSH2 0x111A JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x863 PUSH2 0x131E JUMP JUMPDEST PUSH2 0x86D DUP5 DUP5 PUSH2 0x13BD JUMP JUMPDEST SWAP1 POP PUSH2 0x878 DUP3 PUSH2 0x1476 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x0 PUSH1 0x40 MLOAD PUSH32 0xB760FAF900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 SWAP1 SWAP2 AND SWAP1 PUSH4 0xB760FAF9 SWAP1 CALLVALUE SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x90A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x64D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH2 0x926 PUSH2 0x14E1 JUMP JUMPDEST PUSH32 0x0 PUSH1 0x40 MLOAD PUSH32 0x205C287800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE SWAP2 SWAP1 SWAP2 AND SWAP1 PUSH4 0x205C2878 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9CD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND ADDRESS SUB PUSH2 0xA9A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x64656C656761746563616C6C0000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x59D JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB0F PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBB2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6163746976652070726F78790000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x59D JUMP JUMPDEST PUSH2 0xBBB DUP3 PUSH2 0x1112 JUMP JUMPDEST PUSH2 0xBC7 DUP3 DUP3 PUSH1 0x1 PUSH2 0x111A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND EQ PUSH2 0xC92 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x555550535570677261646561626C653A206D757374206E6F742062652063616C PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6C6564207468726F7567682064656C656761746563616C6C0000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x59D JUMP JUMPDEST POP PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SWAP1 JUMP JUMPDEST PUSH2 0xCBF PUSH2 0xFCC JUMP JUMPDEST PUSH2 0xD00 DUP5 DUP5 DUP5 DUP5 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x1095 SWAP3 POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD94 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDB8 SWAP2 SWAP1 PUSH2 0x22B4 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 DUP1 ISZERO PUSH2 0xDDD JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xFF SWAP1 SWAP2 AND LT JUMPDEST DUP1 PUSH2 0xDF7 JUMPI POP ADDRESS EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDF7 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND PUSH1 0x1 EQ JUMPDEST PUSH2 0xE83 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x647920696E697469616C697A6564000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x59D JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND PUSH1 0x1 OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0xEE1 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FF AND PUSH2 0x100 OR SWAP1 SSTORE JUMPDEST PUSH2 0xEEA DUP3 PUSH2 0x1572 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xBC7 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FF AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x35567E1A00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x24 DUP3 ADD DUP2 SWAP1 MSTORE SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND SWAP1 PUSH4 0x35567E1A SWAP1 PUSH1 0x44 ADD PUSH2 0xD77 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND EQ DUP1 PUSH2 0x102D JUMPI POP PUSH1 0x0 SLOAD PUSH3 0x10000 SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ JUMPDEST PUSH2 0x1093 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6163636F756E743A206E6F74204F776E6572206F7220456E747279506F696E74 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x59D JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x10BE SWAP2 SWAP1 PUSH2 0x22F1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x10FB JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1100 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x64D JUMPI DUP1 MLOAD PUSH1 0x20 DUP3 ADD REVERT JUMPDEST PUSH2 0x856 PUSH2 0x14E1 JUMP JUMPDEST PUSH32 0x4910FDFA16FED3260ED0E7147F7CC6DA11A60208B5B9406D12A635614FFD9143 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1152 JUMPI PUSH2 0x114D DUP4 PUSH2 0x1611 JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x11D7 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x11D4 SWAP2 DUP2 ADD SWAP1 PUSH2 0x22B4 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1263 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A206E657720696D706C656D656E74617469 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F6E206973206E6F742055555053000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x59D JUMP JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP2 EQ PUSH2 0x1312 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A20756E737570706F727465642070726F78 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6961626C65555549440000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x59D JUMP JUMPDEST POP PUSH2 0x114D DUP4 DUP4 DUP4 PUSH2 0x171B JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND EQ PUSH2 0x1093 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6163636F756E743A206E6F742066726F6D20456E747279506F696E7400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x59D JUMP JUMPDEST PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1C DUP3 SWAP1 MSTORE PUSH1 0x3C DUP2 KECCAK256 PUSH2 0x143A PUSH2 0x13FD PUSH2 0x140 DUP7 ADD DUP7 PUSH2 0x21F0 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP DUP6 SWAP4 SWAP3 POP POP PUSH2 0x1740 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH3 0x10000 SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x146C JUMPI PUSH1 0x1 SWAP2 POP POP PUSH2 0x52A JUMP JUMPDEST POP PUSH1 0x0 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 ISZERO PUSH2 0x856 JUMPI PUSH1 0x40 MLOAD PUSH1 0x0 SWAP1 CALLER SWAP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP5 SWAP1 DUP5 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x64D JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x64D JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH3 0x10000 SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ DUP1 PUSH2 0x150C JUMPI POP CALLER ADDRESS EQ JUMPDEST PUSH2 0x1093 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6F6E6C79206F776E657200000000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x59D JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000FFFF AND PUSH3 0x10000 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP2 AND DUP3 MUL SWAP3 SWAP1 SWAP3 OR DUP1 DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 DIV DUP3 AND SWAP3 PUSH32 0x0 SWAP1 SWAP3 AND SWAP2 PUSH32 0x47E55C76E7A6F1FD8996A1DA8008C1EA29699CCA35E7BCD057F2DEC313B6E5DE SWAP2 LOG3 POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND EXTCODESIZE PUSH2 0x16B5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720696D706C656D656E746174696F6E206973206E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F74206120636F6E747261637400000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x59D JUMP JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x1724 DUP4 PUSH2 0x1764 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT DUP1 PUSH2 0x1731 JUMPI POP DUP1 JUMPDEST ISZERO PUSH2 0x114D JUMPI PUSH2 0xD00 DUP4 DUP4 PUSH2 0x17B1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x174F DUP6 DUP6 PUSH2 0x17D6 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x175C DUP2 PUSH2 0x181B JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x176D DUP2 PUSH2 0x1611 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x878 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x238E PUSH1 0x27 SWAP2 CODECOPY PUSH2 0x19CE JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 MLOAD PUSH1 0x41 SUB PUSH2 0x180C JUMPI PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x40 DUP5 ADD MLOAD PUSH1 0x60 DUP6 ADD MLOAD PUSH1 0x0 BYTE PUSH2 0x1800 DUP8 DUP3 DUP6 DUP6 PUSH2 0x1A53 JUMP JUMPDEST SWAP5 POP SWAP5 POP POP POP POP PUSH2 0x1814 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 POP PUSH1 0x2 JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x182F JUMPI PUSH2 0x182F PUSH2 0x230D JUMP JUMPDEST SUB PUSH2 0x1837 JUMPI POP JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x184B JUMPI PUSH2 0x184B PUSH2 0x230D JUMP JUMPDEST SUB PUSH2 0x18B2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E61747572650000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x59D JUMP JUMPDEST PUSH1 0x2 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x18C6 JUMPI PUSH2 0x18C6 PUSH2 0x230D JUMP JUMPDEST SUB PUSH2 0x192D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E6174757265206C656E67746800 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x59D JUMP JUMPDEST PUSH1 0x3 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1941 JUMPI PUSH2 0x1941 PUSH2 0x230D JUMP JUMPDEST SUB PUSH2 0x856 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E6174757265202773272076616C PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7565000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x59D JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH1 0x40 MLOAD PUSH2 0x19F8 SWAP2 SWAP1 PUSH2 0x22F1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1A33 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1A38 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1A49 DUP7 DUP4 DUP4 DUP8 PUSH2 0x1B42 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP4 GT ISZERO PUSH2 0x1A8A JUMPI POP PUSH1 0x0 SWAP1 POP PUSH1 0x3 PUSH2 0x1B39 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP1 DUP5 MSTORE DUP10 SWAP1 MSTORE PUSH1 0xFF DUP9 AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1ADE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 ADD MLOAD SWAP2 POP POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0x1B32 JUMPI PUSH1 0x0 PUSH1 0x1 SWAP3 POP SWAP3 POP POP PUSH2 0x1B39 JUMP JUMPDEST SWAP2 POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x1BD8 JUMPI DUP3 MLOAD PUSH1 0x0 SUB PUSH2 0x1BD1 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND EXTCODESIZE PUSH2 0x1BD1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x59D JUMP JUMPDEST POP DUP2 PUSH2 0x1BE2 JUMP JUMPDEST PUSH2 0x1BE2 DUP4 DUP4 PUSH2 0x1BEA JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP2 MLOAD ISZERO PUSH2 0x1BFA JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x59D SWAP2 SWAP1 PUSH2 0x233C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x856 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1C62 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1C7A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x1814 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP10 DUP12 SUB SLT ISZERO PUSH2 0x1CAE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP9 CALLDATALOAD PUSH2 0x1CB9 DUP2 PUSH2 0x1C2E JUMP JUMPDEST SWAP8 POP PUSH1 0x20 DUP10 ADD CALLDATALOAD PUSH2 0x1CC9 DUP2 PUSH2 0x1C2E JUMP JUMPDEST SWAP7 POP PUSH1 0x40 DUP10 ADD CALLDATALOAD PUSH2 0x1CD9 DUP2 PUSH2 0x1C2E JUMP JUMPDEST SWAP6 POP PUSH1 0x60 DUP10 ADD CALLDATALOAD SWAP5 POP PUSH1 0x80 DUP10 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1CFD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1D09 DUP13 DUP4 DUP14 ADD PUSH2 0x1C50 JUMP JUMPDEST SWAP1 SWAP7 POP SWAP5 POP PUSH1 0xA0 DUP12 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1D22 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D2F DUP12 DUP3 DUP13 ADD PUSH2 0x1C50 JUMP JUMPDEST SWAP10 SWAP13 SWAP9 SWAP12 POP SWAP7 SWAP10 POP SWAP5 SWAP8 SWAP4 SWAP7 SWAP3 SWAP6 SWAP5 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D55 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND DUP2 EQ PUSH2 0x878 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1D9D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0x1DA8 DUP2 PUSH2 0x1C2E JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH2 0x1DB8 DUP2 PUSH2 0x1C2E JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1DDB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1DE7 DUP9 DUP3 DUP10 ADD PUSH2 0x1C50 JUMP JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 POP SWAP3 SWAP5 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1E0A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1E22 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x1814 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x40 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1E53 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1E6B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1E77 DUP9 DUP4 DUP10 ADD PUSH2 0x1DF8 JUMP JUMPDEST SWAP1 SWAP7 POP SWAP5 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1E90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E9D DUP8 DUP3 DUP9 ADD PUSH2 0x1DF8 JUMP JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP6 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1EBB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x878 DUP2 PUSH2 0x1C2E JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1EDB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1EF2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 ADD PUSH2 0x160 DUP2 DUP8 SUB SLT ISZERO PUSH2 0x1F05 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1F2D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1F38 DUP2 PUSH2 0x1C2E JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1F88 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1F93 DUP2 PUSH2 0x1C2E JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1FB0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1FC4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x1FD6 JUMPI PUSH2 0x1FD6 PUSH2 0x1F46 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x201C JUMPI PUSH2 0x201C PUSH2 0x1F46 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP9 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x2035 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x206D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0x2078 DUP2 PUSH2 0x1C2E JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x209B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1E9D DUP8 DUP3 DUP9 ADD PUSH2 0x1C50 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xA0 DUP10 DUP12 SUB SLT ISZERO PUSH2 0x20C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP9 CALLDATALOAD PUSH2 0x20CE DUP2 PUSH2 0x1C2E JUMP JUMPDEST SWAP8 POP PUSH1 0x20 DUP10 ADD CALLDATALOAD PUSH2 0x20DE DUP2 PUSH2 0x1C2E JUMP JUMPDEST SWAP7 POP PUSH1 0x40 DUP10 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x20FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2107 DUP13 DUP4 DUP14 ADD PUSH2 0x1DF8 JUMP JUMPDEST SWAP1 SWAP9 POP SWAP7 POP PUSH1 0x60 DUP12 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x2120 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x212C DUP13 DUP4 DUP14 ADD PUSH2 0x1DF8 JUMP JUMPDEST SWAP1 SWAP7 POP SWAP5 POP PUSH1 0x80 DUP12 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1D22 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xA0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x215E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 CALLDATALOAD PUSH2 0x2169 DUP2 PUSH2 0x1C2E JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD PUSH2 0x2179 DUP2 PUSH2 0x1C2E JUMP JUMPDEST SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD SWAP3 POP PUSH1 0x80 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x21A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x21AF DUP10 DUP3 DUP11 ADD PUSH2 0x1C50 JUMP JUMPDEST SWAP8 SWAP11 SWAP7 SWAP10 POP SWAP5 SWAP8 POP SWAP3 SWAP6 SWAP4 SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 CALLDATALOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE1 DUP5 CALLDATASIZE SUB ADD DUP2 SLT PUSH2 0x2225 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 ADD DUP1 CALLDATALOAD SWAP2 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2240 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 ADD SWAP2 POP CALLDATASIZE DUP2 SWAP1 SUB DUP3 SGT ISZERO PUSH2 0x1814 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x22AD JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x22C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x22E8 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x22D0 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x2303 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x22CD JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x235B DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x22CD JUMP JUMPDEST PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP INVALID COINBASE PUSH5 0x6472657373 GASPRICE KECCAK256 PUSH13 0x6F772D6C6576656C2064656C65 PUSH8 0x6174652063616C6C KECCAK256 PUSH7 0x61696C6564A264 PUSH10 0x7066735822122014E1CB 0xCD SWAP11 PUSH7 0x55A444F8EB73CE 0xB5 GAS 0xCE DUP11 0xA8 0xF9 PUSH3 0x8FB9E1 EXTCODEHASH CODECOPY EQ GASPRICE 0xDC CALLVALUE DUP4 0x26 0x2C PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCA PUSH16 0x58BA63116F28FD954EE13CBDAA19EBF DUP14 DUP16 PUSH10 0x4A53BA11CEA74D3F185 CODECOPY PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ","sourceMap":"236:1852:29:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1823:263;;;;;;:::i;:::-;;:::i;:::-;;579:39;;;;;;;;;;-1:-1:-1;579:39:29;;;;;:::i;:::-;;:::i;:::-;;;890:42:34;878:55;;;860:74;;848:2;833:18;579:39:29;;;;;;;;1502:131;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;968:425::-;;;;;;;;;;;;;:::i;375:79::-;;;;;;;;;;-1:-1:-1;375:79:29;;;;;;;;691:43;;;;;;;;;;-1:-1:-1;691:43:29;;;;;:::i;:::-;;;;;;;;;;;;;;;;1823:263;2028:51;;;;;2065:10:34;2053:23;;2028:51:29;;;2035:42:34;1966:14:29;;2028:16;;;;;;2052:9;;2008:18:34;;2028:51:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1904:182;1823:263;;:::o;579:39::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;579:39:29;:::o;1502:131::-;1547:34;1617:9;1610:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1502:131;:::o;968:425::-;1011:10;1024:21;:11;918:14:12;;827:112;1024:21:29;1094:28;1162:19;;1125:58;;1011:34;;-1:-1:-1;1094:28:29;;1162:19;;;;;1125:58;;;:::i;:::-;890:42:34;878:55;;;860:74;;848:2;833:18;1125:58:29;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1229:9:29;:23;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1262:17:29;;;:10;1229:23;1262:17;;;;:36;;;;;;;;;;1032:19:12;;;;;;1229:23:29;-1:-1:-1;1347:39:29;;;2513:25:34;;;2586:42;2574:55;;2569:2;2554:18;;2547:83;1347:39:29;;2486:18:34;1347:39:29;;;;;;;1001:392;;968:425::o;-1:-1:-1:-;;;;;;;;:::o;14:481:34:-;81:6;89;142:2;130:9;121:7;117:23;113:32;110:52;;;158:1;155;148:12;110:52;197:9;184:23;247:42;240:5;236:54;229:5;226:65;216:93;;305:1;302;295:12;216:93;328:5;-1:-1:-1;385:2:34;370:18;;357:32;433:10;420:24;;408:37;;398:65;;459:1;456;449:12;398:65;482:7;472:17;;;14:481;;;;;:::o;500:180::-;559:6;612:2;600:9;591:7;587:23;583:32;580:52;;;628:1;625;618:12;580:52;-1:-1:-1;651:23:34;;500:180;-1:-1:-1;500:180:34:o;945:710::-;1145:2;1197:21;;;1267:13;;1170:18;;;1289:22;;;1116:4;;1145:2;1368:15;;;;1342:2;1327:18;;;1116:4;1411:218;1425:6;1422:1;1419:13;1411:218;;;1490:13;;1505:42;1486:62;1474:75;;1604:15;;;;1569:12;;;;1447:1;1440:9;1411:218;;;-1:-1:-1;1646:3:34;;945:710;-1:-1:-1;;;;;;945:710:34:o"},"methodIdentifiers":{"ENTRY_POINT_ADDRESS()":"a905054d","addStake(address,uint32)":"45171159","createFactory()":"9ab4a98c","factories(uint256)":"672383c4","factoryMap(uint256)":"efa8d338","getFactories()":"7e6cbb6a"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"factoryId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"factoryAddress\",\"type\":\"address\"}],\"name\":\"FactoryCreated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ENTRY_POINT_ADDRESS\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"factoryAddress\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"unstakeDelaySec\",\"type\":\"uint32\"}],\"name\":\"addStake\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"createFactory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"factories\",\"outputs\":[{\"internalType\":\"contract SimpleAccountFactory\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"factoryMap\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFactories\",\"outputs\":[{\"internalType\":\"contract SimpleAccountFactory[]\",\"name\":\"coll\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addStake(address,uint32)\":{\"params\":{\"factoryAddress\":\"factory\\u30b3\\u30f3\\u30c8\\u30e9\\u30af\\u30c8\\u306e\\u30a2\\u30c9\\u30ec\\u30b9\",\"unstakeDelaySec\":\"unstakeDelaySec\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addStake(address,uint32)\":{\"notice\":\"addStake\\u3092\\u5b9f\\u884c\\u3059\\u308b\\u305f\\u3081\\u306e\\u30e1\\u30bd\\u30c3\\u30c9\"},\"createFactory()\":{\"notice\":\"Factory\\u30b3\\u30f3\\u30c8\\u30e9\\u30af\\u30c8\\u3092\\u751f\\u6210\\u3059\\u308b\\u305f\\u3081\\u306e\\u95a2\\u6570\"},\"getFactories()\":{\"notice\":\"\\u751f\\u6210\\u3057\\u305fFactory\\u30b3\\u30f3\\u30c8\\u30e9\\u30af\\u30c8\\u306e\\u60c5\\u5831\\u3092\\u53d6\\u5f97\\u3059\\u308b\\u30b3\\u30f3\\u30c8\\u30e9\\u30af\\u30c8\"}},\"notice\":\"FactoryManager \\u30b3\\u30f3\\u30c8\\u30e9\\u30af\\u30c8\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/samples/FactoryManager.sol\":\"FactoryManager\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0x3cbef5ebc24b415252e2f8c0c9254555d30d9f085603b4b80d9b5ed20ab87e90\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e8fa670c3bdce78e642cc6ae11c4cb38b133499cdce5e1990a9979d424703263\",\"dweb:/ipfs/QmVxeCUk4jL2pXQyhsoNJwyU874wRufS2WvGe8TgPKPqhE\"]},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://383fb7b8181016ac5ccf07bc9cdb7c1b5045ea36e2cc4df52bcbf20396fc7688\",\"dweb:/ipfs/QmYJ7Cg4WmE3rR8KGQxjUCXFfTH6TcwZ2Z1f6tPrq7jHFr\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":{\"keccak256\":\"0xa2b22da3032e50b55f95ec1d13336102d675f341167aa76db571ef7f8bb7975d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://96b6d77a20bebd4eb06b801d3d020c7e82be13bd535cb0d0a6b7181c51dab5d5\",\"dweb:/ipfs/QmPUR9Cv9jNFdQX6PtBfaBW1ZCnKwiu65R2VD5kbdanDyn\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":{\"keccak256\":\"0x3b21ae06bf5957f73fa16754b0669c77b7abd8ba6c072d35c3281d446fdb86c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2db8e18505e86e02526847005d7287a33e397ed7fb9eaba3fd4a4a197add16e2\",\"dweb:/ipfs/QmW9BSuKTzHWHBNSHF4L8XfVuU1uJrP2vLg84YtBd8mL82\"]},\"@openzeppelin/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc130fe33f1b2132158531a87734153293f6d07bc263ff4ac90e85da9c82c0e27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8831721b6f4cc26534d190f9f1631c3f59c9ff38efdd911f85e0882b8e360472\",\"dweb:/ipfs/QmQZnLErZNStirSQ13ZNWQgvEYUtGE5tXYwn4QUPaVUfPN\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354\",\"dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce\"]},\"@openzeppelin/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x3d6069be9b4c01fb81840fb9c2c4dc58dd6a6a4aafaa2c6837de8699574d84c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://720d6bb56ea0c4ef781c0bd65c5bd0541f5a46100163b2587170f97658d2deed\",\"dweb:/ipfs/QmTS2biLVPrv8CeeXCaKmkFxonMiRvc1LxiYBRYDAJHQUS\"]},\"@openzeppelin/contracts/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0xc6619957bcc6641fe8984bfaf9ff11a9e4b97d8149c0495f608f9a2416d7c5cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://543be67f7fa43b1b932637c1c7f12035f0f4b0f7ee2bd3c33841186f79c165c1\",\"dweb:/ipfs/QmSBPM2UVKbmJqWfD9i6hSiqbaE8TV4TSqfuiivziRRLKM\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts/token/ERC777/IERC777Recipient.sol\":{\"keccak256\":\"0x1a5d61db2733202ba361e6d6741cd2e662380e22b80e987eacfc91973f2267dc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04c0cd697050a6516b7779aa2343ad2d0e5217d8915ac2382681dfdf4e445be3\",\"dweb:/ipfs/QmPCBCZgm7pHBwwogE2F9NCN3UfTdLNhqc8UDEvw8kDzyA\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"@openzeppelin/contracts/utils/Create2.sol\":{\"keccak256\":\"0x6e00f269073ffc4350e56b7e8153c9092d5f70bfba423299990514183101ef89\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8dc5ff5c204604be7594ce2fa9100a0638f22b5aada6ebec1e165b0f50a48447\",\"dweb:/ipfs/QmfH7uWphPrq8jqwGvyh4pFnLEgEPmLwyGV2Bvx1Acjggh\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x809bc3edb4bcbef8263fa616c1b60ee0004b50a8a1bfa164d8f57fd31f520c58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b93a1e39a4a19eba1600b92c96f435442db88cac91e315c8291547a2a7bcfe2\",\"dweb:/ipfs/QmTm34KVe6uZBZwq8dZDNWwPcm24qBJdxqL3rPxBJ4LrMv\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"contracts/core/BaseAccount.sol\":{\"keccak256\":\"0xcc33bf670c4334f70c81ab92c03ded5ee4d28abedab06d458b2f234faceafb4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://985ce85b1e80872680db607f62fcf4becf9e2a356e7ea04b0209e4d4bc99fc48\",\"dweb:/ipfs/QmPZddeadd6n963XEeYvcyFSv6c7LcYaQ7G2LfckS7Fa3v\"]},\"contracts/core/Helpers.sol\":{\"keccak256\":\"0x0f5d5a052ba4cecc4699ca4eb0bd21787ab0a5122e3aaa33283e8009dcfba576\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0055598a026e7ab7fd22c900087c08552bfec84350854f337be786191ff571b5\",\"dweb:/ipfs/QmcVFLLLSM2TyaXKbuA718EJygHkvUBgJiAkC6rqCXjMoM\"]},\"contracts/interfaces/IAccount.sol\":{\"keccak256\":\"0x5f95f26f95b7638a679d246e4f88f8bce752c1a2da43d3672db9683584f41949\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f303a98a037054c57eb30a39a90de2339caeca2f244b4bcfd362bd80d68c9c52\",\"dweb:/ipfs/QmTSggTuH1VDj8LvZVG3mY8RupWdCCSwvuQ27Lfmeh5hfC\"]},\"contracts/interfaces/IAggregator.sol\":{\"keccak256\":\"0x882c23df83ff9eb7b6d8da9a0a2aace7ae05ceb5045bab3bcfd8424ad5e3fb94\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26515cb73553340a1347de257e9ec18176c4e1d0743f2b45b192e62fb5da9db2\",\"dweb:/ipfs/QmcVSodmViGq7QR41fzuVkxgzUfoKp14SP42EYeURPudL6\"]},\"contracts/interfaces/IEntryPoint.sol\":{\"keccak256\":\"0x789c29158831da49cb68476ed9fd474b3a96fd07833f9d01c52d96662d7ee5aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1d627a6cd0b63376627e13042f01cdf780150622443a272922f8cd9762cf86b\",\"dweb:/ipfs/Qmci2frpA8wJfmCT7p88LJSh3765WLHCL1EZbpb8C7rkWz\"]},\"contracts/interfaces/INonceManager.sol\":{\"keccak256\":\"0x559e47ae829da7b717f04aad27ea24cad0d3590dcefb71d3b5f19a79f4ad1069\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a193c6d6e35145860e9034f21302be5352239bb92d0cfb0d2a7d0dbb4d4267a2\",\"dweb:/ipfs/QmVuBq5LYBwCXXUdipdomxq82v2ybh73sBCm89AW1vvg6W\"]},\"contracts/interfaces/IStakeManager.sol\":{\"keccak256\":\"0x68fdee5452a594c7f5f2dd80b3637e9cad71fbad4b255d60cd2fa2d98290fb56\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://82407c1d978530b1f4de0abc0c03044e7b618baeb6e090612250863d94307671\",\"dweb:/ipfs/QmYYyZE2j9XVAPxoZXwMx3HGkG8XQ4C8y55dDWLMSrYJZy\"]},\"contracts/interfaces/UserOperation.sol\":{\"keccak256\":\"0x54bfc3bb0ec261c343803cadb5ba08befc65ad40d6e6d6417cb267d1e1437aaf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a115de9d38f45b40cbccdda415d43ac2efb618afcd4d4dab1d434b48b537df3\",\"dweb:/ipfs/QmehKyXL5gWE4FkwrB5QAfDzqFcTWjBUk2nULb3WoBDXcN\"]},\"contracts/samples/FactoryManager.sol\":{\"keccak256\":\"0x60c362e6eb74b67247eff8722ed8f97ea4bec3e79ce68d4da123b92a4b87847e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f3f42e6c080f04d963f7225645e0e787bffb86a95a77f1ef78aa46d562d1b5cb\",\"dweb:/ipfs/QmXF8gAjiq4FDiREo1wXDUxbHpcKCWziu8x4k5A2k5JpXt\"]},\"contracts/samples/SimpleAccount.sol\":{\"keccak256\":\"0x43dd278289640f8ee04f772efed7ff8b6ea26fa968e17765d04b2fefe4da2591\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a0ee6be695a1c57c0481eebbe5a81e992d40985a5483cde9d8bb63ebdd8f7fc\",\"dweb:/ipfs/QmQKrSTedLNpbvstdqpPVqb6ZVecJ4BVaXamasHD65QB12\"]},\"contracts/samples/SimpleAccountFactory.sol\":{\"keccak256\":\"0xd794dea62c0861d32595680d0a13737ce37300988c656572b399639ee717cf88\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f114307fdf6fc85b1bd25f59999ffedd373e13b8420d6febbf2ae43f5dc2d307\",\"dweb:/ipfs/QmZbDkh4zs5CN9NvUgoTpwK8uznCGvo5XL3rFZNXVChS3E\"]},\"contracts/samples/callback/TokenCallbackHandler.sol\":{\"keccak256\":\"0xe36d84f455b497f6eb7f7058a319c5a679900f499c4f5e1d048f3d762a7da5a6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d9232444f7b34f7a42f8acffd375042c00f75439c37099fe0e609ab17462ace1\",\"dweb:/ipfs/QmPcQAaTy6tiHKyTwMcWPuAM4ypVqpZiijir8h1is1ycuQ\"]}},\"version\":1}"}},"contracts/samples/SimpleAccount.sol":{"SimpleAccount":{"abi":[{"inputs":[{"internalType":"contract IEntryPoint","name":"anEntryPoint","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"previousAdmin","type":"address"},{"indexed":false,"internalType":"address","name":"newAdmin","type":"address"}],"name":"AdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"beacon","type":"address"}],"name":"BeaconUpgraded","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"contract IEntryPoint","name":"entryPoint","type":"address"},{"indexed":true,"internalType":"address","name":"owner","type":"address"}],"name":"SimpleAccountInitialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"},{"inputs":[],"name":"addDeposit","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"entryPoint","outputs":[{"internalType":"contract IEntryPoint","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"dest","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"func","type":"bytes"}],"name":"execute","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address[]","name":"dest","type":"address[]"},{"internalType":"bytes[]","name":"func","type":"bytes[]"}],"name":"executeBatch","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getDeposit","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getNonce","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"anOwner","type":"address"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256[]","name":"","type":"uint256[]"},{"internalType":"uint256[]","name":"","type":"uint256[]"},{"internalType":"bytes","name":"","type":"bytes"}],"name":"onERC1155BatchReceived","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"bytes","name":"","type":"bytes"}],"name":"onERC1155Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"bytes","name":"","type":"bytes"}],"name":"onERC721Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"bytes","name":"","type":"bytes"},{"internalType":"bytes","name":"","type":"bytes"}],"name":"tokensReceived","outputs":[],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"}],"name":"upgradeTo","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"upgradeToAndCall","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"uint256","name":"callGasLimit","type":"uint256"},{"internalType":"uint256","name":"verificationGasLimit","type":"uint256"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"uint256","name":"maxFeePerGas","type":"uint256"},{"internalType":"uint256","name":"maxPriorityFeePerGas","type":"uint256"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct UserOperation","name":"userOp","type":"tuple"},{"internalType":"bytes32","name":"userOpHash","type":"bytes32"},{"internalType":"uint256","name":"missingAccountFunds","type":"uint256"}],"name":"validateUserOp","outputs":[{"internalType":"uint256","name":"validationData","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"withdrawAddress","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"withdrawDepositTo","outputs":[],"stateMutability":"nonpayable","type":"function"},{"stateMutability":"payable","type":"receive"}],"evm":{"bytecode":{"functionDebugData":{"@_4145":{"entryPoint":null,"id":4145,"parameterSlots":1,"returnSlots":0},"@_disableInitializers_583":{"entryPoint":86,"id":583,"parameterSlots":0,"returnSlots":0},"abi_decode_tuple_t_contract$_IEntryPoint_$3605_fromMemory":{"entryPoint":279,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:923:34","statements":[{"nodeType":"YulBlock","src":"6:3:34","statements":[]},{"body":{"nodeType":"YulBlock","src":"115:209:34","statements":[{"body":{"nodeType":"YulBlock","src":"161:16:34","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"170:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"173:1:34","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"163:6:34"},"nodeType":"YulFunctionCall","src":"163:12:34"},"nodeType":"YulExpressionStatement","src":"163:12:34"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"136:7:34"},{"name":"headStart","nodeType":"YulIdentifier","src":"145:9:34"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"132:3:34"},"nodeType":"YulFunctionCall","src":"132:23:34"},{"kind":"number","nodeType":"YulLiteral","src":"157:2:34","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"128:3:34"},"nodeType":"YulFunctionCall","src":"128:32:34"},"nodeType":"YulIf","src":"125:52:34"},{"nodeType":"YulVariableDeclaration","src":"186:29:34","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"205:9:34"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"199:5:34"},"nodeType":"YulFunctionCall","src":"199:16:34"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"190:5:34","type":""}]},{"body":{"nodeType":"YulBlock","src":"278:16:34","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"287:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"290:1:34","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"280:6:34"},"nodeType":"YulFunctionCall","src":"280:12:34"},"nodeType":"YulExpressionStatement","src":"280:12:34"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"237:5:34"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"248:5:34"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"263:3:34","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"268:1:34","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"259:3:34"},"nodeType":"YulFunctionCall","src":"259:11:34"},{"kind":"number","nodeType":"YulLiteral","src":"272:1:34","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"255:3:34"},"nodeType":"YulFunctionCall","src":"255:19:34"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"244:3:34"},"nodeType":"YulFunctionCall","src":"244:31:34"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"234:2:34"},"nodeType":"YulFunctionCall","src":"234:42:34"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"227:6:34"},"nodeType":"YulFunctionCall","src":"227:50:34"},"nodeType":"YulIf","src":"224:70:34"},{"nodeType":"YulAssignment","src":"303:15:34","value":{"name":"value","nodeType":"YulIdentifier","src":"313:5:34"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"303:6:34"}]}]},"name":"abi_decode_tuple_t_contract$_IEntryPoint_$3605_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"81:9:34","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"92:7:34","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"104:6:34","type":""}],"src":"14:310:34"},{"body":{"nodeType":"YulBlock","src":"503:229:34","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"520:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"531:2:34","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"513:6:34"},"nodeType":"YulFunctionCall","src":"513:21:34"},"nodeType":"YulExpressionStatement","src":"513:21:34"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"554:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"565:2:34","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"550:3:34"},"nodeType":"YulFunctionCall","src":"550:18:34"},{"kind":"number","nodeType":"YulLiteral","src":"570:2:34","type":"","value":"39"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"543:6:34"},"nodeType":"YulFunctionCall","src":"543:30:34"},"nodeType":"YulExpressionStatement","src":"543:30:34"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"593:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"604:2:34","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"589:3:34"},"nodeType":"YulFunctionCall","src":"589:18:34"},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320696e697469","kind":"string","nodeType":"YulLiteral","src":"609:34:34","type":"","value":"Initializable: contract is initi"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"582:6:34"},"nodeType":"YulFunctionCall","src":"582:62:34"},"nodeType":"YulExpressionStatement","src":"582:62:34"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"664:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"675:2:34","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"660:3:34"},"nodeType":"YulFunctionCall","src":"660:18:34"},{"hexValue":"616c697a696e67","kind":"string","nodeType":"YulLiteral","src":"680:9:34","type":"","value":"alizing"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"653:6:34"},"nodeType":"YulFunctionCall","src":"653:37:34"},"nodeType":"YulExpressionStatement","src":"653:37:34"},{"nodeType":"YulAssignment","src":"699:27:34","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"711:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"722:3:34","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"707:3:34"},"nodeType":"YulFunctionCall","src":"707:19:34"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"699:4:34"}]}]},"name":"abi_encode_tuple_t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"480:9:34","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"494:4:34","type":""}],"src":"329:403:34"},{"body":{"nodeType":"YulBlock","src":"834:87:34","statements":[{"nodeType":"YulAssignment","src":"844:26:34","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"856:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"867:2:34","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"852:3:34"},"nodeType":"YulFunctionCall","src":"852:18:34"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"844:4:34"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"886:9:34"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"901:6:34"},{"kind":"number","nodeType":"YulLiteral","src":"909:4:34","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"897:3:34"},"nodeType":"YulFunctionCall","src":"897:17:34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"879:6:34"},"nodeType":"YulFunctionCall","src":"879:36:34"},"nodeType":"YulExpressionStatement","src":"879:36:34"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"803:9:34","type":""},{"name":"value0","nodeType":"YulTypedName","src":"814:6:34","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"825:4:34","type":""}],"src":"737:184:34"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_contract$_IEntryPoint_$3605_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 39)\n        mstore(add(headStart, 64), \"Initializable: contract is initi\")\n        mstore(add(headStart, 96), \"alizing\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n}","id":34,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60c0604052306080523480156200001557600080fd5b50604051620025a6380380620025a6833981016040819052620000389162000117565b6001600160a01b03811660a0526200004f62000056565b5062000149565b600054610100900460ff1615620000c35760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60005460ff9081161462000115576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b6000602082840312156200012a57600080fd5b81516001600160a01b03811681146200014257600080fd5b9392505050565b60805160a0516123ea620001bc6000396000818161032f015281816108810152818161092801528181610d4c01528181610f9d01528181610fe40152818161133601526115c801526000818161066b0152818161071b015281816109ec01528181610a9c0152610be501526123ea6000f3fe60806040526004361061012c5760003560e01c806352d1902d116100a5578063bc197c8111610074578063c4d66de811610059578063c4d66de8146103d0578063d087d288146103f0578063f23a6e611461040557600080fd5b8063bc197c8114610373578063c399ec88146103bb57600080fd5b806352d1902d146102b35780638da5cb5b146102c8578063b0d691fe14610320578063b61d27f61461035357600080fd5b80633659cfe6116100fc5780634a58db19116100e15780634a58db19146102785780634d44560d146102805780634f1ef286146102a057600080fd5b80633659cfe61461022a5780633a871cdd1461024a57600080fd5b806223de291461013857806301ffc9a71461015f578063150b7a021461019457806318dfb3c71461020a57600080fd5b3661013357005b600080fd5b34801561014457600080fd5b5061015d610153366004611c92565b5050505050505050565b005b34801561016b57600080fd5b5061017f61017a366004611d43565b61044b565b60405190151581526020015b60405180910390f35b3480156101a057600080fd5b506101d96101af366004611d85565b7f150b7a020000000000000000000000000000000000000000000000000000000095945050505050565b6040517fffffffff00000000000000000000000000000000000000000000000000000000909116815260200161018b565b34801561021657600080fd5b5061015d610225366004611e3d565b610530565b34801561023657600080fd5b5061015d610245366004611ea9565b610654565b34801561025657600080fd5b5061026a610265366004611ec6565b610859565b60405190815260200161018b565b61015d61087f565b34801561028c57600080fd5b5061015d61029b366004611f1a565b61091e565b61015d6102ae366004611f75565b6109d5565b3480156102bf57600080fd5b5061026a610bcb565b3480156102d457600080fd5b506000546102fb9062010000900473ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161018b565b34801561032c57600080fd5b507f00000000000000000000000000000000000000000000000000000000000000006102fb565b34801561035f57600080fd5b5061015d61036e366004612057565b610cb7565b34801561037f57600080fd5b506101d961038e3660046120a7565b7fbc197c810000000000000000000000000000000000000000000000000000000098975050505050505050565b3480156103c757600080fd5b5061026a610d06565b3480156103dc57600080fd5b5061015d6103eb366004611ea9565b610dbd565b3480156103fc57600080fd5b5061026a610f50565b34801561041157600080fd5b506101d9610420366004612145565b7ff23a6e61000000000000000000000000000000000000000000000000000000009695505050505050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f150b7a020000000000000000000000000000000000000000000000000000000014806104de57507fffffffff0000000000000000000000000000000000000000000000000000000082167f4e2312e000000000000000000000000000000000000000000000000000000000145b8061052a57507fffffffff0000000000000000000000000000000000000000000000000000000082167f01ffc9a700000000000000000000000000000000000000000000000000000000145b92915050565b610538610fcc565b8281146105a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f77726f6e67206172726179206c656e677468730000000000000000000000000060448201526064015b60405180910390fd5b60005b8381101561064d5761063b8585838181106105c6576105c66121c1565b90506020020160208101906105db9190611ea9565b60008585858181106105ef576105ef6121c1565b905060200281019061060191906121f0565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061109592505050565b8061064581612255565b9150506105a9565b5050505050565b73ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000163003610719576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201527f64656c656761746563616c6c0000000000000000000000000000000000000000606482015260840161059d565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1661078e7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5473ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff1614610831576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201527f6163746976652070726f78790000000000000000000000000000000000000000606482015260840161059d565b61083a81611112565b604080516000808252602082019092526108569183919061111a565b50565b600061086361131e565b61086d84846113bd565b905061087882611476565b9392505050565b7f00000000000000000000000000000000000000000000000000000000000000006040517fb760faf900000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff919091169063b760faf99034906024016000604051808303818588803b15801561090a57600080fd5b505af115801561064d573d6000803e3d6000fd5b6109266114e1565b7f00000000000000000000000000000000000000000000000000000000000000006040517f205c287800000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff848116600483015260248201849052919091169063205c287890604401600060405180830381600087803b1580156109b957600080fd5b505af11580156109cd573d6000803e3d6000fd5b505050505050565b73ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000163003610a9a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201527f64656c656761746563616c6c0000000000000000000000000000000000000000606482015260840161059d565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16610b0f7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5473ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff1614610bb2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201527f6163746976652070726f78790000000000000000000000000000000000000000606482015260840161059d565b610bbb82611112565b610bc78282600161111a565b5050565b60003073ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614610c92576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c0000000000000000606482015260840161059d565b507f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc90565b610cbf610fcc565b610d00848484848080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061109592505050565b50505050565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009073ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016906370a08231906024015b602060405180830381865afa158015610d94573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610db891906122b4565b905090565b600054610100900460ff1615808015610ddd5750600054600160ff909116105b80610df75750303b158015610df7575060005460ff166001145b610e83576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a6564000000000000000000000000000000000000606482015260840161059d565b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011790558015610ee157600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff166101001790555b610eea82611572565b8015610bc757600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15050565b6040517f35567e1a0000000000000000000000000000000000000000000000000000000081523060048201526000602482018190529073ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016906335567e1a90604401610d77565b3373ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016148061102d575060005462010000900473ffffffffffffffffffffffffffffffffffffffff1633145b611093576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f6163636f756e743a206e6f74204f776e6572206f7220456e747279506f696e74604482015260640161059d565b565b6000808473ffffffffffffffffffffffffffffffffffffffff1684846040516110be91906122f1565b60006040518083038185875af1925050503d80600081146110fb576040519150601f19603f3d011682016040523d82523d6000602084013e611100565b606091505b50915091508161064d57805160208201fd5b6108566114e1565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff16156111525761114d83611611565b505050565b8273ffffffffffffffffffffffffffffffffffffffff166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa9250505080156111d7575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682019092526111d4918101906122b4565b60015b611263576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201527f6f6e206973206e6f742055555053000000000000000000000000000000000000606482015260840161059d565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc8114611312576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f7860448201527f6961626c65555549440000000000000000000000000000000000000000000000606482015260840161059d565b5061114d83838361171b565b3373ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614611093576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f6163636f756e743a206e6f742066726f6d20456e747279506f696e7400000000604482015260640161059d565b7f19457468657265756d205369676e6564204d6573736167653a0a3332000000006000908152601c829052603c812061143a6113fd6101408601866121f0565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525085939250506117409050565b60005462010000900473ffffffffffffffffffffffffffffffffffffffff90811691161461146c57600191505061052a565b5060009392505050565b80156108565760405160009033907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90849084818181858888f193505050503d806000811461064d576040519150601f19603f3d011682016040523d82523d6000602084013e61064d565b60005462010000900473ffffffffffffffffffffffffffffffffffffffff1633148061150c57503330145b611093576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f6f6e6c79206f776e657200000000000000000000000000000000000000000000604482015260640161059d565b600080547fffffffffffffffffffff0000000000000000000000000000000000000000ffff166201000073ffffffffffffffffffffffffffffffffffffffff8481168202929092178084556040519190048216927f0000000000000000000000000000000000000000000000000000000000000000909216917f47e55c76e7a6f1fd8996a1da8008c1ea29699cca35e7bcd057f2dec313b6e5de91a350565b73ffffffffffffffffffffffffffffffffffffffff81163b6116b5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201527f6f74206120636f6e747261637400000000000000000000000000000000000000606482015260840161059d565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b61172483611764565b6000825111806117315750805b1561114d57610d0083836117b1565b600080600061174f85856117d6565b9150915061175c8161181b565b509392505050565b61176d81611611565b60405173ffffffffffffffffffffffffffffffffffffffff8216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b6060610878838360405180606001604052806027815260200161238e602791396119ce565b600080825160410361180c5760208301516040840151606085015160001a61180087828585611a53565b94509450505050611814565b506000905060025b9250929050565b600081600481111561182f5761182f61230d565b036118375750565b600181600481111561184b5761184b61230d565b036118b2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f45434453413a20696e76616c6964207369676e61747572650000000000000000604482015260640161059d565b60028160048111156118c6576118c661230d565b0361192d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e67746800604482015260640161059d565b60038160048111156119415761194161230d565b03610856576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c60448201527f7565000000000000000000000000000000000000000000000000000000000000606482015260840161059d565b60606000808573ffffffffffffffffffffffffffffffffffffffff16856040516119f891906122f1565b600060405180830381855af49150503d8060008114611a33576040519150601f19603f3d011682016040523d82523d6000602084013e611a38565b606091505b5091509150611a4986838387611b42565b9695505050505050565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115611a8a5750600090506003611b39565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015611ade573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015191505073ffffffffffffffffffffffffffffffffffffffff8116611b3257600060019250925050611b39565b9150600090505b94509492505050565b60608315611bd8578251600003611bd15773ffffffffffffffffffffffffffffffffffffffff85163b611bd1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161059d565b5081611be2565b611be28383611bea565b949350505050565b815115611bfa5781518083602001fd5b806040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161059d919061233c565b73ffffffffffffffffffffffffffffffffffffffff8116811461085657600080fd5b60008083601f840112611c6257600080fd5b50813567ffffffffffffffff811115611c7a57600080fd5b60208301915083602082850101111561181457600080fd5b60008060008060008060008060c0898b031215611cae57600080fd5b8835611cb981611c2e565b97506020890135611cc981611c2e565b96506040890135611cd981611c2e565b955060608901359450608089013567ffffffffffffffff80821115611cfd57600080fd5b611d098c838d01611c50565b909650945060a08b0135915080821115611d2257600080fd5b50611d2f8b828c01611c50565b999c989b5096995094979396929594505050565b600060208284031215611d5557600080fd5b81357fffffffff000000000000000000000000000000000000000000000000000000008116811461087857600080fd5b600080600080600060808688031215611d9d57600080fd5b8535611da881611c2e565b94506020860135611db881611c2e565b935060408601359250606086013567ffffffffffffffff811115611ddb57600080fd5b611de788828901611c50565b969995985093965092949392505050565b60008083601f840112611e0a57600080fd5b50813567ffffffffffffffff811115611e2257600080fd5b6020830191508360208260051b850101111561181457600080fd5b60008060008060408587031215611e5357600080fd5b843567ffffffffffffffff80821115611e6b57600080fd5b611e7788838901611df8565b90965094506020870135915080821115611e9057600080fd5b50611e9d87828801611df8565b95989497509550505050565b600060208284031215611ebb57600080fd5b813561087881611c2e565b600080600060608486031215611edb57600080fd5b833567ffffffffffffffff811115611ef257600080fd5b84016101608187031215611f0557600080fd5b95602085013595506040909401359392505050565b60008060408385031215611f2d57600080fd5b8235611f3881611c2e565b946020939093013593505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60008060408385031215611f8857600080fd5b8235611f9381611c2e565b9150602083013567ffffffffffffffff80821115611fb057600080fd5b818501915085601f830112611fc457600080fd5b813581811115611fd657611fd6611f46565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f0116810190838211818310171561201c5761201c611f46565b8160405282815288602084870101111561203557600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b6000806000806060858703121561206d57600080fd5b843561207881611c2e565b935060208501359250604085013567ffffffffffffffff81111561209b57600080fd5b611e9d87828801611c50565b60008060008060008060008060a0898b0312156120c357600080fd5b88356120ce81611c2e565b975060208901356120de81611c2e565b9650604089013567ffffffffffffffff808211156120fb57600080fd5b6121078c838d01611df8565b909850965060608b013591508082111561212057600080fd5b61212c8c838d01611df8565b909650945060808b0135915080821115611d2257600080fd5b60008060008060008060a0878903121561215e57600080fd5b863561216981611c2e565b9550602087013561217981611c2e565b94506040870135935060608701359250608087013567ffffffffffffffff8111156121a357600080fd5b6121af89828a01611c50565b979a9699509497509295939492505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261222557600080fd5b83018035915067ffffffffffffffff82111561224057600080fd5b60200191503681900382131561181457600080fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036122ad577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b5060010190565b6000602082840312156122c657600080fd5b5051919050565b60005b838110156122e85781810151838201526020016122d0565b50506000910152565b600082516123038184602087016122cd565b9190910192915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b602081526000825180602084015261235b8160408501602087016122cd565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016919091016040019291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a264697066735822122014e1cbcd9a6655a444f8eb73ceb55ace8aa8f9628fb9e13f39143adc3483262c64736f6c63430008120033","opcodes":"PUSH1 0xC0 PUSH1 0x40 MSTORE ADDRESS PUSH1 0x80 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x25A6 CODESIZE SUB DUP1 PUSH3 0x25A6 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x38 SWAP2 PUSH3 0x117 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0xA0 MSTORE PUSH3 0x4F PUSH3 0x56 JUMP JUMPDEST POP PUSH3 0x149 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH3 0xC3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320696E697469 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x616C697A696E67 PUSH1 0xC8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0xFF SWAP1 DUP2 AND EQ PUSH3 0x115 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0xFF SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x12A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x142 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH2 0x23EA PUSH3 0x1BC PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x32F ADD MSTORE DUP2 DUP2 PUSH2 0x881 ADD MSTORE DUP2 DUP2 PUSH2 0x928 ADD MSTORE DUP2 DUP2 PUSH2 0xD4C ADD MSTORE DUP2 DUP2 PUSH2 0xF9D ADD MSTORE DUP2 DUP2 PUSH2 0xFE4 ADD MSTORE DUP2 DUP2 PUSH2 0x1336 ADD MSTORE PUSH2 0x15C8 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x66B ADD MSTORE DUP2 DUP2 PUSH2 0x71B ADD MSTORE DUP2 DUP2 PUSH2 0x9EC ADD MSTORE DUP2 DUP2 PUSH2 0xA9C ADD MSTORE PUSH2 0xBE5 ADD MSTORE PUSH2 0x23EA PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x52D1902D GT PUSH2 0xA5 JUMPI DUP1 PUSH4 0xBC197C81 GT PUSH2 0x74 JUMPI DUP1 PUSH4 0xC4D66DE8 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xC4D66DE8 EQ PUSH2 0x3D0 JUMPI DUP1 PUSH4 0xD087D288 EQ PUSH2 0x3F0 JUMPI DUP1 PUSH4 0xF23A6E61 EQ PUSH2 0x405 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xBC197C81 EQ PUSH2 0x373 JUMPI DUP1 PUSH4 0xC399EC88 EQ PUSH2 0x3BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x52D1902D EQ PUSH2 0x2B3 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2C8 JUMPI DUP1 PUSH4 0xB0D691FE EQ PUSH2 0x320 JUMPI DUP1 PUSH4 0xB61D27F6 EQ PUSH2 0x353 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3659CFE6 GT PUSH2 0xFC JUMPI DUP1 PUSH4 0x4A58DB19 GT PUSH2 0xE1 JUMPI DUP1 PUSH4 0x4A58DB19 EQ PUSH2 0x278 JUMPI DUP1 PUSH4 0x4D44560D EQ PUSH2 0x280 JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x2A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3659CFE6 EQ PUSH2 0x22A JUMPI DUP1 PUSH4 0x3A871CDD EQ PUSH2 0x24A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0x23DE29 EQ PUSH2 0x138 JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0x150B7A02 EQ PUSH2 0x194 JUMPI DUP1 PUSH4 0x18DFB3C7 EQ PUSH2 0x20A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x133 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x144 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15D PUSH2 0x153 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C92 JUMP JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x16B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17F PUSH2 0x17A CALLDATASIZE PUSH1 0x4 PUSH2 0x1D43 JUMP JUMPDEST PUSH2 0x44B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D9 PUSH2 0x1AF CALLDATASIZE PUSH1 0x4 PUSH2 0x1D85 JUMP JUMPDEST PUSH32 0x150B7A0200000000000000000000000000000000000000000000000000000000 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x18B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x216 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15D PUSH2 0x225 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E3D JUMP JUMPDEST PUSH2 0x530 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x236 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15D PUSH2 0x245 CALLDATASIZE PUSH1 0x4 PUSH2 0x1EA9 JUMP JUMPDEST PUSH2 0x654 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x256 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26A PUSH2 0x265 CALLDATASIZE PUSH1 0x4 PUSH2 0x1EC6 JUMP JUMPDEST PUSH2 0x859 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x18B JUMP JUMPDEST PUSH2 0x15D PUSH2 0x87F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15D PUSH2 0x29B CALLDATASIZE PUSH1 0x4 PUSH2 0x1F1A JUMP JUMPDEST PUSH2 0x91E JUMP JUMPDEST PUSH2 0x15D PUSH2 0x2AE CALLDATASIZE PUSH1 0x4 PUSH2 0x1F75 JUMP JUMPDEST PUSH2 0x9D5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26A PUSH2 0xBCB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH2 0x2FB SWAP1 PUSH3 0x10000 SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x18B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH32 0x0 PUSH2 0x2FB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x35F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15D PUSH2 0x36E CALLDATASIZE PUSH1 0x4 PUSH2 0x2057 JUMP JUMPDEST PUSH2 0xCB7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D9 PUSH2 0x38E CALLDATASIZE PUSH1 0x4 PUSH2 0x20A7 JUMP JUMPDEST PUSH32 0xBC197C8100000000000000000000000000000000000000000000000000000000 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26A PUSH2 0xD06 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15D PUSH2 0x3EB CALLDATASIZE PUSH1 0x4 PUSH2 0x1EA9 JUMP JUMPDEST PUSH2 0xDBD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26A PUSH2 0xF50 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x411 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D9 PUSH2 0x420 CALLDATASIZE PUSH1 0x4 PUSH2 0x2145 JUMP JUMPDEST PUSH32 0xF23A6E6100000000000000000000000000000000000000000000000000000000 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH32 0x150B7A0200000000000000000000000000000000000000000000000000000000 EQ DUP1 PUSH2 0x4DE JUMPI POP PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH32 0x4E2312E000000000000000000000000000000000000000000000000000000000 EQ JUMPDEST DUP1 PUSH2 0x52A JUMPI POP PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x538 PUSH2 0xFCC JUMP JUMPDEST DUP3 DUP2 EQ PUSH2 0x5A6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x77726F6E67206172726179206C656E6774687300000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x64D JUMPI PUSH2 0x63B DUP6 DUP6 DUP4 DUP2 DUP2 LT PUSH2 0x5C6 JUMPI PUSH2 0x5C6 PUSH2 0x21C1 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x5DB SWAP2 SWAP1 PUSH2 0x1EA9 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP6 DUP6 DUP2 DUP2 LT PUSH2 0x5EF JUMPI PUSH2 0x5EF PUSH2 0x21C1 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL DUP2 ADD SWAP1 PUSH2 0x601 SWAP2 SWAP1 PUSH2 0x21F0 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x1095 SWAP3 POP POP POP JUMP JUMPDEST DUP1 PUSH2 0x645 DUP2 PUSH2 0x2255 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x5A9 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND ADDRESS SUB PUSH2 0x719 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x64656C656761746563616C6C0000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x59D JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x78E PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x831 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6163746976652070726F78790000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x59D JUMP JUMPDEST PUSH2 0x83A DUP2 PUSH2 0x1112 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x856 SWAP2 DUP4 SWAP2 SWAP1 PUSH2 0x111A JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x863 PUSH2 0x131E JUMP JUMPDEST PUSH2 0x86D DUP5 DUP5 PUSH2 0x13BD JUMP JUMPDEST SWAP1 POP PUSH2 0x878 DUP3 PUSH2 0x1476 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x0 PUSH1 0x40 MLOAD PUSH32 0xB760FAF900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 SWAP1 SWAP2 AND SWAP1 PUSH4 0xB760FAF9 SWAP1 CALLVALUE SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x90A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x64D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH2 0x926 PUSH2 0x14E1 JUMP JUMPDEST PUSH32 0x0 PUSH1 0x40 MLOAD PUSH32 0x205C287800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE SWAP2 SWAP1 SWAP2 AND SWAP1 PUSH4 0x205C2878 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9CD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND ADDRESS SUB PUSH2 0xA9A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x64656C656761746563616C6C0000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x59D JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB0F PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBB2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6163746976652070726F78790000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x59D JUMP JUMPDEST PUSH2 0xBBB DUP3 PUSH2 0x1112 JUMP JUMPDEST PUSH2 0xBC7 DUP3 DUP3 PUSH1 0x1 PUSH2 0x111A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND EQ PUSH2 0xC92 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x555550535570677261646561626C653A206D757374206E6F742062652063616C PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6C6564207468726F7567682064656C656761746563616C6C0000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x59D JUMP JUMPDEST POP PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SWAP1 JUMP JUMPDEST PUSH2 0xCBF PUSH2 0xFCC JUMP JUMPDEST PUSH2 0xD00 DUP5 DUP5 DUP5 DUP5 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x1095 SWAP3 POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD94 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDB8 SWAP2 SWAP1 PUSH2 0x22B4 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 DUP1 ISZERO PUSH2 0xDDD JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xFF SWAP1 SWAP2 AND LT JUMPDEST DUP1 PUSH2 0xDF7 JUMPI POP ADDRESS EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDF7 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND PUSH1 0x1 EQ JUMPDEST PUSH2 0xE83 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x647920696E697469616C697A6564000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x59D JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND PUSH1 0x1 OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0xEE1 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FF AND PUSH2 0x100 OR SWAP1 SSTORE JUMPDEST PUSH2 0xEEA DUP3 PUSH2 0x1572 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xBC7 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FF AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x35567E1A00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x24 DUP3 ADD DUP2 SWAP1 MSTORE SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND SWAP1 PUSH4 0x35567E1A SWAP1 PUSH1 0x44 ADD PUSH2 0xD77 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND EQ DUP1 PUSH2 0x102D JUMPI POP PUSH1 0x0 SLOAD PUSH3 0x10000 SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ JUMPDEST PUSH2 0x1093 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6163636F756E743A206E6F74204F776E6572206F7220456E747279506F696E74 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x59D JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x10BE SWAP2 SWAP1 PUSH2 0x22F1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x10FB JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1100 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x64D JUMPI DUP1 MLOAD PUSH1 0x20 DUP3 ADD REVERT JUMPDEST PUSH2 0x856 PUSH2 0x14E1 JUMP JUMPDEST PUSH32 0x4910FDFA16FED3260ED0E7147F7CC6DA11A60208B5B9406D12A635614FFD9143 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1152 JUMPI PUSH2 0x114D DUP4 PUSH2 0x1611 JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x11D7 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x11D4 SWAP2 DUP2 ADD SWAP1 PUSH2 0x22B4 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1263 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A206E657720696D706C656D656E74617469 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F6E206973206E6F742055555053000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x59D JUMP JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP2 EQ PUSH2 0x1312 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A20756E737570706F727465642070726F78 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6961626C65555549440000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x59D JUMP JUMPDEST POP PUSH2 0x114D DUP4 DUP4 DUP4 PUSH2 0x171B JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND EQ PUSH2 0x1093 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6163636F756E743A206E6F742066726F6D20456E747279506F696E7400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x59D JUMP JUMPDEST PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1C DUP3 SWAP1 MSTORE PUSH1 0x3C DUP2 KECCAK256 PUSH2 0x143A PUSH2 0x13FD PUSH2 0x140 DUP7 ADD DUP7 PUSH2 0x21F0 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP DUP6 SWAP4 SWAP3 POP POP PUSH2 0x1740 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH3 0x10000 SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x146C JUMPI PUSH1 0x1 SWAP2 POP POP PUSH2 0x52A JUMP JUMPDEST POP PUSH1 0x0 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 ISZERO PUSH2 0x856 JUMPI PUSH1 0x40 MLOAD PUSH1 0x0 SWAP1 CALLER SWAP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP5 SWAP1 DUP5 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x64D JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x64D JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH3 0x10000 SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ DUP1 PUSH2 0x150C JUMPI POP CALLER ADDRESS EQ JUMPDEST PUSH2 0x1093 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6F6E6C79206F776E657200000000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x59D JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000FFFF AND PUSH3 0x10000 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP2 AND DUP3 MUL SWAP3 SWAP1 SWAP3 OR DUP1 DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 DIV DUP3 AND SWAP3 PUSH32 0x0 SWAP1 SWAP3 AND SWAP2 PUSH32 0x47E55C76E7A6F1FD8996A1DA8008C1EA29699CCA35E7BCD057F2DEC313B6E5DE SWAP2 LOG3 POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND EXTCODESIZE PUSH2 0x16B5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720696D706C656D656E746174696F6E206973206E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F74206120636F6E747261637400000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x59D JUMP JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x1724 DUP4 PUSH2 0x1764 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT DUP1 PUSH2 0x1731 JUMPI POP DUP1 JUMPDEST ISZERO PUSH2 0x114D JUMPI PUSH2 0xD00 DUP4 DUP4 PUSH2 0x17B1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x174F DUP6 DUP6 PUSH2 0x17D6 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x175C DUP2 PUSH2 0x181B JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x176D DUP2 PUSH2 0x1611 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x878 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x238E PUSH1 0x27 SWAP2 CODECOPY PUSH2 0x19CE JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 MLOAD PUSH1 0x41 SUB PUSH2 0x180C JUMPI PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x40 DUP5 ADD MLOAD PUSH1 0x60 DUP6 ADD MLOAD PUSH1 0x0 BYTE PUSH2 0x1800 DUP8 DUP3 DUP6 DUP6 PUSH2 0x1A53 JUMP JUMPDEST SWAP5 POP SWAP5 POP POP POP POP PUSH2 0x1814 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 POP PUSH1 0x2 JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x182F JUMPI PUSH2 0x182F PUSH2 0x230D JUMP JUMPDEST SUB PUSH2 0x1837 JUMPI POP JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x184B JUMPI PUSH2 0x184B PUSH2 0x230D JUMP JUMPDEST SUB PUSH2 0x18B2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E61747572650000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x59D JUMP JUMPDEST PUSH1 0x2 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x18C6 JUMPI PUSH2 0x18C6 PUSH2 0x230D JUMP JUMPDEST SUB PUSH2 0x192D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E6174757265206C656E67746800 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x59D JUMP JUMPDEST PUSH1 0x3 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1941 JUMPI PUSH2 0x1941 PUSH2 0x230D JUMP JUMPDEST SUB PUSH2 0x856 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E6174757265202773272076616C PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7565000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x59D JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH1 0x40 MLOAD PUSH2 0x19F8 SWAP2 SWAP1 PUSH2 0x22F1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1A33 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1A38 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1A49 DUP7 DUP4 DUP4 DUP8 PUSH2 0x1B42 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP4 GT ISZERO PUSH2 0x1A8A JUMPI POP PUSH1 0x0 SWAP1 POP PUSH1 0x3 PUSH2 0x1B39 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP1 DUP5 MSTORE DUP10 SWAP1 MSTORE PUSH1 0xFF DUP9 AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1ADE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 ADD MLOAD SWAP2 POP POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0x1B32 JUMPI PUSH1 0x0 PUSH1 0x1 SWAP3 POP SWAP3 POP POP PUSH2 0x1B39 JUMP JUMPDEST SWAP2 POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x1BD8 JUMPI DUP3 MLOAD PUSH1 0x0 SUB PUSH2 0x1BD1 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND EXTCODESIZE PUSH2 0x1BD1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x59D JUMP JUMPDEST POP DUP2 PUSH2 0x1BE2 JUMP JUMPDEST PUSH2 0x1BE2 DUP4 DUP4 PUSH2 0x1BEA JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP2 MLOAD ISZERO PUSH2 0x1BFA JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x59D SWAP2 SWAP1 PUSH2 0x233C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x856 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1C62 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1C7A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x1814 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP10 DUP12 SUB SLT ISZERO PUSH2 0x1CAE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP9 CALLDATALOAD PUSH2 0x1CB9 DUP2 PUSH2 0x1C2E JUMP JUMPDEST SWAP8 POP PUSH1 0x20 DUP10 ADD CALLDATALOAD PUSH2 0x1CC9 DUP2 PUSH2 0x1C2E JUMP JUMPDEST SWAP7 POP PUSH1 0x40 DUP10 ADD CALLDATALOAD PUSH2 0x1CD9 DUP2 PUSH2 0x1C2E JUMP JUMPDEST SWAP6 POP PUSH1 0x60 DUP10 ADD CALLDATALOAD SWAP5 POP PUSH1 0x80 DUP10 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1CFD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1D09 DUP13 DUP4 DUP14 ADD PUSH2 0x1C50 JUMP JUMPDEST SWAP1 SWAP7 POP SWAP5 POP PUSH1 0xA0 DUP12 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1D22 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D2F DUP12 DUP3 DUP13 ADD PUSH2 0x1C50 JUMP JUMPDEST SWAP10 SWAP13 SWAP9 SWAP12 POP SWAP7 SWAP10 POP SWAP5 SWAP8 SWAP4 SWAP7 SWAP3 SWAP6 SWAP5 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D55 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND DUP2 EQ PUSH2 0x878 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1D9D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0x1DA8 DUP2 PUSH2 0x1C2E JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH2 0x1DB8 DUP2 PUSH2 0x1C2E JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1DDB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1DE7 DUP9 DUP3 DUP10 ADD PUSH2 0x1C50 JUMP JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 POP SWAP3 SWAP5 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1E0A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1E22 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x1814 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x40 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1E53 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1E6B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1E77 DUP9 DUP4 DUP10 ADD PUSH2 0x1DF8 JUMP JUMPDEST SWAP1 SWAP7 POP SWAP5 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1E90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E9D DUP8 DUP3 DUP9 ADD PUSH2 0x1DF8 JUMP JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP6 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1EBB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x878 DUP2 PUSH2 0x1C2E JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1EDB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1EF2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 ADD PUSH2 0x160 DUP2 DUP8 SUB SLT ISZERO PUSH2 0x1F05 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1F2D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1F38 DUP2 PUSH2 0x1C2E JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1F88 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1F93 DUP2 PUSH2 0x1C2E JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1FB0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1FC4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x1FD6 JUMPI PUSH2 0x1FD6 PUSH2 0x1F46 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x201C JUMPI PUSH2 0x201C PUSH2 0x1F46 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP9 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x2035 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x206D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0x2078 DUP2 PUSH2 0x1C2E JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x209B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1E9D DUP8 DUP3 DUP9 ADD PUSH2 0x1C50 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xA0 DUP10 DUP12 SUB SLT ISZERO PUSH2 0x20C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP9 CALLDATALOAD PUSH2 0x20CE DUP2 PUSH2 0x1C2E JUMP JUMPDEST SWAP8 POP PUSH1 0x20 DUP10 ADD CALLDATALOAD PUSH2 0x20DE DUP2 PUSH2 0x1C2E JUMP JUMPDEST SWAP7 POP PUSH1 0x40 DUP10 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x20FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2107 DUP13 DUP4 DUP14 ADD PUSH2 0x1DF8 JUMP JUMPDEST SWAP1 SWAP9 POP SWAP7 POP PUSH1 0x60 DUP12 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x2120 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x212C DUP13 DUP4 DUP14 ADD PUSH2 0x1DF8 JUMP JUMPDEST SWAP1 SWAP7 POP SWAP5 POP PUSH1 0x80 DUP12 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1D22 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xA0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x215E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 CALLDATALOAD PUSH2 0x2169 DUP2 PUSH2 0x1C2E JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD PUSH2 0x2179 DUP2 PUSH2 0x1C2E JUMP JUMPDEST SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD SWAP3 POP PUSH1 0x80 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x21A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x21AF DUP10 DUP3 DUP11 ADD PUSH2 0x1C50 JUMP JUMPDEST SWAP8 SWAP11 SWAP7 SWAP10 POP SWAP5 SWAP8 POP SWAP3 SWAP6 SWAP4 SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 CALLDATALOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE1 DUP5 CALLDATASIZE SUB ADD DUP2 SLT PUSH2 0x2225 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 ADD DUP1 CALLDATALOAD SWAP2 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2240 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 ADD SWAP2 POP CALLDATASIZE DUP2 SWAP1 SUB DUP3 SGT ISZERO PUSH2 0x1814 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x22AD JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x22C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x22E8 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x22D0 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x2303 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x22CD JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x235B DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x22CD JUMP JUMPDEST PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP INVALID COINBASE PUSH5 0x6472657373 GASPRICE KECCAK256 PUSH13 0x6F772D6C6576656C2064656C65 PUSH8 0x6174652063616C6C KECCAK256 PUSH7 0x61696C6564A264 PUSH10 0x7066735822122014E1CB 0xCD SWAP11 PUSH7 0x55A444F8EB73CE 0xB5 GAS 0xCE DUP11 0xA8 0xF9 PUSH3 0x8FB9E1 EXTCODEHASH CODECOPY EQ GASPRICE 0xDC CALLVALUE DUP4 0x26 0x2C PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ","sourceMap":"633:3871:30:-:0;;;1088:4:7;1045:48;;1226:113:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1274:26:30;;;;1310:22;:20;:22::i;:::-;1226:113;633:3871;;5917:280:6;5985:13;;;;;;;5984:14;5976:66;;;;-1:-1:-1;;;5976:66:6;;531:2:34;5976:66:6;;;513:21:34;570:2;550:18;;;543:30;609:34;589:18;;;582:62;-1:-1:-1;;;660:18:34;;;653:37;707:19;;5976:66:6;;;;;;;;6056:12;;6072:15;6056:12;;;:31;6052:139;;6103:12;:30;;-1:-1:-1;;6103:30:6;6118:15;6103:30;;;;;;6152:28;;879:36:34;;;6152:28:6;;867:2:34;852:18;6152:28:6;;;;;;;6052:139;5917:280::o;14:310:34:-;104:6;157:2;145:9;136:7;132:23;128:32;125:52;;;173:1;170;163:12;125:52;199:16;;-1:-1:-1;;;;;244:31:34;;234:42;;224:70;;290:1;287;280:12;224:70;313:5;14:310;-1:-1:-1;;;14:310:34:o;737:184::-;633:3871:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_4131":{"entryPoint":null,"id":4131,"parameterSlots":0,"returnSlots":0},"@_authorizeUpgrade_4401":{"entryPoint":4370,"id":4401,"parameterSlots":1,"returnSlots":0},"@_call_4337":{"entryPoint":4245,"id":4337,"parameterSlots":3,"returnSlots":0},"@_getImplementation_97":{"entryPoint":null,"id":97,"parameterSlots":0,"returnSlots":1},"@_initialize_4259":{"entryPoint":5490,"id":4259,"parameterSlots":1,"returnSlots":0},"@_onlyOwner_4165":{"entryPoint":5345,"id":4165,"parameterSlots":0,"returnSlots":0},"@_payPrefund_3111":{"entryPoint":5238,"id":3111,"parameterSlots":1,"returnSlots":0},"@_requireFromEntryPointOrOwner_4280":{"entryPoint":4044,"id":4280,"parameterSlots":0,"returnSlots":0},"@_requireFromEntryPoint_3060":{"entryPoint":4894,"id":3060,"parameterSlots":0,"returnSlots":0},"@_revert_1126":{"entryPoint":7146,"id":1126,"parameterSlots":2,"returnSlots":0},"@_setImplementation_121":{"entryPoint":5649,"id":121,"parameterSlots":1,"returnSlots":0},"@_throwError_1675":{"entryPoint":6171,"id":1675,"parameterSlots":1,"returnSlots":0},"@_upgradeToAndCallUUPS_219":{"entryPoint":4378,"id":219,"parameterSlots":3,"returnSlots":0},"@_upgradeToAndCall_166":{"entryPoint":5915,"id":166,"parameterSlots":3,"returnSlots":0},"@_upgradeTo_136":{"entryPoint":5988,"id":136,"parameterSlots":1,"returnSlots":0},"@_validateNonce_3078":{"entryPoint":null,"id":3078,"parameterSlots":1,"returnSlots":0},"@_validateSignature_4311":{"entryPoint":5053,"id":4311,"parameterSlots":2,"returnSlots":1},"@addDeposit_4370":{"entryPoint":2175,"id":4370,"parameterSlots":0,"returnSlots":0},"@entryPoint_4127":{"entryPoint":null,"id":4127,"parameterSlots":0,"returnSlots":1},"@executeBatch_4231":{"entryPoint":1328,"id":4231,"parameterSlots":4,"returnSlots":0},"@execute_4185":{"entryPoint":3255,"id":4185,"parameterSlots":4,"returnSlots":0},"@functionDelegateCall_1014":{"entryPoint":6065,"id":1014,"parameterSlots":2,"returnSlots":1},"@functionDelegateCall_1043":{"entryPoint":6606,"id":1043,"parameterSlots":3,"returnSlots":1},"@getAddressSlot_1314":{"entryPoint":null,"id":1314,"parameterSlots":1,"returnSlots":1},"@getBooleanSlot_1325":{"entryPoint":null,"id":1325,"parameterSlots":1,"returnSlots":1},"@getDeposit_4353":{"entryPoint":3334,"id":4353,"parameterSlots":0,"returnSlots":1},"@getNonce_3002":{"entryPoint":3920,"id":3002,"parameterSlots":0,"returnSlots":1},"@initialize_4244":{"entryPoint":3517,"id":4244,"parameterSlots":1,"returnSlots":0},"@isContract_815":{"entryPoint":null,"id":815,"parameterSlots":1,"returnSlots":1},"@onERC1155BatchReceived_4681":{"entryPoint":null,"id":4681,"parameterSlots":8,"returnSlots":1},"@onERC1155Received_4658":{"entryPoint":null,"id":4658,"parameterSlots":6,"returnSlots":1},"@onERC721Received_4637":{"entryPoint":null,"id":4637,"parameterSlots":5,"returnSlots":1},"@owner_4099":{"entryPoint":null,"id":4099,"parameterSlots":0,"returnSlots":0},"@proxiableUUID_668":{"entryPoint":3019,"id":668,"parameterSlots":0,"returnSlots":1},"@recover_1748":{"entryPoint":5952,"id":1748,"parameterSlots":2,"returnSlots":1},"@supportsInterface_4711":{"entryPoint":1099,"id":4711,"parameterSlots":1,"returnSlots":1},"@toEthSignedMessageHash_1932":{"entryPoint":null,"id":1932,"parameterSlots":1,"returnSlots":1},"@tokensReceived_4618":{"entryPoint":null,"id":4618,"parameterSlots":8,"returnSlots":0},"@tryRecover_1721":{"entryPoint":6102,"id":1721,"parameterSlots":2,"returnSlots":2},"@tryRecover_1889":{"entryPoint":6739,"id":1889,"parameterSlots":4,"returnSlots":2},"@upgradeToAndCall_711":{"entryPoint":2517,"id":711,"parameterSlots":2,"returnSlots":0},"@upgradeTo_690":{"entryPoint":1620,"id":690,"parameterSlots":1,"returnSlots":0},"@validateUserOp_3043":{"entryPoint":2137,"id":3043,"parameterSlots":3,"returnSlots":1},"@verifyCallResultFromTarget_1082":{"entryPoint":6978,"id":1082,"parameterSlots":4,"returnSlots":1},"@withdrawDepositTo_4388":{"entryPoint":2334,"id":4388,"parameterSlots":2,"returnSlots":0},"abi_decode_array_address_dyn_calldata":{"entryPoint":7672,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_bytes_calldata":{"entryPoint":7248,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_address":{"entryPoint":7849,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_payablet_uint256":{"entryPoint":7962,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_addresst_uint256t_bytes_calldata_ptrt_bytes_calldata_ptr":{"entryPoint":7314,"id":null,"parameterSlots":2,"returnSlots":8},"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptrt_bytes_calldata_ptr":{"entryPoint":8359,"id":null,"parameterSlots":2,"returnSlots":8},"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_calldata_ptr":{"entryPoint":7557,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_calldata_ptr":{"entryPoint":8517,"id":null,"parameterSlots":2,"returnSlots":6},"abi_decode_tuple_t_addresst_bytes_memory_ptr":{"entryPoint":8053,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256t_bytes_calldata_ptr":{"entryPoint":8279,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr":{"entryPoint":7741,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_bytes32_fromMemory":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes4":{"entryPoint":7491,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_struct$_UserOperation_$3791_calldata_ptrt_bytes32t_uint256":{"entryPoint":7878,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":8884,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":8945,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_payable_t_uint256__to_t_address_payable_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_rational_0_by_1__to_t_address_t_uint192__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_IEntryPoint_$3605__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":9020,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_046f63b53432b31c38dcec6b5f05e3d65602d684f9163a89310aaaf94e08558e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_26bf1d2fa883929ce8db7f4593c3a7f27ec5e761d3beb6ef3a9db5c68fe51d21__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_ae2932905fc5bb055d2e7b29311075afd0dbf688106cf649cb515d342f4c7367__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f684c2c0c9ec797849b62669189fe025e9077c00ba7812987ce38c0071ad7a50__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"access_calldata_tail_t_bytes_calldata_ptr":{"entryPoint":8688,"id":null,"parameterSlots":2,"returnSlots":2},"copy_memory_to_memory_with_cleanup":{"entryPoint":8909,"id":null,"parameterSlots":3,"returnSlots":0},"increment_t_uint256":{"entryPoint":8789,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x21":{"entryPoint":8973,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":8641,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":8006,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_address":{"entryPoint":7214,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:20474:34","statements":[{"nodeType":"YulBlock","src":"6:3:34","statements":[]},{"body":{"nodeType":"YulBlock","src":"59:109:34","statements":[{"body":{"nodeType":"YulBlock","src":"146:16:34","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"155:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"158:1:34","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"148:6:34"},"nodeType":"YulFunctionCall","src":"148:12:34"},"nodeType":"YulExpressionStatement","src":"148:12:34"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"82:5:34"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"93:5:34"},{"kind":"number","nodeType":"YulLiteral","src":"100:42:34","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"89:3:34"},"nodeType":"YulFunctionCall","src":"89:54:34"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"79:2:34"},"nodeType":"YulFunctionCall","src":"79:65:34"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"72:6:34"},"nodeType":"YulFunctionCall","src":"72:73:34"},"nodeType":"YulIf","src":"69:93:34"}]},"name":"validator_revert_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"48:5:34","type":""}],"src":"14:154:34"},{"body":{"nodeType":"YulBlock","src":"245:275:34","statements":[{"body":{"nodeType":"YulBlock","src":"294:16:34","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"303:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"306:1:34","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"296:6:34"},"nodeType":"YulFunctionCall","src":"296:12:34"},"nodeType":"YulExpressionStatement","src":"296:12:34"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"273:6:34"},{"kind":"number","nodeType":"YulLiteral","src":"281:4:34","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"269:3:34"},"nodeType":"YulFunctionCall","src":"269:17:34"},{"name":"end","nodeType":"YulIdentifier","src":"288:3:34"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"265:3:34"},"nodeType":"YulFunctionCall","src":"265:27:34"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"258:6:34"},"nodeType":"YulFunctionCall","src":"258:35:34"},"nodeType":"YulIf","src":"255:55:34"},{"nodeType":"YulAssignment","src":"319:30:34","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"342:6:34"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"329:12:34"},"nodeType":"YulFunctionCall","src":"329:20:34"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"319:6:34"}]},{"body":{"nodeType":"YulBlock","src":"392:16:34","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"401:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"404:1:34","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"394:6:34"},"nodeType":"YulFunctionCall","src":"394:12:34"},"nodeType":"YulExpressionStatement","src":"394:12:34"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"364:6:34"},{"kind":"number","nodeType":"YulLiteral","src":"372:18:34","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"361:2:34"},"nodeType":"YulFunctionCall","src":"361:30:34"},"nodeType":"YulIf","src":"358:50:34"},{"nodeType":"YulAssignment","src":"417:29:34","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"433:6:34"},{"kind":"number","nodeType":"YulLiteral","src":"441:4:34","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"429:3:34"},"nodeType":"YulFunctionCall","src":"429:17:34"},"variableNames":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"417:8:34"}]},{"body":{"nodeType":"YulBlock","src":"498:16:34","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"507:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"510:1:34","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"500:6:34"},"nodeType":"YulFunctionCall","src":"500:12:34"},"nodeType":"YulExpressionStatement","src":"500:12:34"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"469:6:34"},{"name":"length","nodeType":"YulIdentifier","src":"477:6:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"465:3:34"},"nodeType":"YulFunctionCall","src":"465:19:34"},{"kind":"number","nodeType":"YulLiteral","src":"486:4:34","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"461:3:34"},"nodeType":"YulFunctionCall","src":"461:30:34"},{"name":"end","nodeType":"YulIdentifier","src":"493:3:34"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"458:2:34"},"nodeType":"YulFunctionCall","src":"458:39:34"},"nodeType":"YulIf","src":"455:59:34"}]},"name":"abi_decode_bytes_calldata","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"208:6:34","type":""},{"name":"end","nodeType":"YulTypedName","src":"216:3:34","type":""}],"returnVariables":[{"name":"arrayPos","nodeType":"YulTypedName","src":"224:8:34","type":""},{"name":"length","nodeType":"YulTypedName","src":"234:6:34","type":""}],"src":"173:347:34"},{"body":{"nodeType":"YulBlock","src":"718:1012:34","statements":[{"body":{"nodeType":"YulBlock","src":"765:16:34","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"774:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"777:1:34","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"767:6:34"},"nodeType":"YulFunctionCall","src":"767:12:34"},"nodeType":"YulExpressionStatement","src":"767:12:34"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"739:7:34"},{"name":"headStart","nodeType":"YulIdentifier","src":"748:9:34"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"735:3:34"},"nodeType":"YulFunctionCall","src":"735:23:34"},{"kind":"number","nodeType":"YulLiteral","src":"760:3:34","type":"","value":"192"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"731:3:34"},"nodeType":"YulFunctionCall","src":"731:33:34"},"nodeType":"YulIf","src":"728:53:34"},{"nodeType":"YulVariableDeclaration","src":"790:36:34","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"816:9:34"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"803:12:34"},"nodeType":"YulFunctionCall","src":"803:23:34"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"794:5:34","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"860:5:34"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"835:24:34"},"nodeType":"YulFunctionCall","src":"835:31:34"},"nodeType":"YulExpressionStatement","src":"835:31:34"},{"nodeType":"YulAssignment","src":"875:15:34","value":{"name":"value","nodeType":"YulIdentifier","src":"885:5:34"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"875:6:34"}]},{"nodeType":"YulVariableDeclaration","src":"899:47:34","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"931:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"942:2:34","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"927:3:34"},"nodeType":"YulFunctionCall","src":"927:18:34"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"914:12:34"},"nodeType":"YulFunctionCall","src":"914:32:34"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"903:7:34","type":""}]},{"expression":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"980:7:34"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"955:24:34"},"nodeType":"YulFunctionCall","src":"955:33:34"},"nodeType":"YulExpressionStatement","src":"955:33:34"},{"nodeType":"YulAssignment","src":"997:17:34","value":{"name":"value_1","nodeType":"YulIdentifier","src":"1007:7:34"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"997:6:34"}]},{"nodeType":"YulVariableDeclaration","src":"1023:47:34","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1055:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"1066:2:34","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1051:3:34"},"nodeType":"YulFunctionCall","src":"1051:18:34"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1038:12:34"},"nodeType":"YulFunctionCall","src":"1038:32:34"},"variables":[{"name":"value_2","nodeType":"YulTypedName","src":"1027:7:34","type":""}]},{"expression":{"arguments":[{"name":"value_2","nodeType":"YulIdentifier","src":"1104:7:34"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"1079:24:34"},"nodeType":"YulFunctionCall","src":"1079:33:34"},"nodeType":"YulExpressionStatement","src":"1079:33:34"},{"nodeType":"YulAssignment","src":"1121:17:34","value":{"name":"value_2","nodeType":"YulIdentifier","src":"1131:7:34"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1121:6:34"}]},{"nodeType":"YulAssignment","src":"1147:42:34","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1174:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"1185:2:34","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1170:3:34"},"nodeType":"YulFunctionCall","src":"1170:18:34"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1157:12:34"},"nodeType":"YulFunctionCall","src":"1157:32:34"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"1147:6:34"}]},{"nodeType":"YulVariableDeclaration","src":"1198:47:34","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1229:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"1240:3:34","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1225:3:34"},"nodeType":"YulFunctionCall","src":"1225:19:34"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1212:12:34"},"nodeType":"YulFunctionCall","src":"1212:33:34"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1202:6:34","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1254:28:34","value":{"kind":"number","nodeType":"YulLiteral","src":"1264:18:34","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1258:2:34","type":""}]},{"body":{"nodeType":"YulBlock","src":"1309:16:34","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1318:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1321:1:34","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1311:6:34"},"nodeType":"YulFunctionCall","src":"1311:12:34"},"nodeType":"YulExpressionStatement","src":"1311:12:34"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1297:6:34"},{"name":"_1","nodeType":"YulIdentifier","src":"1305:2:34"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1294:2:34"},"nodeType":"YulFunctionCall","src":"1294:14:34"},"nodeType":"YulIf","src":"1291:34:34"},{"nodeType":"YulVariableDeclaration","src":"1334:84:34","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1390:9:34"},{"name":"offset","nodeType":"YulIdentifier","src":"1401:6:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1386:3:34"},"nodeType":"YulFunctionCall","src":"1386:22:34"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1410:7:34"}],"functionName":{"name":"abi_decode_bytes_calldata","nodeType":"YulIdentifier","src":"1360:25:34"},"nodeType":"YulFunctionCall","src":"1360:58:34"},"variables":[{"name":"value4_1","nodeType":"YulTypedName","src":"1338:8:34","type":""},{"name":"value5_1","nodeType":"YulTypedName","src":"1348:8:34","type":""}]},{"nodeType":"YulAssignment","src":"1427:18:34","value":{"name":"value4_1","nodeType":"YulIdentifier","src":"1437:8:34"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"1427:6:34"}]},{"nodeType":"YulAssignment","src":"1454:18:34","value":{"name":"value5_1","nodeType":"YulIdentifier","src":"1464:8:34"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"1454:6:34"}]},{"nodeType":"YulVariableDeclaration","src":"1481:49:34","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1514:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"1525:3:34","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1510:3:34"},"nodeType":"YulFunctionCall","src":"1510:19:34"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1497:12:34"},"nodeType":"YulFunctionCall","src":"1497:33:34"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"1485:8:34","type":""}]},{"body":{"nodeType":"YulBlock","src":"1559:16:34","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1568:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1571:1:34","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1561:6:34"},"nodeType":"YulFunctionCall","src":"1561:12:34"},"nodeType":"YulExpressionStatement","src":"1561:12:34"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"1545:8:34"},{"name":"_1","nodeType":"YulIdentifier","src":"1555:2:34"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1542:2:34"},"nodeType":"YulFunctionCall","src":"1542:16:34"},"nodeType":"YulIf","src":"1539:36:34"},{"nodeType":"YulVariableDeclaration","src":"1584:86:34","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1640:9:34"},{"name":"offset_1","nodeType":"YulIdentifier","src":"1651:8:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1636:3:34"},"nodeType":"YulFunctionCall","src":"1636:24:34"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1662:7:34"}],"functionName":{"name":"abi_decode_bytes_calldata","nodeType":"YulIdentifier","src":"1610:25:34"},"nodeType":"YulFunctionCall","src":"1610:60:34"},"variables":[{"name":"value6_1","nodeType":"YulTypedName","src":"1588:8:34","type":""},{"name":"value7_1","nodeType":"YulTypedName","src":"1598:8:34","type":""}]},{"nodeType":"YulAssignment","src":"1679:18:34","value":{"name":"value6_1","nodeType":"YulIdentifier","src":"1689:8:34"},"variableNames":[{"name":"value6","nodeType":"YulIdentifier","src":"1679:6:34"}]},{"nodeType":"YulAssignment","src":"1706:18:34","value":{"name":"value7_1","nodeType":"YulIdentifier","src":"1716:8:34"},"variableNames":[{"name":"value7","nodeType":"YulIdentifier","src":"1706:6:34"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_addresst_uint256t_bytes_calldata_ptrt_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"628:9:34","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"639:7:34","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"651:6:34","type":""},{"name":"value1","nodeType":"YulTypedName","src":"659:6:34","type":""},{"name":"value2","nodeType":"YulTypedName","src":"667:6:34","type":""},{"name":"value3","nodeType":"YulTypedName","src":"675:6:34","type":""},{"name":"value4","nodeType":"YulTypedName","src":"683:6:34","type":""},{"name":"value5","nodeType":"YulTypedName","src":"691:6:34","type":""},{"name":"value6","nodeType":"YulTypedName","src":"699:6:34","type":""},{"name":"value7","nodeType":"YulTypedName","src":"707:6:34","type":""}],"src":"525:1205:34"},{"body":{"nodeType":"YulBlock","src":"1804:263:34","statements":[{"body":{"nodeType":"YulBlock","src":"1850:16:34","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1859:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1862:1:34","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1852:6:34"},"nodeType":"YulFunctionCall","src":"1852:12:34"},"nodeType":"YulExpressionStatement","src":"1852:12:34"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1825:7:34"},{"name":"headStart","nodeType":"YulIdentifier","src":"1834:9:34"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1821:3:34"},"nodeType":"YulFunctionCall","src":"1821:23:34"},{"kind":"number","nodeType":"YulLiteral","src":"1846:2:34","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1817:3:34"},"nodeType":"YulFunctionCall","src":"1817:32:34"},"nodeType":"YulIf","src":"1814:52:34"},{"nodeType":"YulVariableDeclaration","src":"1875:36:34","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1901:9:34"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1888:12:34"},"nodeType":"YulFunctionCall","src":"1888:23:34"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"1879:5:34","type":""}]},{"body":{"nodeType":"YulBlock","src":"2021:16:34","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2030:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2033:1:34","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2023:6:34"},"nodeType":"YulFunctionCall","src":"2023:12:34"},"nodeType":"YulExpressionStatement","src":"2023:12:34"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1933:5:34"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1944:5:34"},{"kind":"number","nodeType":"YulLiteral","src":"1951:66:34","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1940:3:34"},"nodeType":"YulFunctionCall","src":"1940:78:34"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1930:2:34"},"nodeType":"YulFunctionCall","src":"1930:89:34"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1923:6:34"},"nodeType":"YulFunctionCall","src":"1923:97:34"},"nodeType":"YulIf","src":"1920:117:34"},{"nodeType":"YulAssignment","src":"2046:15:34","value":{"name":"value","nodeType":"YulIdentifier","src":"2056:5:34"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2046:6:34"}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1770:9:34","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1781:7:34","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1793:6:34","type":""}],"src":"1735:332:34"},{"body":{"nodeType":"YulBlock","src":"2167:92:34","statements":[{"nodeType":"YulAssignment","src":"2177:26:34","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2189:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"2200:2:34","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2185:3:34"},"nodeType":"YulFunctionCall","src":"2185:18:34"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2177:4:34"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2219:9:34"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2244:6:34"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2237:6:34"},"nodeType":"YulFunctionCall","src":"2237:14:34"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2230:6:34"},"nodeType":"YulFunctionCall","src":"2230:22:34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2212:6:34"},"nodeType":"YulFunctionCall","src":"2212:41:34"},"nodeType":"YulExpressionStatement","src":"2212:41:34"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2136:9:34","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2147:6:34","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2158:4:34","type":""}],"src":"2072:187:34"},{"body":{"nodeType":"YulBlock","src":"2404:614:34","statements":[{"body":{"nodeType":"YulBlock","src":"2451:16:34","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2460:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2463:1:34","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2453:6:34"},"nodeType":"YulFunctionCall","src":"2453:12:34"},"nodeType":"YulExpressionStatement","src":"2453:12:34"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2425:7:34"},{"name":"headStart","nodeType":"YulIdentifier","src":"2434:9:34"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2421:3:34"},"nodeType":"YulFunctionCall","src":"2421:23:34"},{"kind":"number","nodeType":"YulLiteral","src":"2446:3:34","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2417:3:34"},"nodeType":"YulFunctionCall","src":"2417:33:34"},"nodeType":"YulIf","src":"2414:53:34"},{"nodeType":"YulVariableDeclaration","src":"2476:36:34","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2502:9:34"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2489:12:34"},"nodeType":"YulFunctionCall","src":"2489:23:34"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"2480:5:34","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2546:5:34"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"2521:24:34"},"nodeType":"YulFunctionCall","src":"2521:31:34"},"nodeType":"YulExpressionStatement","src":"2521:31:34"},{"nodeType":"YulAssignment","src":"2561:15:34","value":{"name":"value","nodeType":"YulIdentifier","src":"2571:5:34"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2561:6:34"}]},{"nodeType":"YulVariableDeclaration","src":"2585:47:34","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2617:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"2628:2:34","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2613:3:34"},"nodeType":"YulFunctionCall","src":"2613:18:34"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2600:12:34"},"nodeType":"YulFunctionCall","src":"2600:32:34"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"2589:7:34","type":""}]},{"expression":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"2666:7:34"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"2641:24:34"},"nodeType":"YulFunctionCall","src":"2641:33:34"},"nodeType":"YulExpressionStatement","src":"2641:33:34"},{"nodeType":"YulAssignment","src":"2683:17:34","value":{"name":"value_1","nodeType":"YulIdentifier","src":"2693:7:34"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2683:6:34"}]},{"nodeType":"YulAssignment","src":"2709:42:34","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2736:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"2747:2:34","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2732:3:34"},"nodeType":"YulFunctionCall","src":"2732:18:34"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2719:12:34"},"nodeType":"YulFunctionCall","src":"2719:32:34"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"2709:6:34"}]},{"nodeType":"YulVariableDeclaration","src":"2760:46:34","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2791:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"2802:2:34","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2787:3:34"},"nodeType":"YulFunctionCall","src":"2787:18:34"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2774:12:34"},"nodeType":"YulFunctionCall","src":"2774:32:34"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2764:6:34","type":""}]},{"body":{"nodeType":"YulBlock","src":"2849:16:34","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2858:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2861:1:34","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2851:6:34"},"nodeType":"YulFunctionCall","src":"2851:12:34"},"nodeType":"YulExpressionStatement","src":"2851:12:34"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2821:6:34"},{"kind":"number","nodeType":"YulLiteral","src":"2829:18:34","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2818:2:34"},"nodeType":"YulFunctionCall","src":"2818:30:34"},"nodeType":"YulIf","src":"2815:50:34"},{"nodeType":"YulVariableDeclaration","src":"2874:84:34","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2930:9:34"},{"name":"offset","nodeType":"YulIdentifier","src":"2941:6:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2926:3:34"},"nodeType":"YulFunctionCall","src":"2926:22:34"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2950:7:34"}],"functionName":{"name":"abi_decode_bytes_calldata","nodeType":"YulIdentifier","src":"2900:25:34"},"nodeType":"YulFunctionCall","src":"2900:58:34"},"variables":[{"name":"value3_1","nodeType":"YulTypedName","src":"2878:8:34","type":""},{"name":"value4_1","nodeType":"YulTypedName","src":"2888:8:34","type":""}]},{"nodeType":"YulAssignment","src":"2967:18:34","value":{"name":"value3_1","nodeType":"YulIdentifier","src":"2977:8:34"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"2967:6:34"}]},{"nodeType":"YulAssignment","src":"2994:18:34","value":{"name":"value4_1","nodeType":"YulIdentifier","src":"3004:8:34"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"2994:6:34"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2338:9:34","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2349:7:34","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2361:6:34","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2369:6:34","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2377:6:34","type":""},{"name":"value3","nodeType":"YulTypedName","src":"2385:6:34","type":""},{"name":"value4","nodeType":"YulTypedName","src":"2393:6:34","type":""}],"src":"2264:754:34"},{"body":{"nodeType":"YulBlock","src":"3122:149:34","statements":[{"nodeType":"YulAssignment","src":"3132:26:34","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3144:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"3155:2:34","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3140:3:34"},"nodeType":"YulFunctionCall","src":"3140:18:34"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3132:4:34"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3174:9:34"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3189:6:34"},{"kind":"number","nodeType":"YulLiteral","src":"3197:66:34","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3185:3:34"},"nodeType":"YulFunctionCall","src":"3185:79:34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3167:6:34"},"nodeType":"YulFunctionCall","src":"3167:98:34"},"nodeType":"YulExpressionStatement","src":"3167:98:34"}]},"name":"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3091:9:34","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3102:6:34","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3113:4:34","type":""}],"src":"3023:248:34"},{"body":{"nodeType":"YulBlock","src":"3360:283:34","statements":[{"body":{"nodeType":"YulBlock","src":"3409:16:34","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3418:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3421:1:34","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3411:6:34"},"nodeType":"YulFunctionCall","src":"3411:12:34"},"nodeType":"YulExpressionStatement","src":"3411:12:34"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3388:6:34"},{"kind":"number","nodeType":"YulLiteral","src":"3396:4:34","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3384:3:34"},"nodeType":"YulFunctionCall","src":"3384:17:34"},{"name":"end","nodeType":"YulIdentifier","src":"3403:3:34"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3380:3:34"},"nodeType":"YulFunctionCall","src":"3380:27:34"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3373:6:34"},"nodeType":"YulFunctionCall","src":"3373:35:34"},"nodeType":"YulIf","src":"3370:55:34"},{"nodeType":"YulAssignment","src":"3434:30:34","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3457:6:34"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3444:12:34"},"nodeType":"YulFunctionCall","src":"3444:20:34"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3434:6:34"}]},{"body":{"nodeType":"YulBlock","src":"3507:16:34","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3516:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3519:1:34","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3509:6:34"},"nodeType":"YulFunctionCall","src":"3509:12:34"},"nodeType":"YulExpressionStatement","src":"3509:12:34"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3479:6:34"},{"kind":"number","nodeType":"YulLiteral","src":"3487:18:34","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3476:2:34"},"nodeType":"YulFunctionCall","src":"3476:30:34"},"nodeType":"YulIf","src":"3473:50:34"},{"nodeType":"YulAssignment","src":"3532:29:34","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3548:6:34"},{"kind":"number","nodeType":"YulLiteral","src":"3556:4:34","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3544:3:34"},"nodeType":"YulFunctionCall","src":"3544:17:34"},"variableNames":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"3532:8:34"}]},{"body":{"nodeType":"YulBlock","src":"3621:16:34","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3630:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3633:1:34","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3623:6:34"},"nodeType":"YulFunctionCall","src":"3623:12:34"},"nodeType":"YulExpressionStatement","src":"3623:12:34"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3584:6:34"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3596:1:34","type":"","value":"5"},{"name":"length","nodeType":"YulIdentifier","src":"3599:6:34"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3592:3:34"},"nodeType":"YulFunctionCall","src":"3592:14:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3580:3:34"},"nodeType":"YulFunctionCall","src":"3580:27:34"},{"kind":"number","nodeType":"YulLiteral","src":"3609:4:34","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3576:3:34"},"nodeType":"YulFunctionCall","src":"3576:38:34"},{"name":"end","nodeType":"YulIdentifier","src":"3616:3:34"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3573:2:34"},"nodeType":"YulFunctionCall","src":"3573:47:34"},"nodeType":"YulIf","src":"3570:67:34"}]},"name":"abi_decode_array_address_dyn_calldata","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3323:6:34","type":""},{"name":"end","nodeType":"YulTypedName","src":"3331:3:34","type":""}],"returnVariables":[{"name":"arrayPos","nodeType":"YulTypedName","src":"3339:8:34","type":""},{"name":"length","nodeType":"YulTypedName","src":"3349:6:34","type":""}],"src":"3276:367:34"},{"body":{"nodeType":"YulBlock","src":"3816:616:34","statements":[{"body":{"nodeType":"YulBlock","src":"3862:16:34","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3871:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3874:1:34","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3864:6:34"},"nodeType":"YulFunctionCall","src":"3864:12:34"},"nodeType":"YulExpressionStatement","src":"3864:12:34"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3837:7:34"},{"name":"headStart","nodeType":"YulIdentifier","src":"3846:9:34"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3833:3:34"},"nodeType":"YulFunctionCall","src":"3833:23:34"},{"kind":"number","nodeType":"YulLiteral","src":"3858:2:34","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3829:3:34"},"nodeType":"YulFunctionCall","src":"3829:32:34"},"nodeType":"YulIf","src":"3826:52:34"},{"nodeType":"YulVariableDeclaration","src":"3887:37:34","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3914:9:34"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3901:12:34"},"nodeType":"YulFunctionCall","src":"3901:23:34"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3891:6:34","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3933:28:34","value":{"kind":"number","nodeType":"YulLiteral","src":"3943:18:34","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"3937:2:34","type":""}]},{"body":{"nodeType":"YulBlock","src":"3988:16:34","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3997:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4000:1:34","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3990:6:34"},"nodeType":"YulFunctionCall","src":"3990:12:34"},"nodeType":"YulExpressionStatement","src":"3990:12:34"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3976:6:34"},{"name":"_1","nodeType":"YulIdentifier","src":"3984:2:34"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3973:2:34"},"nodeType":"YulFunctionCall","src":"3973:14:34"},"nodeType":"YulIf","src":"3970:34:34"},{"nodeType":"YulVariableDeclaration","src":"4013:96:34","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4081:9:34"},{"name":"offset","nodeType":"YulIdentifier","src":"4092:6:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4077:3:34"},"nodeType":"YulFunctionCall","src":"4077:22:34"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4101:7:34"}],"functionName":{"name":"abi_decode_array_address_dyn_calldata","nodeType":"YulIdentifier","src":"4039:37:34"},"nodeType":"YulFunctionCall","src":"4039:70:34"},"variables":[{"name":"value0_1","nodeType":"YulTypedName","src":"4017:8:34","type":""},{"name":"value1_1","nodeType":"YulTypedName","src":"4027:8:34","type":""}]},{"nodeType":"YulAssignment","src":"4118:18:34","value":{"name":"value0_1","nodeType":"YulIdentifier","src":"4128:8:34"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4118:6:34"}]},{"nodeType":"YulAssignment","src":"4145:18:34","value":{"name":"value1_1","nodeType":"YulIdentifier","src":"4155:8:34"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4145:6:34"}]},{"nodeType":"YulVariableDeclaration","src":"4172:48:34","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4205:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"4216:2:34","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4201:3:34"},"nodeType":"YulFunctionCall","src":"4201:18:34"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4188:12:34"},"nodeType":"YulFunctionCall","src":"4188:32:34"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"4176:8:34","type":""}]},{"body":{"nodeType":"YulBlock","src":"4249:16:34","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4258:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4261:1:34","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4251:6:34"},"nodeType":"YulFunctionCall","src":"4251:12:34"},"nodeType":"YulExpressionStatement","src":"4251:12:34"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"4235:8:34"},{"name":"_1","nodeType":"YulIdentifier","src":"4245:2:34"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4232:2:34"},"nodeType":"YulFunctionCall","src":"4232:16:34"},"nodeType":"YulIf","src":"4229:36:34"},{"nodeType":"YulVariableDeclaration","src":"4274:98:34","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4342:9:34"},{"name":"offset_1","nodeType":"YulIdentifier","src":"4353:8:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4338:3:34"},"nodeType":"YulFunctionCall","src":"4338:24:34"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4364:7:34"}],"functionName":{"name":"abi_decode_array_address_dyn_calldata","nodeType":"YulIdentifier","src":"4300:37:34"},"nodeType":"YulFunctionCall","src":"4300:72:34"},"variables":[{"name":"value2_1","nodeType":"YulTypedName","src":"4278:8:34","type":""},{"name":"value3_1","nodeType":"YulTypedName","src":"4288:8:34","type":""}]},{"nodeType":"YulAssignment","src":"4381:18:34","value":{"name":"value2_1","nodeType":"YulIdentifier","src":"4391:8:34"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"4381:6:34"}]},{"nodeType":"YulAssignment","src":"4408:18:34","value":{"name":"value3_1","nodeType":"YulIdentifier","src":"4418:8:34"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"4408:6:34"}]}]},"name":"abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3758:9:34","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3769:7:34","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3781:6:34","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3789:6:34","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3797:6:34","type":""},{"name":"value3","nodeType":"YulTypedName","src":"3805:6:34","type":""}],"src":"3648:784:34"},{"body":{"nodeType":"YulBlock","src":"4507:177:34","statements":[{"body":{"nodeType":"YulBlock","src":"4553:16:34","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4562:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4565:1:34","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4555:6:34"},"nodeType":"YulFunctionCall","src":"4555:12:34"},"nodeType":"YulExpressionStatement","src":"4555:12:34"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4528:7:34"},{"name":"headStart","nodeType":"YulIdentifier","src":"4537:9:34"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4524:3:34"},"nodeType":"YulFunctionCall","src":"4524:23:34"},{"kind":"number","nodeType":"YulLiteral","src":"4549:2:34","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4520:3:34"},"nodeType":"YulFunctionCall","src":"4520:32:34"},"nodeType":"YulIf","src":"4517:52:34"},{"nodeType":"YulVariableDeclaration","src":"4578:36:34","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4604:9:34"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4591:12:34"},"nodeType":"YulFunctionCall","src":"4591:23:34"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"4582:5:34","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4648:5:34"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"4623:24:34"},"nodeType":"YulFunctionCall","src":"4623:31:34"},"nodeType":"YulExpressionStatement","src":"4623:31:34"},{"nodeType":"YulAssignment","src":"4663:15:34","value":{"name":"value","nodeType":"YulIdentifier","src":"4673:5:34"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4663:6:34"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4473:9:34","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4484:7:34","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4496:6:34","type":""}],"src":"4437:247:34"},{"body":{"nodeType":"YulBlock","src":"4826:392:34","statements":[{"body":{"nodeType":"YulBlock","src":"4872:16:34","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4881:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4884:1:34","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4874:6:34"},"nodeType":"YulFunctionCall","src":"4874:12:34"},"nodeType":"YulExpressionStatement","src":"4874:12:34"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4847:7:34"},{"name":"headStart","nodeType":"YulIdentifier","src":"4856:9:34"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4843:3:34"},"nodeType":"YulFunctionCall","src":"4843:23:34"},{"kind":"number","nodeType":"YulLiteral","src":"4868:2:34","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4839:3:34"},"nodeType":"YulFunctionCall","src":"4839:32:34"},"nodeType":"YulIf","src":"4836:52:34"},{"nodeType":"YulVariableDeclaration","src":"4897:37:34","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4924:9:34"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4911:12:34"},"nodeType":"YulFunctionCall","src":"4911:23:34"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4901:6:34","type":""}]},{"body":{"nodeType":"YulBlock","src":"4977:16:34","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4986:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4989:1:34","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4979:6:34"},"nodeType":"YulFunctionCall","src":"4979:12:34"},"nodeType":"YulExpressionStatement","src":"4979:12:34"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4949:6:34"},{"kind":"number","nodeType":"YulLiteral","src":"4957:18:34","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4946:2:34"},"nodeType":"YulFunctionCall","src":"4946:30:34"},"nodeType":"YulIf","src":"4943:50:34"},{"nodeType":"YulVariableDeclaration","src":"5002:32:34","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5016:9:34"},{"name":"offset","nodeType":"YulIdentifier","src":"5027:6:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5012:3:34"},"nodeType":"YulFunctionCall","src":"5012:22:34"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"5006:2:34","type":""}]},{"body":{"nodeType":"YulBlock","src":"5073:16:34","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5082:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5085:1:34","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5075:6:34"},"nodeType":"YulFunctionCall","src":"5075:12:34"},"nodeType":"YulExpressionStatement","src":"5075:12:34"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5054:7:34"},{"name":"_1","nodeType":"YulIdentifier","src":"5063:2:34"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5050:3:34"},"nodeType":"YulFunctionCall","src":"5050:16:34"},{"kind":"number","nodeType":"YulLiteral","src":"5068:3:34","type":"","value":"352"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5046:3:34"},"nodeType":"YulFunctionCall","src":"5046:26:34"},"nodeType":"YulIf","src":"5043:46:34"},{"nodeType":"YulAssignment","src":"5098:12:34","value":{"name":"_1","nodeType":"YulIdentifier","src":"5108:2:34"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5098:6:34"}]},{"nodeType":"YulAssignment","src":"5119:42:34","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5146:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"5157:2:34","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5142:3:34"},"nodeType":"YulFunctionCall","src":"5142:18:34"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5129:12:34"},"nodeType":"YulFunctionCall","src":"5129:32:34"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5119:6:34"}]},{"nodeType":"YulAssignment","src":"5170:42:34","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5197:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"5208:2:34","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5193:3:34"},"nodeType":"YulFunctionCall","src":"5193:18:34"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5180:12:34"},"nodeType":"YulFunctionCall","src":"5180:32:34"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"5170:6:34"}]}]},"name":"abi_decode_tuple_t_struct$_UserOperation_$3791_calldata_ptrt_bytes32t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4776:9:34","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4787:7:34","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4799:6:34","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4807:6:34","type":""},{"name":"value2","nodeType":"YulTypedName","src":"4815:6:34","type":""}],"src":"4689:529:34"},{"body":{"nodeType":"YulBlock","src":"5324:76:34","statements":[{"nodeType":"YulAssignment","src":"5334:26:34","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5346:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"5357:2:34","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5342:3:34"},"nodeType":"YulFunctionCall","src":"5342:18:34"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5334:4:34"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5376:9:34"},{"name":"value0","nodeType":"YulIdentifier","src":"5387:6:34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5369:6:34"},"nodeType":"YulFunctionCall","src":"5369:25:34"},"nodeType":"YulExpressionStatement","src":"5369:25:34"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5293:9:34","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5304:6:34","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5315:4:34","type":""}],"src":"5223:177:34"},{"body":{"nodeType":"YulBlock","src":"5500:228:34","statements":[{"body":{"nodeType":"YulBlock","src":"5546:16:34","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5555:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5558:1:34","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5548:6:34"},"nodeType":"YulFunctionCall","src":"5548:12:34"},"nodeType":"YulExpressionStatement","src":"5548:12:34"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5521:7:34"},{"name":"headStart","nodeType":"YulIdentifier","src":"5530:9:34"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5517:3:34"},"nodeType":"YulFunctionCall","src":"5517:23:34"},{"kind":"number","nodeType":"YulLiteral","src":"5542:2:34","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5513:3:34"},"nodeType":"YulFunctionCall","src":"5513:32:34"},"nodeType":"YulIf","src":"5510:52:34"},{"nodeType":"YulVariableDeclaration","src":"5571:36:34","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5597:9:34"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5584:12:34"},"nodeType":"YulFunctionCall","src":"5584:23:34"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"5575:5:34","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5641:5:34"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"5616:24:34"},"nodeType":"YulFunctionCall","src":"5616:31:34"},"nodeType":"YulExpressionStatement","src":"5616:31:34"},{"nodeType":"YulAssignment","src":"5656:15:34","value":{"name":"value","nodeType":"YulIdentifier","src":"5666:5:34"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5656:6:34"}]},{"nodeType":"YulAssignment","src":"5680:42:34","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5707:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"5718:2:34","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5703:3:34"},"nodeType":"YulFunctionCall","src":"5703:18:34"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5690:12:34"},"nodeType":"YulFunctionCall","src":"5690:32:34"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5680:6:34"}]}]},"name":"abi_decode_tuple_t_address_payablet_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5458:9:34","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5469:7:34","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5481:6:34","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5489:6:34","type":""}],"src":"5405:323:34"},{"body":{"nodeType":"YulBlock","src":"5765:152:34","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5782:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5785:77:34","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5775:6:34"},"nodeType":"YulFunctionCall","src":"5775:88:34"},"nodeType":"YulExpressionStatement","src":"5775:88:34"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5879:1:34","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"5882:4:34","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5872:6:34"},"nodeType":"YulFunctionCall","src":"5872:15:34"},"nodeType":"YulExpressionStatement","src":"5872:15:34"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5903:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5906:4:34","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5896:6:34"},"nodeType":"YulFunctionCall","src":"5896:15:34"},"nodeType":"YulExpressionStatement","src":"5896:15:34"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"5733:184:34"},{"body":{"nodeType":"YulBlock","src":"6018:1019:34","statements":[{"body":{"nodeType":"YulBlock","src":"6064:16:34","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6073:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6076:1:34","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6066:6:34"},"nodeType":"YulFunctionCall","src":"6066:12:34"},"nodeType":"YulExpressionStatement","src":"6066:12:34"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6039:7:34"},{"name":"headStart","nodeType":"YulIdentifier","src":"6048:9:34"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6035:3:34"},"nodeType":"YulFunctionCall","src":"6035:23:34"},{"kind":"number","nodeType":"YulLiteral","src":"6060:2:34","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6031:3:34"},"nodeType":"YulFunctionCall","src":"6031:32:34"},"nodeType":"YulIf","src":"6028:52:34"},{"nodeType":"YulVariableDeclaration","src":"6089:36:34","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6115:9:34"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6102:12:34"},"nodeType":"YulFunctionCall","src":"6102:23:34"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"6093:5:34","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6159:5:34"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"6134:24:34"},"nodeType":"YulFunctionCall","src":"6134:31:34"},"nodeType":"YulExpressionStatement","src":"6134:31:34"},{"nodeType":"YulAssignment","src":"6174:15:34","value":{"name":"value","nodeType":"YulIdentifier","src":"6184:5:34"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6174:6:34"}]},{"nodeType":"YulVariableDeclaration","src":"6198:46:34","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6229:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"6240:2:34","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6225:3:34"},"nodeType":"YulFunctionCall","src":"6225:18:34"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6212:12:34"},"nodeType":"YulFunctionCall","src":"6212:32:34"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6202:6:34","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6253:28:34","value":{"kind":"number","nodeType":"YulLiteral","src":"6263:18:34","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"6257:2:34","type":""}]},{"body":{"nodeType":"YulBlock","src":"6308:16:34","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6317:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6320:1:34","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6310:6:34"},"nodeType":"YulFunctionCall","src":"6310:12:34"},"nodeType":"YulExpressionStatement","src":"6310:12:34"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6296:6:34"},{"name":"_1","nodeType":"YulIdentifier","src":"6304:2:34"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6293:2:34"},"nodeType":"YulFunctionCall","src":"6293:14:34"},"nodeType":"YulIf","src":"6290:34:34"},{"nodeType":"YulVariableDeclaration","src":"6333:32:34","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6347:9:34"},{"name":"offset","nodeType":"YulIdentifier","src":"6358:6:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6343:3:34"},"nodeType":"YulFunctionCall","src":"6343:22:34"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"6337:2:34","type":""}]},{"body":{"nodeType":"YulBlock","src":"6413:16:34","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6422:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6425:1:34","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6415:6:34"},"nodeType":"YulFunctionCall","src":"6415:12:34"},"nodeType":"YulExpressionStatement","src":"6415:12:34"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"6392:2:34"},{"kind":"number","nodeType":"YulLiteral","src":"6396:4:34","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6388:3:34"},"nodeType":"YulFunctionCall","src":"6388:13:34"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6403:7:34"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6384:3:34"},"nodeType":"YulFunctionCall","src":"6384:27:34"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6377:6:34"},"nodeType":"YulFunctionCall","src":"6377:35:34"},"nodeType":"YulIf","src":"6374:55:34"},{"nodeType":"YulVariableDeclaration","src":"6438:26:34","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"6461:2:34"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6448:12:34"},"nodeType":"YulFunctionCall","src":"6448:16:34"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"6442:2:34","type":""}]},{"body":{"nodeType":"YulBlock","src":"6487:22:34","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"6489:16:34"},"nodeType":"YulFunctionCall","src":"6489:18:34"},"nodeType":"YulExpressionStatement","src":"6489:18:34"}]},"condition":{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"6479:2:34"},{"name":"_1","nodeType":"YulIdentifier","src":"6483:2:34"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6476:2:34"},"nodeType":"YulFunctionCall","src":"6476:10:34"},"nodeType":"YulIf","src":"6473:36:34"},{"nodeType":"YulVariableDeclaration","src":"6518:76:34","value":{"kind":"number","nodeType":"YulLiteral","src":"6528:66:34","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"6522:2:34","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6603:23:34","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6623:2:34","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6617:5:34"},"nodeType":"YulFunctionCall","src":"6617:9:34"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"6607:6:34","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6635:71:34","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6657:6:34"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"6681:2:34"},{"kind":"number","nodeType":"YulLiteral","src":"6685:4:34","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6677:3:34"},"nodeType":"YulFunctionCall","src":"6677:13:34"},{"name":"_4","nodeType":"YulIdentifier","src":"6692:2:34"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6673:3:34"},"nodeType":"YulFunctionCall","src":"6673:22:34"},{"kind":"number","nodeType":"YulLiteral","src":"6697:2:34","type":"","value":"63"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6669:3:34"},"nodeType":"YulFunctionCall","src":"6669:31:34"},{"name":"_4","nodeType":"YulIdentifier","src":"6702:2:34"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6665:3:34"},"nodeType":"YulFunctionCall","src":"6665:40:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6653:3:34"},"nodeType":"YulFunctionCall","src":"6653:53:34"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"6639:10:34","type":""}]},{"body":{"nodeType":"YulBlock","src":"6765:22:34","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"6767:16:34"},"nodeType":"YulFunctionCall","src":"6767:18:34"},"nodeType":"YulExpressionStatement","src":"6767:18:34"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"6724:10:34"},{"name":"_1","nodeType":"YulIdentifier","src":"6736:2:34"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6721:2:34"},"nodeType":"YulFunctionCall","src":"6721:18:34"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"6744:10:34"},{"name":"memPtr","nodeType":"YulIdentifier","src":"6756:6:34"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6741:2:34"},"nodeType":"YulFunctionCall","src":"6741:22:34"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"6718:2:34"},"nodeType":"YulFunctionCall","src":"6718:46:34"},"nodeType":"YulIf","src":"6715:72:34"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6803:2:34","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"6807:10:34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6796:6:34"},"nodeType":"YulFunctionCall","src":"6796:22:34"},"nodeType":"YulExpressionStatement","src":"6796:22:34"},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6834:6:34"},{"name":"_3","nodeType":"YulIdentifier","src":"6842:2:34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6827:6:34"},"nodeType":"YulFunctionCall","src":"6827:18:34"},"nodeType":"YulExpressionStatement","src":"6827:18:34"},{"body":{"nodeType":"YulBlock","src":"6891:16:34","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6900:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6903:1:34","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6893:6:34"},"nodeType":"YulFunctionCall","src":"6893:12:34"},"nodeType":"YulExpressionStatement","src":"6893:12:34"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"6868:2:34"},{"name":"_3","nodeType":"YulIdentifier","src":"6872:2:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6864:3:34"},"nodeType":"YulFunctionCall","src":"6864:11:34"},{"kind":"number","nodeType":"YulLiteral","src":"6877:2:34","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6860:3:34"},"nodeType":"YulFunctionCall","src":"6860:20:34"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6882:7:34"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6857:2:34"},"nodeType":"YulFunctionCall","src":"6857:33:34"},"nodeType":"YulIf","src":"6854:53:34"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6933:6:34"},{"kind":"number","nodeType":"YulLiteral","src":"6941:2:34","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6929:3:34"},"nodeType":"YulFunctionCall","src":"6929:15:34"},{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"6950:2:34"},{"kind":"number","nodeType":"YulLiteral","src":"6954:2:34","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6946:3:34"},"nodeType":"YulFunctionCall","src":"6946:11:34"},{"name":"_3","nodeType":"YulIdentifier","src":"6959:2:34"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"6916:12:34"},"nodeType":"YulFunctionCall","src":"6916:46:34"},"nodeType":"YulExpressionStatement","src":"6916:46:34"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6986:6:34"},{"name":"_3","nodeType":"YulIdentifier","src":"6994:2:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6982:3:34"},"nodeType":"YulFunctionCall","src":"6982:15:34"},{"kind":"number","nodeType":"YulLiteral","src":"6999:2:34","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6978:3:34"},"nodeType":"YulFunctionCall","src":"6978:24:34"},{"kind":"number","nodeType":"YulLiteral","src":"7004:1:34","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6971:6:34"},"nodeType":"YulFunctionCall","src":"6971:35:34"},"nodeType":"YulExpressionStatement","src":"6971:35:34"},{"nodeType":"YulAssignment","src":"7015:16:34","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"7025:6:34"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"7015:6:34"}]}]},"name":"abi_decode_tuple_t_addresst_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5976:9:34","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5987:7:34","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5999:6:34","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6007:6:34","type":""}],"src":"5922:1115:34"},{"body":{"nodeType":"YulBlock","src":"7143:76:34","statements":[{"nodeType":"YulAssignment","src":"7153:26:34","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7165:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"7176:2:34","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7161:3:34"},"nodeType":"YulFunctionCall","src":"7161:18:34"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7153:4:34"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7195:9:34"},{"name":"value0","nodeType":"YulIdentifier","src":"7206:6:34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7188:6:34"},"nodeType":"YulFunctionCall","src":"7188:25:34"},"nodeType":"YulExpressionStatement","src":"7188:25:34"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7112:9:34","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7123:6:34","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7134:4:34","type":""}],"src":"7042:177:34"},{"body":{"nodeType":"YulBlock","src":"7325:125:34","statements":[{"nodeType":"YulAssignment","src":"7335:26:34","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7347:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"7358:2:34","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7343:3:34"},"nodeType":"YulFunctionCall","src":"7343:18:34"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7335:4:34"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7377:9:34"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7392:6:34"},{"kind":"number","nodeType":"YulLiteral","src":"7400:42:34","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7388:3:34"},"nodeType":"YulFunctionCall","src":"7388:55:34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7370:6:34"},"nodeType":"YulFunctionCall","src":"7370:74:34"},"nodeType":"YulExpressionStatement","src":"7370:74:34"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7294:9:34","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7305:6:34","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7316:4:34","type":""}],"src":"7224:226:34"},{"body":{"nodeType":"YulBlock","src":"7576:125:34","statements":[{"nodeType":"YulAssignment","src":"7586:26:34","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7598:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"7609:2:34","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7594:3:34"},"nodeType":"YulFunctionCall","src":"7594:18:34"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7586:4:34"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7628:9:34"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7643:6:34"},{"kind":"number","nodeType":"YulLiteral","src":"7651:42:34","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7639:3:34"},"nodeType":"YulFunctionCall","src":"7639:55:34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7621:6:34"},"nodeType":"YulFunctionCall","src":"7621:74:34"},"nodeType":"YulExpressionStatement","src":"7621:74:34"}]},"name":"abi_encode_tuple_t_contract$_IEntryPoint_$3605__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7545:9:34","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7556:6:34","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7567:4:34","type":""}],"src":"7455:246:34"},{"body":{"nodeType":"YulBlock","src":"7829:489:34","statements":[{"body":{"nodeType":"YulBlock","src":"7875:16:34","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7884:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7887:1:34","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7877:6:34"},"nodeType":"YulFunctionCall","src":"7877:12:34"},"nodeType":"YulExpressionStatement","src":"7877:12:34"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7850:7:34"},{"name":"headStart","nodeType":"YulIdentifier","src":"7859:9:34"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7846:3:34"},"nodeType":"YulFunctionCall","src":"7846:23:34"},{"kind":"number","nodeType":"YulLiteral","src":"7871:2:34","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7842:3:34"},"nodeType":"YulFunctionCall","src":"7842:32:34"},"nodeType":"YulIf","src":"7839:52:34"},{"nodeType":"YulVariableDeclaration","src":"7900:36:34","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7926:9:34"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7913:12:34"},"nodeType":"YulFunctionCall","src":"7913:23:34"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"7904:5:34","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7970:5:34"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"7945:24:34"},"nodeType":"YulFunctionCall","src":"7945:31:34"},"nodeType":"YulExpressionStatement","src":"7945:31:34"},{"nodeType":"YulAssignment","src":"7985:15:34","value":{"name":"value","nodeType":"YulIdentifier","src":"7995:5:34"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7985:6:34"}]},{"nodeType":"YulAssignment","src":"8009:42:34","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8036:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"8047:2:34","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8032:3:34"},"nodeType":"YulFunctionCall","src":"8032:18:34"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8019:12:34"},"nodeType":"YulFunctionCall","src":"8019:32:34"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"8009:6:34"}]},{"nodeType":"YulVariableDeclaration","src":"8060:46:34","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8091:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"8102:2:34","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8087:3:34"},"nodeType":"YulFunctionCall","src":"8087:18:34"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8074:12:34"},"nodeType":"YulFunctionCall","src":"8074:32:34"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8064:6:34","type":""}]},{"body":{"nodeType":"YulBlock","src":"8149:16:34","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8158:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8161:1:34","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8151:6:34"},"nodeType":"YulFunctionCall","src":"8151:12:34"},"nodeType":"YulExpressionStatement","src":"8151:12:34"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8121:6:34"},{"kind":"number","nodeType":"YulLiteral","src":"8129:18:34","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8118:2:34"},"nodeType":"YulFunctionCall","src":"8118:30:34"},"nodeType":"YulIf","src":"8115:50:34"},{"nodeType":"YulVariableDeclaration","src":"8174:84:34","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8230:9:34"},{"name":"offset","nodeType":"YulIdentifier","src":"8241:6:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8226:3:34"},"nodeType":"YulFunctionCall","src":"8226:22:34"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8250:7:34"}],"functionName":{"name":"abi_decode_bytes_calldata","nodeType":"YulIdentifier","src":"8200:25:34"},"nodeType":"YulFunctionCall","src":"8200:58:34"},"variables":[{"name":"value2_1","nodeType":"YulTypedName","src":"8178:8:34","type":""},{"name":"value3_1","nodeType":"YulTypedName","src":"8188:8:34","type":""}]},{"nodeType":"YulAssignment","src":"8267:18:34","value":{"name":"value2_1","nodeType":"YulIdentifier","src":"8277:8:34"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"8267:6:34"}]},{"nodeType":"YulAssignment","src":"8294:18:34","value":{"name":"value3_1","nodeType":"YulIdentifier","src":"8304:8:34"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"8294:6:34"}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7771:9:34","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7782:7:34","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7794:6:34","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7802:6:34","type":""},{"name":"value2","nodeType":"YulTypedName","src":"7810:6:34","type":""},{"name":"value3","nodeType":"YulTypedName","src":"7818:6:34","type":""}],"src":"7706:612:34"},{"body":{"nodeType":"YulBlock","src":"8550:1111:34","statements":[{"body":{"nodeType":"YulBlock","src":"8597:16:34","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8606:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8609:1:34","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8599:6:34"},"nodeType":"YulFunctionCall","src":"8599:12:34"},"nodeType":"YulExpressionStatement","src":"8599:12:34"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"8571:7:34"},{"name":"headStart","nodeType":"YulIdentifier","src":"8580:9:34"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8567:3:34"},"nodeType":"YulFunctionCall","src":"8567:23:34"},{"kind":"number","nodeType":"YulLiteral","src":"8592:3:34","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8563:3:34"},"nodeType":"YulFunctionCall","src":"8563:33:34"},"nodeType":"YulIf","src":"8560:53:34"},{"nodeType":"YulVariableDeclaration","src":"8622:36:34","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8648:9:34"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8635:12:34"},"nodeType":"YulFunctionCall","src":"8635:23:34"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"8626:5:34","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8692:5:34"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"8667:24:34"},"nodeType":"YulFunctionCall","src":"8667:31:34"},"nodeType":"YulExpressionStatement","src":"8667:31:34"},{"nodeType":"YulAssignment","src":"8707:15:34","value":{"name":"value","nodeType":"YulIdentifier","src":"8717:5:34"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"8707:6:34"}]},{"nodeType":"YulVariableDeclaration","src":"8731:47:34","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8763:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"8774:2:34","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8759:3:34"},"nodeType":"YulFunctionCall","src":"8759:18:34"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8746:12:34"},"nodeType":"YulFunctionCall","src":"8746:32:34"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"8735:7:34","type":""}]},{"expression":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"8812:7:34"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"8787:24:34"},"nodeType":"YulFunctionCall","src":"8787:33:34"},"nodeType":"YulExpressionStatement","src":"8787:33:34"},{"nodeType":"YulAssignment","src":"8829:17:34","value":{"name":"value_1","nodeType":"YulIdentifier","src":"8839:7:34"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"8829:6:34"}]},{"nodeType":"YulVariableDeclaration","src":"8855:46:34","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8886:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"8897:2:34","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8882:3:34"},"nodeType":"YulFunctionCall","src":"8882:18:34"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8869:12:34"},"nodeType":"YulFunctionCall","src":"8869:32:34"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8859:6:34","type":""}]},{"nodeType":"YulVariableDeclaration","src":"8910:28:34","value":{"kind":"number","nodeType":"YulLiteral","src":"8920:18:34","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"8914:2:34","type":""}]},{"body":{"nodeType":"YulBlock","src":"8965:16:34","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8974:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8977:1:34","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8967:6:34"},"nodeType":"YulFunctionCall","src":"8967:12:34"},"nodeType":"YulExpressionStatement","src":"8967:12:34"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8953:6:34"},{"name":"_1","nodeType":"YulIdentifier","src":"8961:2:34"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8950:2:34"},"nodeType":"YulFunctionCall","src":"8950:14:34"},"nodeType":"YulIf","src":"8947:34:34"},{"nodeType":"YulVariableDeclaration","src":"8990:96:34","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9058:9:34"},{"name":"offset","nodeType":"YulIdentifier","src":"9069:6:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9054:3:34"},"nodeType":"YulFunctionCall","src":"9054:22:34"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9078:7:34"}],"functionName":{"name":"abi_decode_array_address_dyn_calldata","nodeType":"YulIdentifier","src":"9016:37:34"},"nodeType":"YulFunctionCall","src":"9016:70:34"},"variables":[{"name":"value2_1","nodeType":"YulTypedName","src":"8994:8:34","type":""},{"name":"value3_1","nodeType":"YulTypedName","src":"9004:8:34","type":""}]},{"nodeType":"YulAssignment","src":"9095:18:34","value":{"name":"value2_1","nodeType":"YulIdentifier","src":"9105:8:34"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"9095:6:34"}]},{"nodeType":"YulAssignment","src":"9122:18:34","value":{"name":"value3_1","nodeType":"YulIdentifier","src":"9132:8:34"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"9122:6:34"}]},{"nodeType":"YulVariableDeclaration","src":"9149:48:34","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9182:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"9193:2:34","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9178:3:34"},"nodeType":"YulFunctionCall","src":"9178:18:34"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9165:12:34"},"nodeType":"YulFunctionCall","src":"9165:32:34"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"9153:8:34","type":""}]},{"body":{"nodeType":"YulBlock","src":"9226:16:34","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9235:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9238:1:34","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9228:6:34"},"nodeType":"YulFunctionCall","src":"9228:12:34"},"nodeType":"YulExpressionStatement","src":"9228:12:34"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"9212:8:34"},{"name":"_1","nodeType":"YulIdentifier","src":"9222:2:34"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9209:2:34"},"nodeType":"YulFunctionCall","src":"9209:16:34"},"nodeType":"YulIf","src":"9206:36:34"},{"nodeType":"YulVariableDeclaration","src":"9251:98:34","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9319:9:34"},{"name":"offset_1","nodeType":"YulIdentifier","src":"9330:8:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9315:3:34"},"nodeType":"YulFunctionCall","src":"9315:24:34"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9341:7:34"}],"functionName":{"name":"abi_decode_array_address_dyn_calldata","nodeType":"YulIdentifier","src":"9277:37:34"},"nodeType":"YulFunctionCall","src":"9277:72:34"},"variables":[{"name":"value4_1","nodeType":"YulTypedName","src":"9255:8:34","type":""},{"name":"value5_1","nodeType":"YulTypedName","src":"9265:8:34","type":""}]},{"nodeType":"YulAssignment","src":"9358:18:34","value":{"name":"value4_1","nodeType":"YulIdentifier","src":"9368:8:34"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"9358:6:34"}]},{"nodeType":"YulAssignment","src":"9385:18:34","value":{"name":"value5_1","nodeType":"YulIdentifier","src":"9395:8:34"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"9385:6:34"}]},{"nodeType":"YulVariableDeclaration","src":"9412:49:34","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9445:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"9456:3:34","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9441:3:34"},"nodeType":"YulFunctionCall","src":"9441:19:34"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9428:12:34"},"nodeType":"YulFunctionCall","src":"9428:33:34"},"variables":[{"name":"offset_2","nodeType":"YulTypedName","src":"9416:8:34","type":""}]},{"body":{"nodeType":"YulBlock","src":"9490:16:34","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9499:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9502:1:34","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9492:6:34"},"nodeType":"YulFunctionCall","src":"9492:12:34"},"nodeType":"YulExpressionStatement","src":"9492:12:34"}]},"condition":{"arguments":[{"name":"offset_2","nodeType":"YulIdentifier","src":"9476:8:34"},{"name":"_1","nodeType":"YulIdentifier","src":"9486:2:34"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9473:2:34"},"nodeType":"YulFunctionCall","src":"9473:16:34"},"nodeType":"YulIf","src":"9470:36:34"},{"nodeType":"YulVariableDeclaration","src":"9515:86:34","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9571:9:34"},{"name":"offset_2","nodeType":"YulIdentifier","src":"9582:8:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9567:3:34"},"nodeType":"YulFunctionCall","src":"9567:24:34"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9593:7:34"}],"functionName":{"name":"abi_decode_bytes_calldata","nodeType":"YulIdentifier","src":"9541:25:34"},"nodeType":"YulFunctionCall","src":"9541:60:34"},"variables":[{"name":"value6_1","nodeType":"YulTypedName","src":"9519:8:34","type":""},{"name":"value7_1","nodeType":"YulTypedName","src":"9529:8:34","type":""}]},{"nodeType":"YulAssignment","src":"9610:18:34","value":{"name":"value6_1","nodeType":"YulIdentifier","src":"9620:8:34"},"variableNames":[{"name":"value6","nodeType":"YulIdentifier","src":"9610:6:34"}]},{"nodeType":"YulAssignment","src":"9637:18:34","value":{"name":"value7_1","nodeType":"YulIdentifier","src":"9647:8:34"},"variableNames":[{"name":"value7","nodeType":"YulIdentifier","src":"9637:6:34"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptrt_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8460:9:34","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"8471:7:34","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"8483:6:34","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8491:6:34","type":""},{"name":"value2","nodeType":"YulTypedName","src":"8499:6:34","type":""},{"name":"value3","nodeType":"YulTypedName","src":"8507:6:34","type":""},{"name":"value4","nodeType":"YulTypedName","src":"8515:6:34","type":""},{"name":"value5","nodeType":"YulTypedName","src":"8523:6:34","type":""},{"name":"value6","nodeType":"YulTypedName","src":"8531:6:34","type":""},{"name":"value7","nodeType":"YulTypedName","src":"8539:6:34","type":""}],"src":"8323:1338:34"},{"body":{"nodeType":"YulBlock","src":"9823:666:34","statements":[{"body":{"nodeType":"YulBlock","src":"9870:16:34","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9879:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9882:1:34","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9872:6:34"},"nodeType":"YulFunctionCall","src":"9872:12:34"},"nodeType":"YulExpressionStatement","src":"9872:12:34"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"9844:7:34"},{"name":"headStart","nodeType":"YulIdentifier","src":"9853:9:34"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9840:3:34"},"nodeType":"YulFunctionCall","src":"9840:23:34"},{"kind":"number","nodeType":"YulLiteral","src":"9865:3:34","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9836:3:34"},"nodeType":"YulFunctionCall","src":"9836:33:34"},"nodeType":"YulIf","src":"9833:53:34"},{"nodeType":"YulVariableDeclaration","src":"9895:36:34","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9921:9:34"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9908:12:34"},"nodeType":"YulFunctionCall","src":"9908:23:34"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"9899:5:34","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9965:5:34"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"9940:24:34"},"nodeType":"YulFunctionCall","src":"9940:31:34"},"nodeType":"YulExpressionStatement","src":"9940:31:34"},{"nodeType":"YulAssignment","src":"9980:15:34","value":{"name":"value","nodeType":"YulIdentifier","src":"9990:5:34"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"9980:6:34"}]},{"nodeType":"YulVariableDeclaration","src":"10004:47:34","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10036:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"10047:2:34","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10032:3:34"},"nodeType":"YulFunctionCall","src":"10032:18:34"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10019:12:34"},"nodeType":"YulFunctionCall","src":"10019:32:34"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"10008:7:34","type":""}]},{"expression":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"10085:7:34"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"10060:24:34"},"nodeType":"YulFunctionCall","src":"10060:33:34"},"nodeType":"YulExpressionStatement","src":"10060:33:34"},{"nodeType":"YulAssignment","src":"10102:17:34","value":{"name":"value_1","nodeType":"YulIdentifier","src":"10112:7:34"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"10102:6:34"}]},{"nodeType":"YulAssignment","src":"10128:42:34","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10155:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"10166:2:34","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10151:3:34"},"nodeType":"YulFunctionCall","src":"10151:18:34"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10138:12:34"},"nodeType":"YulFunctionCall","src":"10138:32:34"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"10128:6:34"}]},{"nodeType":"YulAssignment","src":"10179:42:34","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10206:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"10217:2:34","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10202:3:34"},"nodeType":"YulFunctionCall","src":"10202:18:34"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10189:12:34"},"nodeType":"YulFunctionCall","src":"10189:32:34"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"10179:6:34"}]},{"nodeType":"YulVariableDeclaration","src":"10230:47:34","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10261:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"10272:3:34","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10257:3:34"},"nodeType":"YulFunctionCall","src":"10257:19:34"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10244:12:34"},"nodeType":"YulFunctionCall","src":"10244:33:34"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10234:6:34","type":""}]},{"body":{"nodeType":"YulBlock","src":"10320:16:34","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10329:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10332:1:34","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10322:6:34"},"nodeType":"YulFunctionCall","src":"10322:12:34"},"nodeType":"YulExpressionStatement","src":"10322:12:34"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"10292:6:34"},{"kind":"number","nodeType":"YulLiteral","src":"10300:18:34","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10289:2:34"},"nodeType":"YulFunctionCall","src":"10289:30:34"},"nodeType":"YulIf","src":"10286:50:34"},{"nodeType":"YulVariableDeclaration","src":"10345:84:34","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10401:9:34"},{"name":"offset","nodeType":"YulIdentifier","src":"10412:6:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10397:3:34"},"nodeType":"YulFunctionCall","src":"10397:22:34"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10421:7:34"}],"functionName":{"name":"abi_decode_bytes_calldata","nodeType":"YulIdentifier","src":"10371:25:34"},"nodeType":"YulFunctionCall","src":"10371:58:34"},"variables":[{"name":"value4_1","nodeType":"YulTypedName","src":"10349:8:34","type":""},{"name":"value5_1","nodeType":"YulTypedName","src":"10359:8:34","type":""}]},{"nodeType":"YulAssignment","src":"10438:18:34","value":{"name":"value4_1","nodeType":"YulIdentifier","src":"10448:8:34"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"10438:6:34"}]},{"nodeType":"YulAssignment","src":"10465:18:34","value":{"name":"value5_1","nodeType":"YulIdentifier","src":"10475:8:34"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"10465:6:34"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9749:9:34","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"9760:7:34","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"9772:6:34","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9780:6:34","type":""},{"name":"value2","nodeType":"YulTypedName","src":"9788:6:34","type":""},{"name":"value3","nodeType":"YulTypedName","src":"9796:6:34","type":""},{"name":"value4","nodeType":"YulTypedName","src":"9804:6:34","type":""},{"name":"value5","nodeType":"YulTypedName","src":"9812:6:34","type":""}],"src":"9666:823:34"},{"body":{"nodeType":"YulBlock","src":"10668:169:34","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10685:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"10696:2:34","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10678:6:34"},"nodeType":"YulFunctionCall","src":"10678:21:34"},"nodeType":"YulExpressionStatement","src":"10678:21:34"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10719:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"10730:2:34","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10715:3:34"},"nodeType":"YulFunctionCall","src":"10715:18:34"},{"kind":"number","nodeType":"YulLiteral","src":"10735:2:34","type":"","value":"19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10708:6:34"},"nodeType":"YulFunctionCall","src":"10708:30:34"},"nodeType":"YulExpressionStatement","src":"10708:30:34"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10758:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"10769:2:34","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10754:3:34"},"nodeType":"YulFunctionCall","src":"10754:18:34"},{"hexValue":"77726f6e67206172726179206c656e67746873","kind":"string","nodeType":"YulLiteral","src":"10774:21:34","type":"","value":"wrong array lengths"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10747:6:34"},"nodeType":"YulFunctionCall","src":"10747:49:34"},"nodeType":"YulExpressionStatement","src":"10747:49:34"},{"nodeType":"YulAssignment","src":"10805:26:34","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10817:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"10828:2:34","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10813:3:34"},"nodeType":"YulFunctionCall","src":"10813:18:34"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10805:4:34"}]}]},"name":"abi_encode_tuple_t_stringliteral_046f63b53432b31c38dcec6b5f05e3d65602d684f9163a89310aaaf94e08558e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10645:9:34","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10659:4:34","type":""}],"src":"10494:343:34"},{"body":{"nodeType":"YulBlock","src":"10874:152:34","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10891:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10894:77:34","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10884:6:34"},"nodeType":"YulFunctionCall","src":"10884:88:34"},"nodeType":"YulExpressionStatement","src":"10884:88:34"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10988:1:34","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"10991:4:34","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10981:6:34"},"nodeType":"YulFunctionCall","src":"10981:15:34"},"nodeType":"YulExpressionStatement","src":"10981:15:34"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11012:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11015:4:34","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11005:6:34"},"nodeType":"YulFunctionCall","src":"11005:15:34"},"nodeType":"YulExpressionStatement","src":"11005:15:34"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"10842:184:34"},{"body":{"nodeType":"YulBlock","src":"11125:486:34","statements":[{"nodeType":"YulVariableDeclaration","src":"11135:51:34","value":{"arguments":[{"name":"ptr_to_tail","nodeType":"YulIdentifier","src":"11174:11:34"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"11161:12:34"},"nodeType":"YulFunctionCall","src":"11161:25:34"},"variables":[{"name":"rel_offset_of_tail","nodeType":"YulTypedName","src":"11139:18:34","type":""}]},{"body":{"nodeType":"YulBlock","src":"11334:16:34","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11343:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11346:1:34","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11336:6:34"},"nodeType":"YulFunctionCall","src":"11336:12:34"},"nodeType":"YulExpressionStatement","src":"11336:12:34"}]},"condition":{"arguments":[{"arguments":[{"name":"rel_offset_of_tail","nodeType":"YulIdentifier","src":"11209:18:34"},{"arguments":[{"arguments":[{"arguments":[],"functionName":{"name":"calldatasize","nodeType":"YulIdentifier","src":"11237:12:34"},"nodeType":"YulFunctionCall","src":"11237:14:34"},{"name":"base_ref","nodeType":"YulIdentifier","src":"11253:8:34"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11233:3:34"},"nodeType":"YulFunctionCall","src":"11233:29:34"},{"kind":"number","nodeType":"YulLiteral","src":"11264:66:34","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11229:3:34"},"nodeType":"YulFunctionCall","src":"11229:102:34"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"11205:3:34"},"nodeType":"YulFunctionCall","src":"11205:127:34"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11198:6:34"},"nodeType":"YulFunctionCall","src":"11198:135:34"},"nodeType":"YulIf","src":"11195:155:34"},{"nodeType":"YulVariableDeclaration","src":"11359:47:34","value":{"arguments":[{"name":"base_ref","nodeType":"YulIdentifier","src":"11377:8:34"},{"name":"rel_offset_of_tail","nodeType":"YulIdentifier","src":"11387:18:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11373:3:34"},"nodeType":"YulFunctionCall","src":"11373:33:34"},"variables":[{"name":"addr_1","nodeType":"YulTypedName","src":"11363:6:34","type":""}]},{"nodeType":"YulAssignment","src":"11415:30:34","value":{"arguments":[{"name":"addr_1","nodeType":"YulIdentifier","src":"11438:6:34"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"11425:12:34"},"nodeType":"YulFunctionCall","src":"11425:20:34"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"11415:6:34"}]},{"body":{"nodeType":"YulBlock","src":"11488:16:34","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11497:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11500:1:34","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11490:6:34"},"nodeType":"YulFunctionCall","src":"11490:12:34"},"nodeType":"YulExpressionStatement","src":"11490:12:34"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"11460:6:34"},{"kind":"number","nodeType":"YulLiteral","src":"11468:18:34","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"11457:2:34"},"nodeType":"YulFunctionCall","src":"11457:30:34"},"nodeType":"YulIf","src":"11454:50:34"},{"nodeType":"YulAssignment","src":"11513:25:34","value":{"arguments":[{"name":"addr_1","nodeType":"YulIdentifier","src":"11525:6:34"},{"kind":"number","nodeType":"YulLiteral","src":"11533:4:34","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11521:3:34"},"nodeType":"YulFunctionCall","src":"11521:17:34"},"variableNames":[{"name":"addr","nodeType":"YulIdentifier","src":"11513:4:34"}]},{"body":{"nodeType":"YulBlock","src":"11589:16:34","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11598:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11601:1:34","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11591:6:34"},"nodeType":"YulFunctionCall","src":"11591:12:34"},"nodeType":"YulExpressionStatement","src":"11591:12:34"}]},"condition":{"arguments":[{"name":"addr","nodeType":"YulIdentifier","src":"11554:4:34"},{"arguments":[{"arguments":[],"functionName":{"name":"calldatasize","nodeType":"YulIdentifier","src":"11564:12:34"},"nodeType":"YulFunctionCall","src":"11564:14:34"},{"name":"length","nodeType":"YulIdentifier","src":"11580:6:34"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11560:3:34"},"nodeType":"YulFunctionCall","src":"11560:27:34"}],"functionName":{"name":"sgt","nodeType":"YulIdentifier","src":"11550:3:34"},"nodeType":"YulFunctionCall","src":"11550:38:34"},"nodeType":"YulIf","src":"11547:58:34"}]},"name":"access_calldata_tail_t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"base_ref","nodeType":"YulTypedName","src":"11082:8:34","type":""},{"name":"ptr_to_tail","nodeType":"YulTypedName","src":"11092:11:34","type":""}],"returnVariables":[{"name":"addr","nodeType":"YulTypedName","src":"11108:4:34","type":""},{"name":"length","nodeType":"YulTypedName","src":"11114:6:34","type":""}],"src":"11031:580:34"},{"body":{"nodeType":"YulBlock","src":"11663:302:34","statements":[{"body":{"nodeType":"YulBlock","src":"11762:168:34","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11783:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11786:77:34","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11776:6:34"},"nodeType":"YulFunctionCall","src":"11776:88:34"},"nodeType":"YulExpressionStatement","src":"11776:88:34"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11884:1:34","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"11887:4:34","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11877:6:34"},"nodeType":"YulFunctionCall","src":"11877:15:34"},"nodeType":"YulExpressionStatement","src":"11877:15:34"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11912:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11915:4:34","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11905:6:34"},"nodeType":"YulFunctionCall","src":"11905:15:34"},"nodeType":"YulExpressionStatement","src":"11905:15:34"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11679:5:34"},{"kind":"number","nodeType":"YulLiteral","src":"11686:66:34","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"11676:2:34"},"nodeType":"YulFunctionCall","src":"11676:77:34"},"nodeType":"YulIf","src":"11673:257:34"},{"nodeType":"YulAssignment","src":"11939:20:34","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11950:5:34"},{"kind":"number","nodeType":"YulLiteral","src":"11957:1:34","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11946:3:34"},"nodeType":"YulFunctionCall","src":"11946:13:34"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"11939:3:34"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11645:5:34","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"11655:3:34","type":""}],"src":"11616:349:34"},{"body":{"nodeType":"YulBlock","src":"12144:234:34","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12161:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"12172:2:34","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12154:6:34"},"nodeType":"YulFunctionCall","src":"12154:21:34"},"nodeType":"YulExpressionStatement","src":"12154:21:34"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12195:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"12206:2:34","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12191:3:34"},"nodeType":"YulFunctionCall","src":"12191:18:34"},{"kind":"number","nodeType":"YulLiteral","src":"12211:2:34","type":"","value":"44"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12184:6:34"},"nodeType":"YulFunctionCall","src":"12184:30:34"},"nodeType":"YulExpressionStatement","src":"12184:30:34"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12234:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"12245:2:34","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12230:3:34"},"nodeType":"YulFunctionCall","src":"12230:18:34"},{"hexValue":"46756e6374696f6e206d7573742062652063616c6c6564207468726f75676820","kind":"string","nodeType":"YulLiteral","src":"12250:34:34","type":"","value":"Function must be called through "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12223:6:34"},"nodeType":"YulFunctionCall","src":"12223:62:34"},"nodeType":"YulExpressionStatement","src":"12223:62:34"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12305:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"12316:2:34","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12301:3:34"},"nodeType":"YulFunctionCall","src":"12301:18:34"},{"hexValue":"64656c656761746563616c6c","kind":"string","nodeType":"YulLiteral","src":"12321:14:34","type":"","value":"delegatecall"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12294:6:34"},"nodeType":"YulFunctionCall","src":"12294:42:34"},"nodeType":"YulExpressionStatement","src":"12294:42:34"},{"nodeType":"YulAssignment","src":"12345:27:34","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12357:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"12368:3:34","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12353:3:34"},"nodeType":"YulFunctionCall","src":"12353:19:34"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12345:4:34"}]}]},"name":"abi_encode_tuple_t_stringliteral_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12121:9:34","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12135:4:34","type":""}],"src":"11970:408:34"},{"body":{"nodeType":"YulBlock","src":"12557:234:34","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12574:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"12585:2:34","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12567:6:34"},"nodeType":"YulFunctionCall","src":"12567:21:34"},"nodeType":"YulExpressionStatement","src":"12567:21:34"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12608:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"12619:2:34","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12604:3:34"},"nodeType":"YulFunctionCall","src":"12604:18:34"},{"kind":"number","nodeType":"YulLiteral","src":"12624:2:34","type":"","value":"44"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12597:6:34"},"nodeType":"YulFunctionCall","src":"12597:30:34"},"nodeType":"YulExpressionStatement","src":"12597:30:34"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12647:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"12658:2:34","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12643:3:34"},"nodeType":"YulFunctionCall","src":"12643:18:34"},{"hexValue":"46756e6374696f6e206d7573742062652063616c6c6564207468726f75676820","kind":"string","nodeType":"YulLiteral","src":"12663:34:34","type":"","value":"Function must be called through "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12636:6:34"},"nodeType":"YulFunctionCall","src":"12636:62:34"},"nodeType":"YulExpressionStatement","src":"12636:62:34"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12718:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"12729:2:34","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12714:3:34"},"nodeType":"YulFunctionCall","src":"12714:18:34"},{"hexValue":"6163746976652070726f7879","kind":"string","nodeType":"YulLiteral","src":"12734:14:34","type":"","value":"active proxy"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12707:6:34"},"nodeType":"YulFunctionCall","src":"12707:42:34"},"nodeType":"YulExpressionStatement","src":"12707:42:34"},{"nodeType":"YulAssignment","src":"12758:27:34","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12770:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"12781:3:34","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12766:3:34"},"nodeType":"YulFunctionCall","src":"12766:19:34"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12758:4:34"}]}]},"name":"abi_encode_tuple_t_stringliteral_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12534:9:34","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12548:4:34","type":""}],"src":"12383:408:34"},{"body":{"nodeType":"YulBlock","src":"12941:168:34","statements":[{"nodeType":"YulAssignment","src":"12951:26:34","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12963:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"12974:2:34","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12959:3:34"},"nodeType":"YulFunctionCall","src":"12959:18:34"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12951:4:34"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12993:9:34"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"13008:6:34"},{"kind":"number","nodeType":"YulLiteral","src":"13016:42:34","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"13004:3:34"},"nodeType":"YulFunctionCall","src":"13004:55:34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12986:6:34"},"nodeType":"YulFunctionCall","src":"12986:74:34"},"nodeType":"YulExpressionStatement","src":"12986:74:34"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13080:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"13091:2:34","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13076:3:34"},"nodeType":"YulFunctionCall","src":"13076:18:34"},{"name":"value1","nodeType":"YulIdentifier","src":"13096:6:34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13069:6:34"},"nodeType":"YulFunctionCall","src":"13069:34:34"},"nodeType":"YulExpressionStatement","src":"13069:34:34"}]},"name":"abi_encode_tuple_t_address_payable_t_uint256__to_t_address_payable_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12902:9:34","type":""},{"name":"value1","nodeType":"YulTypedName","src":"12913:6:34","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12921:6:34","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12932:4:34","type":""}],"src":"12796:313:34"},{"body":{"nodeType":"YulBlock","src":"13288:246:34","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13305:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"13316:2:34","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13298:6:34"},"nodeType":"YulFunctionCall","src":"13298:21:34"},"nodeType":"YulExpressionStatement","src":"13298:21:34"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13339:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"13350:2:34","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13335:3:34"},"nodeType":"YulFunctionCall","src":"13335:18:34"},{"kind":"number","nodeType":"YulLiteral","src":"13355:2:34","type":"","value":"56"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13328:6:34"},"nodeType":"YulFunctionCall","src":"13328:30:34"},"nodeType":"YulExpressionStatement","src":"13328:30:34"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13378:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"13389:2:34","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13374:3:34"},"nodeType":"YulFunctionCall","src":"13374:18:34"},{"hexValue":"555550535570677261646561626c653a206d757374206e6f742062652063616c","kind":"string","nodeType":"YulLiteral","src":"13394:34:34","type":"","value":"UUPSUpgradeable: must not be cal"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13367:6:34"},"nodeType":"YulFunctionCall","src":"13367:62:34"},"nodeType":"YulExpressionStatement","src":"13367:62:34"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13449:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"13460:2:34","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13445:3:34"},"nodeType":"YulFunctionCall","src":"13445:18:34"},{"hexValue":"6c6564207468726f7567682064656c656761746563616c6c","kind":"string","nodeType":"YulLiteral","src":"13465:26:34","type":"","value":"led through delegatecall"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13438:6:34"},"nodeType":"YulFunctionCall","src":"13438:54:34"},"nodeType":"YulExpressionStatement","src":"13438:54:34"},{"nodeType":"YulAssignment","src":"13501:27:34","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13513:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"13524:3:34","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13509:3:34"},"nodeType":"YulFunctionCall","src":"13509:19:34"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13501:4:34"}]}]},"name":"abi_encode_tuple_t_stringliteral_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13265:9:34","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13279:4:34","type":""}],"src":"13114:420:34"},{"body":{"nodeType":"YulBlock","src":"13620:103:34","statements":[{"body":{"nodeType":"YulBlock","src":"13666:16:34","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13675:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13678:1:34","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13668:6:34"},"nodeType":"YulFunctionCall","src":"13668:12:34"},"nodeType":"YulExpressionStatement","src":"13668:12:34"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"13641:7:34"},{"name":"headStart","nodeType":"YulIdentifier","src":"13650:9:34"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13637:3:34"},"nodeType":"YulFunctionCall","src":"13637:23:34"},{"kind":"number","nodeType":"YulLiteral","src":"13662:2:34","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"13633:3:34"},"nodeType":"YulFunctionCall","src":"13633:32:34"},"nodeType":"YulIf","src":"13630:52:34"},{"nodeType":"YulAssignment","src":"13691:26:34","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13707:9:34"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13701:5:34"},"nodeType":"YulFunctionCall","src":"13701:16:34"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"13691:6:34"}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13586:9:34","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"13597:7:34","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"13609:6:34","type":""}],"src":"13539:184:34"},{"body":{"nodeType":"YulBlock","src":"13902:236:34","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13919:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"13930:2:34","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13912:6:34"},"nodeType":"YulFunctionCall","src":"13912:21:34"},"nodeType":"YulExpressionStatement","src":"13912:21:34"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13953:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"13964:2:34","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13949:3:34"},"nodeType":"YulFunctionCall","src":"13949:18:34"},{"kind":"number","nodeType":"YulLiteral","src":"13969:2:34","type":"","value":"46"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13942:6:34"},"nodeType":"YulFunctionCall","src":"13942:30:34"},"nodeType":"YulExpressionStatement","src":"13942:30:34"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13992:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"14003:2:34","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13988:3:34"},"nodeType":"YulFunctionCall","src":"13988:18:34"},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320616c726561","kind":"string","nodeType":"YulLiteral","src":"14008:34:34","type":"","value":"Initializable: contract is alrea"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13981:6:34"},"nodeType":"YulFunctionCall","src":"13981:62:34"},"nodeType":"YulExpressionStatement","src":"13981:62:34"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14063:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"14074:2:34","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14059:3:34"},"nodeType":"YulFunctionCall","src":"14059:18:34"},{"hexValue":"647920696e697469616c697a6564","kind":"string","nodeType":"YulLiteral","src":"14079:16:34","type":"","value":"dy initialized"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14052:6:34"},"nodeType":"YulFunctionCall","src":"14052:44:34"},"nodeType":"YulExpressionStatement","src":"14052:44:34"},{"nodeType":"YulAssignment","src":"14105:27:34","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14117:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"14128:3:34","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14113:3:34"},"nodeType":"YulFunctionCall","src":"14113:19:34"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14105:4:34"}]}]},"name":"abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13879:9:34","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13893:4:34","type":""}],"src":"13728:410:34"},{"body":{"nodeType":"YulBlock","src":"14250:87:34","statements":[{"nodeType":"YulAssignment","src":"14260:26:34","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14272:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"14283:2:34","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14268:3:34"},"nodeType":"YulFunctionCall","src":"14268:18:34"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14260:4:34"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14302:9:34"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"14317:6:34"},{"kind":"number","nodeType":"YulLiteral","src":"14325:4:34","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"14313:3:34"},"nodeType":"YulFunctionCall","src":"14313:17:34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14295:6:34"},"nodeType":"YulFunctionCall","src":"14295:36:34"},"nodeType":"YulExpressionStatement","src":"14295:36:34"}]},"name":"abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14219:9:34","type":""},{"name":"value0","nodeType":"YulTypedName","src":"14230:6:34","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14241:4:34","type":""}],"src":"14143:194:34"},{"body":{"nodeType":"YulBlock","src":"14479:225:34","statements":[{"nodeType":"YulAssignment","src":"14489:26:34","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14501:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"14512:2:34","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14497:3:34"},"nodeType":"YulFunctionCall","src":"14497:18:34"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14489:4:34"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14531:9:34"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"14546:6:34"},{"kind":"number","nodeType":"YulLiteral","src":"14554:42:34","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"14542:3:34"},"nodeType":"YulFunctionCall","src":"14542:55:34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14524:6:34"},"nodeType":"YulFunctionCall","src":"14524:74:34"},"nodeType":"YulExpressionStatement","src":"14524:74:34"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14618:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"14629:2:34","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14614:3:34"},"nodeType":"YulFunctionCall","src":"14614:18:34"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"14638:6:34"},{"kind":"number","nodeType":"YulLiteral","src":"14646:50:34","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"14634:3:34"},"nodeType":"YulFunctionCall","src":"14634:63:34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14607:6:34"},"nodeType":"YulFunctionCall","src":"14607:91:34"},"nodeType":"YulExpressionStatement","src":"14607:91:34"}]},"name":"abi_encode_tuple_t_address_t_rational_0_by_1__to_t_address_t_uint192__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14440:9:34","type":""},{"name":"value1","nodeType":"YulTypedName","src":"14451:6:34","type":""},{"name":"value0","nodeType":"YulTypedName","src":"14459:6:34","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14470:4:34","type":""}],"src":"14342:362:34"},{"body":{"nodeType":"YulBlock","src":"14883:182:34","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14900:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"14911:2:34","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14893:6:34"},"nodeType":"YulFunctionCall","src":"14893:21:34"},"nodeType":"YulExpressionStatement","src":"14893:21:34"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14934:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"14945:2:34","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14930:3:34"},"nodeType":"YulFunctionCall","src":"14930:18:34"},{"kind":"number","nodeType":"YulLiteral","src":"14950:2:34","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14923:6:34"},"nodeType":"YulFunctionCall","src":"14923:30:34"},"nodeType":"YulExpressionStatement","src":"14923:30:34"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14973:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"14984:2:34","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14969:3:34"},"nodeType":"YulFunctionCall","src":"14969:18:34"},{"hexValue":"6163636f756e743a206e6f74204f776e6572206f7220456e747279506f696e74","kind":"string","nodeType":"YulLiteral","src":"14989:34:34","type":"","value":"account: not Owner or EntryPoint"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14962:6:34"},"nodeType":"YulFunctionCall","src":"14962:62:34"},"nodeType":"YulExpressionStatement","src":"14962:62:34"},{"nodeType":"YulAssignment","src":"15033:26:34","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15045:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"15056:2:34","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15041:3:34"},"nodeType":"YulFunctionCall","src":"15041:18:34"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15033:4:34"}]}]},"name":"abi_encode_tuple_t_stringliteral_26bf1d2fa883929ce8db7f4593c3a7f27ec5e761d3beb6ef3a9db5c68fe51d21__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14860:9:34","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14874:4:34","type":""}],"src":"14709:356:34"},{"body":{"nodeType":"YulBlock","src":"15136:184:34","statements":[{"nodeType":"YulVariableDeclaration","src":"15146:10:34","value":{"kind":"number","nodeType":"YulLiteral","src":"15155:1:34","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"15150:1:34","type":""}]},{"body":{"nodeType":"YulBlock","src":"15215:63:34","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"15240:3:34"},{"name":"i","nodeType":"YulIdentifier","src":"15245:1:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15236:3:34"},"nodeType":"YulFunctionCall","src":"15236:11:34"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"15259:3:34"},{"name":"i","nodeType":"YulIdentifier","src":"15264:1:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15255:3:34"},"nodeType":"YulFunctionCall","src":"15255:11:34"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15249:5:34"},"nodeType":"YulFunctionCall","src":"15249:18:34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15229:6:34"},"nodeType":"YulFunctionCall","src":"15229:39:34"},"nodeType":"YulExpressionStatement","src":"15229:39:34"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"15176:1:34"},{"name":"length","nodeType":"YulIdentifier","src":"15179:6:34"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"15173:2:34"},"nodeType":"YulFunctionCall","src":"15173:13:34"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"15187:19:34","statements":[{"nodeType":"YulAssignment","src":"15189:15:34","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"15198:1:34"},{"kind":"number","nodeType":"YulLiteral","src":"15201:2:34","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15194:3:34"},"nodeType":"YulFunctionCall","src":"15194:10:34"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"15189:1:34"}]}]},"pre":{"nodeType":"YulBlock","src":"15169:3:34","statements":[]},"src":"15165:113:34"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"15298:3:34"},{"name":"length","nodeType":"YulIdentifier","src":"15303:6:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15294:3:34"},"nodeType":"YulFunctionCall","src":"15294:16:34"},{"kind":"number","nodeType":"YulLiteral","src":"15312:1:34","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15287:6:34"},"nodeType":"YulFunctionCall","src":"15287:27:34"},"nodeType":"YulExpressionStatement","src":"15287:27:34"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"15114:3:34","type":""},{"name":"dst","nodeType":"YulTypedName","src":"15119:3:34","type":""},{"name":"length","nodeType":"YulTypedName","src":"15124:6:34","type":""}],"src":"15070:250:34"},{"body":{"nodeType":"YulBlock","src":"15462:150:34","statements":[{"nodeType":"YulVariableDeclaration","src":"15472:27:34","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"15492:6:34"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15486:5:34"},"nodeType":"YulFunctionCall","src":"15486:13:34"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"15476:6:34","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"15547:6:34"},{"kind":"number","nodeType":"YulLiteral","src":"15555:4:34","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15543:3:34"},"nodeType":"YulFunctionCall","src":"15543:17:34"},{"name":"pos","nodeType":"YulIdentifier","src":"15562:3:34"},{"name":"length","nodeType":"YulIdentifier","src":"15567:6:34"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"15508:34:34"},"nodeType":"YulFunctionCall","src":"15508:66:34"},"nodeType":"YulExpressionStatement","src":"15508:66:34"},{"nodeType":"YulAssignment","src":"15583:23:34","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15594:3:34"},{"name":"length","nodeType":"YulIdentifier","src":"15599:6:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15590:3:34"},"nodeType":"YulFunctionCall","src":"15590:16:34"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"15583:3:34"}]}]},"name":"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"15438:3:34","type":""},{"name":"value0","nodeType":"YulTypedName","src":"15443:6:34","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"15454:3:34","type":""}],"src":"15325:287:34"},{"body":{"nodeType":"YulBlock","src":"15698:103:34","statements":[{"body":{"nodeType":"YulBlock","src":"15744:16:34","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15753:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15756:1:34","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"15746:6:34"},"nodeType":"YulFunctionCall","src":"15746:12:34"},"nodeType":"YulExpressionStatement","src":"15746:12:34"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"15719:7:34"},{"name":"headStart","nodeType":"YulIdentifier","src":"15728:9:34"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15715:3:34"},"nodeType":"YulFunctionCall","src":"15715:23:34"},{"kind":"number","nodeType":"YulLiteral","src":"15740:2:34","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"15711:3:34"},"nodeType":"YulFunctionCall","src":"15711:32:34"},"nodeType":"YulIf","src":"15708:52:34"},{"nodeType":"YulAssignment","src":"15769:26:34","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15785:9:34"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15779:5:34"},"nodeType":"YulFunctionCall","src":"15779:16:34"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"15769:6:34"}]}]},"name":"abi_decode_tuple_t_bytes32_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15664:9:34","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"15675:7:34","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"15687:6:34","type":""}],"src":"15617:184:34"},{"body":{"nodeType":"YulBlock","src":"15980:236:34","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15997:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"16008:2:34","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15990:6:34"},"nodeType":"YulFunctionCall","src":"15990:21:34"},"nodeType":"YulExpressionStatement","src":"15990:21:34"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16031:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"16042:2:34","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16027:3:34"},"nodeType":"YulFunctionCall","src":"16027:18:34"},{"kind":"number","nodeType":"YulLiteral","src":"16047:2:34","type":"","value":"46"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16020:6:34"},"nodeType":"YulFunctionCall","src":"16020:30:34"},"nodeType":"YulExpressionStatement","src":"16020:30:34"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16070:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"16081:2:34","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16066:3:34"},"nodeType":"YulFunctionCall","src":"16066:18:34"},{"hexValue":"45524331393637557067726164653a206e657720696d706c656d656e74617469","kind":"string","nodeType":"YulLiteral","src":"16086:34:34","type":"","value":"ERC1967Upgrade: new implementati"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16059:6:34"},"nodeType":"YulFunctionCall","src":"16059:62:34"},"nodeType":"YulExpressionStatement","src":"16059:62:34"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16141:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"16152:2:34","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16137:3:34"},"nodeType":"YulFunctionCall","src":"16137:18:34"},{"hexValue":"6f6e206973206e6f742055555053","kind":"string","nodeType":"YulLiteral","src":"16157:16:34","type":"","value":"on is not UUPS"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16130:6:34"},"nodeType":"YulFunctionCall","src":"16130:44:34"},"nodeType":"YulExpressionStatement","src":"16130:44:34"},{"nodeType":"YulAssignment","src":"16183:27:34","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16195:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"16206:3:34","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16191:3:34"},"nodeType":"YulFunctionCall","src":"16191:19:34"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16183:4:34"}]}]},"name":"abi_encode_tuple_t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15957:9:34","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15971:4:34","type":""}],"src":"15806:410:34"},{"body":{"nodeType":"YulBlock","src":"16395:231:34","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16412:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"16423:2:34","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16405:6:34"},"nodeType":"YulFunctionCall","src":"16405:21:34"},"nodeType":"YulExpressionStatement","src":"16405:21:34"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16446:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"16457:2:34","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16442:3:34"},"nodeType":"YulFunctionCall","src":"16442:18:34"},{"kind":"number","nodeType":"YulLiteral","src":"16462:2:34","type":"","value":"41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16435:6:34"},"nodeType":"YulFunctionCall","src":"16435:30:34"},"nodeType":"YulExpressionStatement","src":"16435:30:34"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16485:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"16496:2:34","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16481:3:34"},"nodeType":"YulFunctionCall","src":"16481:18:34"},{"hexValue":"45524331393637557067726164653a20756e737570706f727465642070726f78","kind":"string","nodeType":"YulLiteral","src":"16501:34:34","type":"","value":"ERC1967Upgrade: unsupported prox"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16474:6:34"},"nodeType":"YulFunctionCall","src":"16474:62:34"},"nodeType":"YulExpressionStatement","src":"16474:62:34"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16556:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"16567:2:34","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16552:3:34"},"nodeType":"YulFunctionCall","src":"16552:18:34"},{"hexValue":"6961626c6555554944","kind":"string","nodeType":"YulLiteral","src":"16572:11:34","type":"","value":"iableUUID"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16545:6:34"},"nodeType":"YulFunctionCall","src":"16545:39:34"},"nodeType":"YulExpressionStatement","src":"16545:39:34"},{"nodeType":"YulAssignment","src":"16593:27:34","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16605:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"16616:3:34","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16601:3:34"},"nodeType":"YulFunctionCall","src":"16601:19:34"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16593:4:34"}]}]},"name":"abi_encode_tuple_t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16372:9:34","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16386:4:34","type":""}],"src":"16221:405:34"},{"body":{"nodeType":"YulBlock","src":"16805:178:34","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16822:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"16833:2:34","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16815:6:34"},"nodeType":"YulFunctionCall","src":"16815:21:34"},"nodeType":"YulExpressionStatement","src":"16815:21:34"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16856:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"16867:2:34","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16852:3:34"},"nodeType":"YulFunctionCall","src":"16852:18:34"},{"kind":"number","nodeType":"YulLiteral","src":"16872:2:34","type":"","value":"28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16845:6:34"},"nodeType":"YulFunctionCall","src":"16845:30:34"},"nodeType":"YulExpressionStatement","src":"16845:30:34"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16895:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"16906:2:34","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16891:3:34"},"nodeType":"YulFunctionCall","src":"16891:18:34"},{"hexValue":"6163636f756e743a206e6f742066726f6d20456e747279506f696e74","kind":"string","nodeType":"YulLiteral","src":"16911:30:34","type":"","value":"account: not from EntryPoint"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16884:6:34"},"nodeType":"YulFunctionCall","src":"16884:58:34"},"nodeType":"YulExpressionStatement","src":"16884:58:34"},{"nodeType":"YulAssignment","src":"16951:26:34","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16963:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"16974:2:34","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16959:3:34"},"nodeType":"YulFunctionCall","src":"16959:18:34"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16951:4:34"}]}]},"name":"abi_encode_tuple_t_stringliteral_f684c2c0c9ec797849b62669189fe025e9077c00ba7812987ce38c0071ad7a50__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16782:9:34","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16796:4:34","type":""}],"src":"16631:352:34"},{"body":{"nodeType":"YulBlock","src":"17179:14:34","statements":[{"nodeType":"YulAssignment","src":"17181:10:34","value":{"name":"pos","nodeType":"YulIdentifier","src":"17188:3:34"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"17181:3:34"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"17163:3:34","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"17171:3:34","type":""}],"src":"16988:205:34"},{"body":{"nodeType":"YulBlock","src":"17372:160:34","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17389:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"17400:2:34","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17382:6:34"},"nodeType":"YulFunctionCall","src":"17382:21:34"},"nodeType":"YulExpressionStatement","src":"17382:21:34"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17423:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"17434:2:34","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17419:3:34"},"nodeType":"YulFunctionCall","src":"17419:18:34"},{"kind":"number","nodeType":"YulLiteral","src":"17439:2:34","type":"","value":"10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17412:6:34"},"nodeType":"YulFunctionCall","src":"17412:30:34"},"nodeType":"YulExpressionStatement","src":"17412:30:34"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17462:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"17473:2:34","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17458:3:34"},"nodeType":"YulFunctionCall","src":"17458:18:34"},{"hexValue":"6f6e6c79206f776e6572","kind":"string","nodeType":"YulLiteral","src":"17478:12:34","type":"","value":"only owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17451:6:34"},"nodeType":"YulFunctionCall","src":"17451:40:34"},"nodeType":"YulExpressionStatement","src":"17451:40:34"},{"nodeType":"YulAssignment","src":"17500:26:34","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17512:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"17523:2:34","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17508:3:34"},"nodeType":"YulFunctionCall","src":"17508:18:34"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17500:4:34"}]}]},"name":"abi_encode_tuple_t_stringliteral_ae2932905fc5bb055d2e7b29311075afd0dbf688106cf649cb515d342f4c7367__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17349:9:34","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17363:4:34","type":""}],"src":"17198:334:34"},{"body":{"nodeType":"YulBlock","src":"17711:235:34","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17728:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"17739:2:34","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17721:6:34"},"nodeType":"YulFunctionCall","src":"17721:21:34"},"nodeType":"YulExpressionStatement","src":"17721:21:34"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17762:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"17773:2:34","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17758:3:34"},"nodeType":"YulFunctionCall","src":"17758:18:34"},{"kind":"number","nodeType":"YulLiteral","src":"17778:2:34","type":"","value":"45"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17751:6:34"},"nodeType":"YulFunctionCall","src":"17751:30:34"},"nodeType":"YulExpressionStatement","src":"17751:30:34"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17801:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"17812:2:34","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17797:3:34"},"nodeType":"YulFunctionCall","src":"17797:18:34"},{"hexValue":"455243313936373a206e657720696d706c656d656e746174696f6e206973206e","kind":"string","nodeType":"YulLiteral","src":"17817:34:34","type":"","value":"ERC1967: new implementation is n"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17790:6:34"},"nodeType":"YulFunctionCall","src":"17790:62:34"},"nodeType":"YulExpressionStatement","src":"17790:62:34"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17872:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"17883:2:34","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17868:3:34"},"nodeType":"YulFunctionCall","src":"17868:18:34"},{"hexValue":"6f74206120636f6e7472616374","kind":"string","nodeType":"YulLiteral","src":"17888:15:34","type":"","value":"ot a contract"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17861:6:34"},"nodeType":"YulFunctionCall","src":"17861:43:34"},"nodeType":"YulExpressionStatement","src":"17861:43:34"},{"nodeType":"YulAssignment","src":"17913:27:34","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17925:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"17936:3:34","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17921:3:34"},"nodeType":"YulFunctionCall","src":"17921:19:34"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17913:4:34"}]}]},"name":"abi_encode_tuple_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17688:9:34","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17702:4:34","type":""}],"src":"17537:409:34"},{"body":{"nodeType":"YulBlock","src":"17983:152:34","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18000:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"18003:77:34","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17993:6:34"},"nodeType":"YulFunctionCall","src":"17993:88:34"},"nodeType":"YulExpressionStatement","src":"17993:88:34"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18097:1:34","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"18100:4:34","type":"","value":"0x21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18090:6:34"},"nodeType":"YulFunctionCall","src":"18090:15:34"},"nodeType":"YulExpressionStatement","src":"18090:15:34"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18121:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"18124:4:34","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"18114:6:34"},"nodeType":"YulFunctionCall","src":"18114:15:34"},"nodeType":"YulExpressionStatement","src":"18114:15:34"}]},"name":"panic_error_0x21","nodeType":"YulFunctionDefinition","src":"17951:184:34"},{"body":{"nodeType":"YulBlock","src":"18314:174:34","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18331:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"18342:2:34","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18324:6:34"},"nodeType":"YulFunctionCall","src":"18324:21:34"},"nodeType":"YulExpressionStatement","src":"18324:21:34"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18365:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"18376:2:34","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18361:3:34"},"nodeType":"YulFunctionCall","src":"18361:18:34"},{"kind":"number","nodeType":"YulLiteral","src":"18381:2:34","type":"","value":"24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18354:6:34"},"nodeType":"YulFunctionCall","src":"18354:30:34"},"nodeType":"YulExpressionStatement","src":"18354:30:34"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18404:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"18415:2:34","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18400:3:34"},"nodeType":"YulFunctionCall","src":"18400:18:34"},{"hexValue":"45434453413a20696e76616c6964207369676e6174757265","kind":"string","nodeType":"YulLiteral","src":"18420:26:34","type":"","value":"ECDSA: invalid signature"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18393:6:34"},"nodeType":"YulFunctionCall","src":"18393:54:34"},"nodeType":"YulExpressionStatement","src":"18393:54:34"},{"nodeType":"YulAssignment","src":"18456:26:34","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18468:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"18479:2:34","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18464:3:34"},"nodeType":"YulFunctionCall","src":"18464:18:34"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18456:4:34"}]}]},"name":"abi_encode_tuple_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18291:9:34","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18305:4:34","type":""}],"src":"18140:348:34"},{"body":{"nodeType":"YulBlock","src":"18667:181:34","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18684:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"18695:2:34","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18677:6:34"},"nodeType":"YulFunctionCall","src":"18677:21:34"},"nodeType":"YulExpressionStatement","src":"18677:21:34"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18718:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"18729:2:34","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18714:3:34"},"nodeType":"YulFunctionCall","src":"18714:18:34"},{"kind":"number","nodeType":"YulLiteral","src":"18734:2:34","type":"","value":"31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18707:6:34"},"nodeType":"YulFunctionCall","src":"18707:30:34"},"nodeType":"YulExpressionStatement","src":"18707:30:34"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18757:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"18768:2:34","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18753:3:34"},"nodeType":"YulFunctionCall","src":"18753:18:34"},{"hexValue":"45434453413a20696e76616c6964207369676e6174757265206c656e677468","kind":"string","nodeType":"YulLiteral","src":"18773:33:34","type":"","value":"ECDSA: invalid signature length"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18746:6:34"},"nodeType":"YulFunctionCall","src":"18746:61:34"},"nodeType":"YulExpressionStatement","src":"18746:61:34"},{"nodeType":"YulAssignment","src":"18816:26:34","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18828:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"18839:2:34","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18824:3:34"},"nodeType":"YulFunctionCall","src":"18824:18:34"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18816:4:34"}]}]},"name":"abi_encode_tuple_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18644:9:34","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18658:4:34","type":""}],"src":"18493:355:34"},{"body":{"nodeType":"YulBlock","src":"19027:224:34","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19044:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"19055:2:34","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19037:6:34"},"nodeType":"YulFunctionCall","src":"19037:21:34"},"nodeType":"YulExpressionStatement","src":"19037:21:34"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19078:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"19089:2:34","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19074:3:34"},"nodeType":"YulFunctionCall","src":"19074:18:34"},{"kind":"number","nodeType":"YulLiteral","src":"19094:2:34","type":"","value":"34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19067:6:34"},"nodeType":"YulFunctionCall","src":"19067:30:34"},"nodeType":"YulExpressionStatement","src":"19067:30:34"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19117:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"19128:2:34","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19113:3:34"},"nodeType":"YulFunctionCall","src":"19113:18:34"},{"hexValue":"45434453413a20696e76616c6964207369676e6174757265202773272076616c","kind":"string","nodeType":"YulLiteral","src":"19133:34:34","type":"","value":"ECDSA: invalid signature 's' val"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19106:6:34"},"nodeType":"YulFunctionCall","src":"19106:62:34"},"nodeType":"YulExpressionStatement","src":"19106:62:34"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19188:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"19199:2:34","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19184:3:34"},"nodeType":"YulFunctionCall","src":"19184:18:34"},{"hexValue":"7565","kind":"string","nodeType":"YulLiteral","src":"19204:4:34","type":"","value":"ue"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19177:6:34"},"nodeType":"YulFunctionCall","src":"19177:32:34"},"nodeType":"YulExpressionStatement","src":"19177:32:34"},{"nodeType":"YulAssignment","src":"19218:27:34","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19230:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"19241:3:34","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19226:3:34"},"nodeType":"YulFunctionCall","src":"19226:19:34"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19218:4:34"}]}]},"name":"abi_encode_tuple_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19004:9:34","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19018:4:34","type":""}],"src":"18853:398:34"},{"body":{"nodeType":"YulBlock","src":"19437:217:34","statements":[{"nodeType":"YulAssignment","src":"19447:27:34","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19459:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"19470:3:34","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19455:3:34"},"nodeType":"YulFunctionCall","src":"19455:19:34"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19447:4:34"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19490:9:34"},{"name":"value0","nodeType":"YulIdentifier","src":"19501:6:34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19483:6:34"},"nodeType":"YulFunctionCall","src":"19483:25:34"},"nodeType":"YulExpressionStatement","src":"19483:25:34"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19528:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"19539:2:34","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19524:3:34"},"nodeType":"YulFunctionCall","src":"19524:18:34"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"19548:6:34"},{"kind":"number","nodeType":"YulLiteral","src":"19556:4:34","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"19544:3:34"},"nodeType":"YulFunctionCall","src":"19544:17:34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19517:6:34"},"nodeType":"YulFunctionCall","src":"19517:45:34"},"nodeType":"YulExpressionStatement","src":"19517:45:34"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19582:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"19593:2:34","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19578:3:34"},"nodeType":"YulFunctionCall","src":"19578:18:34"},{"name":"value2","nodeType":"YulIdentifier","src":"19598:6:34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19571:6:34"},"nodeType":"YulFunctionCall","src":"19571:34:34"},"nodeType":"YulExpressionStatement","src":"19571:34:34"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19625:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"19636:2:34","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19621:3:34"},"nodeType":"YulFunctionCall","src":"19621:18:34"},{"name":"value3","nodeType":"YulIdentifier","src":"19641:6:34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19614:6:34"},"nodeType":"YulFunctionCall","src":"19614:34:34"},"nodeType":"YulExpressionStatement","src":"19614:34:34"}]},"name":"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19382:9:34","type":""},{"name":"value3","nodeType":"YulTypedName","src":"19393:6:34","type":""},{"name":"value2","nodeType":"YulTypedName","src":"19401:6:34","type":""},{"name":"value1","nodeType":"YulTypedName","src":"19409:6:34","type":""},{"name":"value0","nodeType":"YulTypedName","src":"19417:6:34","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19428:4:34","type":""}],"src":"19256:398:34"},{"body":{"nodeType":"YulBlock","src":"19833:179:34","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19850:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"19861:2:34","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19843:6:34"},"nodeType":"YulFunctionCall","src":"19843:21:34"},"nodeType":"YulExpressionStatement","src":"19843:21:34"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19884:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"19895:2:34","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19880:3:34"},"nodeType":"YulFunctionCall","src":"19880:18:34"},{"kind":"number","nodeType":"YulLiteral","src":"19900:2:34","type":"","value":"29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19873:6:34"},"nodeType":"YulFunctionCall","src":"19873:30:34"},"nodeType":"YulExpressionStatement","src":"19873:30:34"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19923:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"19934:2:34","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19919:3:34"},"nodeType":"YulFunctionCall","src":"19919:18:34"},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","kind":"string","nodeType":"YulLiteral","src":"19939:31:34","type":"","value":"Address: call to non-contract"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19912:6:34"},"nodeType":"YulFunctionCall","src":"19912:59:34"},"nodeType":"YulExpressionStatement","src":"19912:59:34"},{"nodeType":"YulAssignment","src":"19980:26:34","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19992:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"20003:2:34","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19988:3:34"},"nodeType":"YulFunctionCall","src":"19988:18:34"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19980:4:34"}]}]},"name":"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19810:9:34","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19824:4:34","type":""}],"src":"19659:353:34"},{"body":{"nodeType":"YulBlock","src":"20138:334:34","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20155:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"20166:2:34","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20148:6:34"},"nodeType":"YulFunctionCall","src":"20148:21:34"},"nodeType":"YulExpressionStatement","src":"20148:21:34"},{"nodeType":"YulVariableDeclaration","src":"20178:27:34","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"20198:6:34"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"20192:5:34"},"nodeType":"YulFunctionCall","src":"20192:13:34"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"20182:6:34","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20225:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"20236:2:34","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20221:3:34"},"nodeType":"YulFunctionCall","src":"20221:18:34"},{"name":"length","nodeType":"YulIdentifier","src":"20241:6:34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20214:6:34"},"nodeType":"YulFunctionCall","src":"20214:34:34"},"nodeType":"YulExpressionStatement","src":"20214:34:34"},{"expression":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"20296:6:34"},{"kind":"number","nodeType":"YulLiteral","src":"20304:2:34","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20292:3:34"},"nodeType":"YulFunctionCall","src":"20292:15:34"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20313:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"20324:2:34","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20309:3:34"},"nodeType":"YulFunctionCall","src":"20309:18:34"},{"name":"length","nodeType":"YulIdentifier","src":"20329:6:34"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"20257:34:34"},"nodeType":"YulFunctionCall","src":"20257:79:34"},"nodeType":"YulExpressionStatement","src":"20257:79:34"},{"nodeType":"YulAssignment","src":"20345:121:34","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20361:9:34"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"20380:6:34"},{"kind":"number","nodeType":"YulLiteral","src":"20388:2:34","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20376:3:34"},"nodeType":"YulFunctionCall","src":"20376:15:34"},{"kind":"number","nodeType":"YulLiteral","src":"20393:66:34","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"20372:3:34"},"nodeType":"YulFunctionCall","src":"20372:88:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20357:3:34"},"nodeType":"YulFunctionCall","src":"20357:104:34"},{"kind":"number","nodeType":"YulLiteral","src":"20463:2:34","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20353:3:34"},"nodeType":"YulFunctionCall","src":"20353:113:34"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20345:4:34"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20107:9:34","type":""},{"name":"value0","nodeType":"YulTypedName","src":"20118:6:34","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20129:4:34","type":""}],"src":"20017:455:34"}]},"contents":"{\n    { }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_bytes_calldata(offset, end) -> arrayPos, length\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        arrayPos := add(offset, 0x20)\n        if gt(add(add(offset, length), 0x20), end) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_addresst_uint256t_bytes_calldata_ptrt_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6, value7\n    {\n        if slt(sub(dataEnd, headStart), 192) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        let value_2 := calldataload(add(headStart, 64))\n        validator_revert_address(value_2)\n        value2 := value_2\n        value3 := calldataload(add(headStart, 96))\n        let offset := calldataload(add(headStart, 128))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let value4_1, value5_1 := abi_decode_bytes_calldata(add(headStart, offset), dataEnd)\n        value4 := value4_1\n        value5 := value5_1\n        let offset_1 := calldataload(add(headStart, 160))\n        if gt(offset_1, _1) { revert(0, 0) }\n        let value6_1, value7_1 := abi_decode_bytes_calldata(add(headStart, offset_1), dataEnd)\n        value6 := value6_1\n        value7 := value7_1\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let value3_1, value4_1 := abi_decode_bytes_calldata(add(headStart, offset), dataEnd)\n        value3 := value3_1\n        value4 := value4_1\n    }\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffff00000000000000000000000000000000000000000000000000000000))\n    }\n    function abi_decode_array_address_dyn_calldata(offset, end) -> arrayPos, length\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        arrayPos := add(offset, 0x20)\n        if gt(add(add(offset, shl(5, length)), 0x20), end) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let value0_1, value1_1 := abi_decode_array_address_dyn_calldata(add(headStart, offset), dataEnd)\n        value0 := value0_1\n        value1 := value1_1\n        let offset_1 := calldataload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        let value2_1, value3_1 := abi_decode_array_address_dyn_calldata(add(headStart, offset_1), dataEnd)\n        value2 := value2_1\n        value3 := value3_1\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_struct$_UserOperation_$3791_calldata_ptrt_bytes32t_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if slt(sub(dataEnd, _1), 352) { revert(0, 0) }\n        value0 := _1\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_address_payablet_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_addresst_bytes_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let offset := calldataload(add(headStart, 32))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 32), add(_2, 32), _3)\n        mstore(add(add(memPtr, _3), 32), 0)\n        value1 := memPtr\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_contract$_IEntryPoint_$3605__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_decode_tuple_t_addresst_uint256t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n        let offset := calldataload(add(headStart, 64))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let value2_1, value3_1 := abi_decode_bytes_calldata(add(headStart, offset), dataEnd)\n        value2 := value2_1\n        value3 := value3_1\n    }\n    function abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptrt_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6, value7\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        let offset := calldataload(add(headStart, 64))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let value2_1, value3_1 := abi_decode_array_address_dyn_calldata(add(headStart, offset), dataEnd)\n        value2 := value2_1\n        value3 := value3_1\n        let offset_1 := calldataload(add(headStart, 96))\n        if gt(offset_1, _1) { revert(0, 0) }\n        let value4_1, value5_1 := abi_decode_array_address_dyn_calldata(add(headStart, offset_1), dataEnd)\n        value4 := value4_1\n        value5 := value5_1\n        let offset_2 := calldataload(add(headStart, 128))\n        if gt(offset_2, _1) { revert(0, 0) }\n        let value6_1, value7_1 := abi_decode_bytes_calldata(add(headStart, offset_2), dataEnd)\n        value6 := value6_1\n        value7 := value7_1\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        let offset := calldataload(add(headStart, 128))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let value4_1, value5_1 := abi_decode_bytes_calldata(add(headStart, offset), dataEnd)\n        value4 := value4_1\n        value5 := value5_1\n    }\n    function abi_encode_tuple_t_stringliteral_046f63b53432b31c38dcec6b5f05e3d65602d684f9163a89310aaaf94e08558e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"wrong array lengths\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function access_calldata_tail_t_bytes_calldata_ptr(base_ref, ptr_to_tail) -> addr, length\n    {\n        let rel_offset_of_tail := calldataload(ptr_to_tail)\n        if iszero(slt(rel_offset_of_tail, add(sub(calldatasize(), base_ref), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1))) { revert(0, 0) }\n        let addr_1 := add(base_ref, rel_offset_of_tail)\n        length := calldataload(addr_1)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        addr := add(addr_1, 0x20)\n        if sgt(addr, sub(calldatasize(), length)) { revert(0, 0) }\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_stringliteral_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 44)\n        mstore(add(headStart, 64), \"Function must be called through \")\n        mstore(add(headStart, 96), \"delegatecall\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 44)\n        mstore(add(headStart, 64), \"Function must be called through \")\n        mstore(add(headStart, 96), \"active proxy\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_payable_t_uint256__to_t_address_payable_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 56)\n        mstore(add(headStart, 64), \"UUPSUpgradeable: must not be cal\")\n        mstore(add(headStart, 96), \"led through delegatecall\")\n        tail := add(headStart, 128)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"Initializable: contract is alrea\")\n        mstore(add(headStart, 96), \"dy initialized\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_encode_tuple_t_address_t_rational_0_by_1__to_t_address_t_uint192__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), and(value1, 0xffffffffffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_stringliteral_26bf1d2fa883929ce8db7f4593c3a7f27ec5e761d3beb6ef3a9db5c68fe51d21__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"account: not Owner or EntryPoint\")\n        tail := add(headStart, 96)\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_decode_tuple_t_bytes32_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"ERC1967Upgrade: new implementati\")\n        mstore(add(headStart, 96), \"on is not UUPS\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC1967Upgrade: unsupported prox\")\n        mstore(add(headStart, 96), \"iableUUID\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_f684c2c0c9ec797849b62669189fe025e9077c00ba7812987ce38c0071ad7a50__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"account: not from EntryPoint\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    { end := pos }\n    function abi_encode_tuple_t_stringliteral_ae2932905fc5bb055d2e7b29311075afd0dbf688106cf649cb515d342f4c7367__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 10)\n        mstore(add(headStart, 64), \"only owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 45)\n        mstore(add(headStart, 64), \"ERC1967: new implementation is n\")\n        mstore(add(headStart, 96), \"ot a contract\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x21()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"ECDSA: invalid signature\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ECDSA: invalid signature length\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ECDSA: invalid signature 's' val\")\n        mstore(add(headStart, 96), \"ue\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xff))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Address: call to non-contract\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory_with_cleanup(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)), 64)\n    }\n}","id":34,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"618":[{"length":32,"start":1643},{"length":32,"start":1819},{"length":32,"start":2540},{"length":32,"start":2716},{"length":32,"start":3045}],"4102":[{"length":32,"start":815},{"length":32,"start":2177},{"length":32,"start":2344},{"length":32,"start":3404},{"length":32,"start":3997},{"length":32,"start":4068},{"length":32,"start":4918},{"length":32,"start":5576}]},"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x52D1902D GT PUSH2 0xA5 JUMPI DUP1 PUSH4 0xBC197C81 GT PUSH2 0x74 JUMPI DUP1 PUSH4 0xC4D66DE8 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xC4D66DE8 EQ PUSH2 0x3D0 JUMPI DUP1 PUSH4 0xD087D288 EQ PUSH2 0x3F0 JUMPI DUP1 PUSH4 0xF23A6E61 EQ PUSH2 0x405 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xBC197C81 EQ PUSH2 0x373 JUMPI DUP1 PUSH4 0xC399EC88 EQ PUSH2 0x3BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x52D1902D EQ PUSH2 0x2B3 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2C8 JUMPI DUP1 PUSH4 0xB0D691FE EQ PUSH2 0x320 JUMPI DUP1 PUSH4 0xB61D27F6 EQ PUSH2 0x353 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3659CFE6 GT PUSH2 0xFC JUMPI DUP1 PUSH4 0x4A58DB19 GT PUSH2 0xE1 JUMPI DUP1 PUSH4 0x4A58DB19 EQ PUSH2 0x278 JUMPI DUP1 PUSH4 0x4D44560D EQ PUSH2 0x280 JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x2A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3659CFE6 EQ PUSH2 0x22A JUMPI DUP1 PUSH4 0x3A871CDD EQ PUSH2 0x24A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0x23DE29 EQ PUSH2 0x138 JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0x150B7A02 EQ PUSH2 0x194 JUMPI DUP1 PUSH4 0x18DFB3C7 EQ PUSH2 0x20A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x133 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x144 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15D PUSH2 0x153 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C92 JUMP JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x16B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17F PUSH2 0x17A CALLDATASIZE PUSH1 0x4 PUSH2 0x1D43 JUMP JUMPDEST PUSH2 0x44B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D9 PUSH2 0x1AF CALLDATASIZE PUSH1 0x4 PUSH2 0x1D85 JUMP JUMPDEST PUSH32 0x150B7A0200000000000000000000000000000000000000000000000000000000 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x18B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x216 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15D PUSH2 0x225 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E3D JUMP JUMPDEST PUSH2 0x530 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x236 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15D PUSH2 0x245 CALLDATASIZE PUSH1 0x4 PUSH2 0x1EA9 JUMP JUMPDEST PUSH2 0x654 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x256 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26A PUSH2 0x265 CALLDATASIZE PUSH1 0x4 PUSH2 0x1EC6 JUMP JUMPDEST PUSH2 0x859 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x18B JUMP JUMPDEST PUSH2 0x15D PUSH2 0x87F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15D PUSH2 0x29B CALLDATASIZE PUSH1 0x4 PUSH2 0x1F1A JUMP JUMPDEST PUSH2 0x91E JUMP JUMPDEST PUSH2 0x15D PUSH2 0x2AE CALLDATASIZE PUSH1 0x4 PUSH2 0x1F75 JUMP JUMPDEST PUSH2 0x9D5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26A PUSH2 0xBCB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH2 0x2FB SWAP1 PUSH3 0x10000 SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x18B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH32 0x0 PUSH2 0x2FB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x35F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15D PUSH2 0x36E CALLDATASIZE PUSH1 0x4 PUSH2 0x2057 JUMP JUMPDEST PUSH2 0xCB7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D9 PUSH2 0x38E CALLDATASIZE PUSH1 0x4 PUSH2 0x20A7 JUMP JUMPDEST PUSH32 0xBC197C8100000000000000000000000000000000000000000000000000000000 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26A PUSH2 0xD06 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15D PUSH2 0x3EB CALLDATASIZE PUSH1 0x4 PUSH2 0x1EA9 JUMP JUMPDEST PUSH2 0xDBD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26A PUSH2 0xF50 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x411 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D9 PUSH2 0x420 CALLDATASIZE PUSH1 0x4 PUSH2 0x2145 JUMP JUMPDEST PUSH32 0xF23A6E6100000000000000000000000000000000000000000000000000000000 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH32 0x150B7A0200000000000000000000000000000000000000000000000000000000 EQ DUP1 PUSH2 0x4DE JUMPI POP PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH32 0x4E2312E000000000000000000000000000000000000000000000000000000000 EQ JUMPDEST DUP1 PUSH2 0x52A JUMPI POP PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x538 PUSH2 0xFCC JUMP JUMPDEST DUP3 DUP2 EQ PUSH2 0x5A6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x77726F6E67206172726179206C656E6774687300000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x64D JUMPI PUSH2 0x63B DUP6 DUP6 DUP4 DUP2 DUP2 LT PUSH2 0x5C6 JUMPI PUSH2 0x5C6 PUSH2 0x21C1 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x5DB SWAP2 SWAP1 PUSH2 0x1EA9 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP6 DUP6 DUP2 DUP2 LT PUSH2 0x5EF JUMPI PUSH2 0x5EF PUSH2 0x21C1 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL DUP2 ADD SWAP1 PUSH2 0x601 SWAP2 SWAP1 PUSH2 0x21F0 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x1095 SWAP3 POP POP POP JUMP JUMPDEST DUP1 PUSH2 0x645 DUP2 PUSH2 0x2255 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x5A9 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND ADDRESS SUB PUSH2 0x719 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x64656C656761746563616C6C0000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x59D JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x78E PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x831 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6163746976652070726F78790000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x59D JUMP JUMPDEST PUSH2 0x83A DUP2 PUSH2 0x1112 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x856 SWAP2 DUP4 SWAP2 SWAP1 PUSH2 0x111A JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x863 PUSH2 0x131E JUMP JUMPDEST PUSH2 0x86D DUP5 DUP5 PUSH2 0x13BD JUMP JUMPDEST SWAP1 POP PUSH2 0x878 DUP3 PUSH2 0x1476 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x0 PUSH1 0x40 MLOAD PUSH32 0xB760FAF900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 SWAP1 SWAP2 AND SWAP1 PUSH4 0xB760FAF9 SWAP1 CALLVALUE SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x90A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x64D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH2 0x926 PUSH2 0x14E1 JUMP JUMPDEST PUSH32 0x0 PUSH1 0x40 MLOAD PUSH32 0x205C287800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE SWAP2 SWAP1 SWAP2 AND SWAP1 PUSH4 0x205C2878 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9CD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND ADDRESS SUB PUSH2 0xA9A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x64656C656761746563616C6C0000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x59D JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB0F PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBB2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6163746976652070726F78790000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x59D JUMP JUMPDEST PUSH2 0xBBB DUP3 PUSH2 0x1112 JUMP JUMPDEST PUSH2 0xBC7 DUP3 DUP3 PUSH1 0x1 PUSH2 0x111A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND EQ PUSH2 0xC92 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x555550535570677261646561626C653A206D757374206E6F742062652063616C PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6C6564207468726F7567682064656C656761746563616C6C0000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x59D JUMP JUMPDEST POP PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SWAP1 JUMP JUMPDEST PUSH2 0xCBF PUSH2 0xFCC JUMP JUMPDEST PUSH2 0xD00 DUP5 DUP5 DUP5 DUP5 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x1095 SWAP3 POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD94 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDB8 SWAP2 SWAP1 PUSH2 0x22B4 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 DUP1 ISZERO PUSH2 0xDDD JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xFF SWAP1 SWAP2 AND LT JUMPDEST DUP1 PUSH2 0xDF7 JUMPI POP ADDRESS EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDF7 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND PUSH1 0x1 EQ JUMPDEST PUSH2 0xE83 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x647920696E697469616C697A6564000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x59D JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND PUSH1 0x1 OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0xEE1 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FF AND PUSH2 0x100 OR SWAP1 SSTORE JUMPDEST PUSH2 0xEEA DUP3 PUSH2 0x1572 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xBC7 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FF AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x35567E1A00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x24 DUP3 ADD DUP2 SWAP1 MSTORE SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND SWAP1 PUSH4 0x35567E1A SWAP1 PUSH1 0x44 ADD PUSH2 0xD77 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND EQ DUP1 PUSH2 0x102D JUMPI POP PUSH1 0x0 SLOAD PUSH3 0x10000 SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ JUMPDEST PUSH2 0x1093 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6163636F756E743A206E6F74204F776E6572206F7220456E747279506F696E74 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x59D JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x10BE SWAP2 SWAP1 PUSH2 0x22F1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x10FB JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1100 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x64D JUMPI DUP1 MLOAD PUSH1 0x20 DUP3 ADD REVERT JUMPDEST PUSH2 0x856 PUSH2 0x14E1 JUMP JUMPDEST PUSH32 0x4910FDFA16FED3260ED0E7147F7CC6DA11A60208B5B9406D12A635614FFD9143 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1152 JUMPI PUSH2 0x114D DUP4 PUSH2 0x1611 JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x11D7 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x11D4 SWAP2 DUP2 ADD SWAP1 PUSH2 0x22B4 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1263 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A206E657720696D706C656D656E74617469 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F6E206973206E6F742055555053000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x59D JUMP JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP2 EQ PUSH2 0x1312 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A20756E737570706F727465642070726F78 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6961626C65555549440000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x59D JUMP JUMPDEST POP PUSH2 0x114D DUP4 DUP4 DUP4 PUSH2 0x171B JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND EQ PUSH2 0x1093 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6163636F756E743A206E6F742066726F6D20456E747279506F696E7400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x59D JUMP JUMPDEST PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1C DUP3 SWAP1 MSTORE PUSH1 0x3C DUP2 KECCAK256 PUSH2 0x143A PUSH2 0x13FD PUSH2 0x140 DUP7 ADD DUP7 PUSH2 0x21F0 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP DUP6 SWAP4 SWAP3 POP POP PUSH2 0x1740 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH3 0x10000 SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x146C JUMPI PUSH1 0x1 SWAP2 POP POP PUSH2 0x52A JUMP JUMPDEST POP PUSH1 0x0 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 ISZERO PUSH2 0x856 JUMPI PUSH1 0x40 MLOAD PUSH1 0x0 SWAP1 CALLER SWAP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP5 SWAP1 DUP5 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x64D JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x64D JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH3 0x10000 SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ DUP1 PUSH2 0x150C JUMPI POP CALLER ADDRESS EQ JUMPDEST PUSH2 0x1093 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6F6E6C79206F776E657200000000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x59D JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000FFFF AND PUSH3 0x10000 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP2 AND DUP3 MUL SWAP3 SWAP1 SWAP3 OR DUP1 DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 DIV DUP3 AND SWAP3 PUSH32 0x0 SWAP1 SWAP3 AND SWAP2 PUSH32 0x47E55C76E7A6F1FD8996A1DA8008C1EA29699CCA35E7BCD057F2DEC313B6E5DE SWAP2 LOG3 POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND EXTCODESIZE PUSH2 0x16B5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720696D706C656D656E746174696F6E206973206E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F74206120636F6E747261637400000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x59D JUMP JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x1724 DUP4 PUSH2 0x1764 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT DUP1 PUSH2 0x1731 JUMPI POP DUP1 JUMPDEST ISZERO PUSH2 0x114D JUMPI PUSH2 0xD00 DUP4 DUP4 PUSH2 0x17B1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x174F DUP6 DUP6 PUSH2 0x17D6 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x175C DUP2 PUSH2 0x181B JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x176D DUP2 PUSH2 0x1611 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x878 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x238E PUSH1 0x27 SWAP2 CODECOPY PUSH2 0x19CE JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 MLOAD PUSH1 0x41 SUB PUSH2 0x180C JUMPI PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x40 DUP5 ADD MLOAD PUSH1 0x60 DUP6 ADD MLOAD PUSH1 0x0 BYTE PUSH2 0x1800 DUP8 DUP3 DUP6 DUP6 PUSH2 0x1A53 JUMP JUMPDEST SWAP5 POP SWAP5 POP POP POP POP PUSH2 0x1814 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 POP PUSH1 0x2 JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x182F JUMPI PUSH2 0x182F PUSH2 0x230D JUMP JUMPDEST SUB PUSH2 0x1837 JUMPI POP JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x184B JUMPI PUSH2 0x184B PUSH2 0x230D JUMP JUMPDEST SUB PUSH2 0x18B2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E61747572650000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x59D JUMP JUMPDEST PUSH1 0x2 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x18C6 JUMPI PUSH2 0x18C6 PUSH2 0x230D JUMP JUMPDEST SUB PUSH2 0x192D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E6174757265206C656E67746800 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x59D JUMP JUMPDEST PUSH1 0x3 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1941 JUMPI PUSH2 0x1941 PUSH2 0x230D JUMP JUMPDEST SUB PUSH2 0x856 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E6174757265202773272076616C PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7565000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x59D JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH1 0x40 MLOAD PUSH2 0x19F8 SWAP2 SWAP1 PUSH2 0x22F1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1A33 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1A38 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1A49 DUP7 DUP4 DUP4 DUP8 PUSH2 0x1B42 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP4 GT ISZERO PUSH2 0x1A8A JUMPI POP PUSH1 0x0 SWAP1 POP PUSH1 0x3 PUSH2 0x1B39 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP1 DUP5 MSTORE DUP10 SWAP1 MSTORE PUSH1 0xFF DUP9 AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1ADE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 ADD MLOAD SWAP2 POP POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0x1B32 JUMPI PUSH1 0x0 PUSH1 0x1 SWAP3 POP SWAP3 POP POP PUSH2 0x1B39 JUMP JUMPDEST SWAP2 POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x1BD8 JUMPI DUP3 MLOAD PUSH1 0x0 SUB PUSH2 0x1BD1 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND EXTCODESIZE PUSH2 0x1BD1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x59D JUMP JUMPDEST POP DUP2 PUSH2 0x1BE2 JUMP JUMPDEST PUSH2 0x1BE2 DUP4 DUP4 PUSH2 0x1BEA JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP2 MLOAD ISZERO PUSH2 0x1BFA JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x59D SWAP2 SWAP1 PUSH2 0x233C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x856 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1C62 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1C7A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x1814 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP10 DUP12 SUB SLT ISZERO PUSH2 0x1CAE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP9 CALLDATALOAD PUSH2 0x1CB9 DUP2 PUSH2 0x1C2E JUMP JUMPDEST SWAP8 POP PUSH1 0x20 DUP10 ADD CALLDATALOAD PUSH2 0x1CC9 DUP2 PUSH2 0x1C2E JUMP JUMPDEST SWAP7 POP PUSH1 0x40 DUP10 ADD CALLDATALOAD PUSH2 0x1CD9 DUP2 PUSH2 0x1C2E JUMP JUMPDEST SWAP6 POP PUSH1 0x60 DUP10 ADD CALLDATALOAD SWAP5 POP PUSH1 0x80 DUP10 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1CFD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1D09 DUP13 DUP4 DUP14 ADD PUSH2 0x1C50 JUMP JUMPDEST SWAP1 SWAP7 POP SWAP5 POP PUSH1 0xA0 DUP12 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1D22 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D2F DUP12 DUP3 DUP13 ADD PUSH2 0x1C50 JUMP JUMPDEST SWAP10 SWAP13 SWAP9 SWAP12 POP SWAP7 SWAP10 POP SWAP5 SWAP8 SWAP4 SWAP7 SWAP3 SWAP6 SWAP5 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D55 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND DUP2 EQ PUSH2 0x878 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1D9D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0x1DA8 DUP2 PUSH2 0x1C2E JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH2 0x1DB8 DUP2 PUSH2 0x1C2E JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1DDB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1DE7 DUP9 DUP3 DUP10 ADD PUSH2 0x1C50 JUMP JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 POP SWAP3 SWAP5 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1E0A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1E22 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x1814 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x40 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1E53 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1E6B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1E77 DUP9 DUP4 DUP10 ADD PUSH2 0x1DF8 JUMP JUMPDEST SWAP1 SWAP7 POP SWAP5 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1E90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E9D DUP8 DUP3 DUP9 ADD PUSH2 0x1DF8 JUMP JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP6 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1EBB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x878 DUP2 PUSH2 0x1C2E JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1EDB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1EF2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 ADD PUSH2 0x160 DUP2 DUP8 SUB SLT ISZERO PUSH2 0x1F05 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1F2D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1F38 DUP2 PUSH2 0x1C2E JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1F88 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1F93 DUP2 PUSH2 0x1C2E JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1FB0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1FC4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x1FD6 JUMPI PUSH2 0x1FD6 PUSH2 0x1F46 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x201C JUMPI PUSH2 0x201C PUSH2 0x1F46 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP9 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x2035 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x206D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0x2078 DUP2 PUSH2 0x1C2E JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x209B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1E9D DUP8 DUP3 DUP9 ADD PUSH2 0x1C50 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xA0 DUP10 DUP12 SUB SLT ISZERO PUSH2 0x20C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP9 CALLDATALOAD PUSH2 0x20CE DUP2 PUSH2 0x1C2E JUMP JUMPDEST SWAP8 POP PUSH1 0x20 DUP10 ADD CALLDATALOAD PUSH2 0x20DE DUP2 PUSH2 0x1C2E JUMP JUMPDEST SWAP7 POP PUSH1 0x40 DUP10 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x20FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2107 DUP13 DUP4 DUP14 ADD PUSH2 0x1DF8 JUMP JUMPDEST SWAP1 SWAP9 POP SWAP7 POP PUSH1 0x60 DUP12 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x2120 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x212C DUP13 DUP4 DUP14 ADD PUSH2 0x1DF8 JUMP JUMPDEST SWAP1 SWAP7 POP SWAP5 POP PUSH1 0x80 DUP12 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1D22 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xA0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x215E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 CALLDATALOAD PUSH2 0x2169 DUP2 PUSH2 0x1C2E JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD PUSH2 0x2179 DUP2 PUSH2 0x1C2E JUMP JUMPDEST SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD SWAP3 POP PUSH1 0x80 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x21A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x21AF DUP10 DUP3 DUP11 ADD PUSH2 0x1C50 JUMP JUMPDEST SWAP8 SWAP11 SWAP7 SWAP10 POP SWAP5 SWAP8 POP SWAP3 SWAP6 SWAP4 SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 CALLDATALOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE1 DUP5 CALLDATASIZE SUB ADD DUP2 SLT PUSH2 0x2225 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 ADD DUP1 CALLDATALOAD SWAP2 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2240 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 ADD SWAP2 POP CALLDATASIZE DUP2 SWAP1 SUB DUP3 SGT ISZERO PUSH2 0x1814 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x22AD JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x22C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x22E8 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x22D0 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x2303 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x22CD JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x235B DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x22CD JUMP JUMPDEST PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP INVALID COINBASE PUSH5 0x6472657373 GASPRICE KECCAK256 PUSH13 0x6F772D6C6576656C2064656C65 PUSH8 0x6174652063616C6C KECCAK256 PUSH7 0x61696C6564A264 PUSH10 0x7066735822122014E1CB 0xCD SWAP11 PUSH7 0x55A444F8EB73CE 0xB5 GAS 0xCE DUP11 0xA8 0xF9 PUSH3 0x8FB9E1 EXTCODEHASH CODECOPY EQ GASPRICE 0xDC CALLVALUE DUP4 0x26 0x2C PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ","sourceMap":"633:3871:30:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;577:176:32;;;;;;;;;;-1:-1:-1;577:176:32;;;;;:::i;:::-;;;;;;;;;;;;1485:298;;;;;;;;;;-1:-1:-1;1485:298:32;;;;;:::i;:::-;;:::i;:::-;;;2237:14:34;;2230:22;2212:41;;2200:2;2185:18;1485:298:32;;;;;;;;759:212;;;;;;;;;;-1:-1:-1;759:212:32;;;;;:::i;:::-;923:41;759:212;;;;;;;;;;;3197:66:34;3185:79;;;3167:98;;3155:2;3140:18;759:212:32;3023:248:34;1898:297:30;;;;;;;;;;-1:-1:-1;1898:297:30;;;;;:::i;:::-;;:::i;3143:195:7:-;;;;;;;;;;-1:-1:-1;3143:195:7;;;;;:::i;:::-;;:::i;1454:353:20:-;;;;;;;;;;-1:-1:-1;1454:353:20;;;;;:::i;:::-;;:::i;:::-;;;5369:25:34;;;5357:2;5342:18;1454:353:20;5223:177:34;3941:110:30;;;:::i;4203:158::-;;;;;;;;;;-1:-1:-1;4203:158:30;;;;;:::i;:::-;;:::i;3657:220:7:-;;;;;;:::i;:::-;;:::i;2762:131::-;;;;;;;;;;;;;:::i;761:20:30:-;;;;;;;;;;-1:-1:-1;761:20:30;;;;;;;;;;;;;;7400:42:34;7388:55;;;7370:74;;7358:2;7343:18;761:20:30;7224:226:34;1027:108:30;;;;;;;;;;-1:-1:-1;1117:11:30;1027:108;;1676:158;;;;;;;;;;-1:-1:-1;1676:158:30;;;;;:::i;:::-;;:::i;1215:264:32:-;;;;;;;;;;-1:-1:-1;1215:264:32;;;;;:::i;:::-;1424:48;1215:264;;;;;;;;;;;3745:113:30;;;;;;;;;;;;;:::i;2479:101::-;;;;;;;;;;-1:-1:-1;2479:101:30;;;;;:::i;:::-;;:::i;931:121:20:-;;;;;;;;;;;;;:::i;977:232:32:-;;;;;;;;;;-1:-1:-1;977:232:32;;;;;:::i;:::-;1159:43;977:232;;;;;;;;;1485:298;1572:4;1607:48;;;1622:33;1607:48;;:113;;-1:-1:-1;1671:49:32;;;1686:34;1671:49;1607:113;:169;;;-1:-1:-1;1736:40:32;;;1751:25;1736:40;1607:169;1588:188;1485:298;-1:-1:-1;;1485:298:32:o;1898:297:30:-;1987:31;:29;:31::i;:::-;2036:26;;;2028:58;;;;;;;10696:2:34;2028:58:30;;;10678:21:34;10735:2;10715:18;;;10708:30;10774:21;10754:18;;;10747:49;10813:18;;2028:58:30;;;;;;;;;2101:9;2096:93;2116:15;;;2096:93;;;2152:26;2158:4;;2163:1;2158:7;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;2167:1;2170:4;;2175:1;2170:7;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;2152:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2152:5:30;;-1:-1:-1;;;2152:26:30:i;:::-;2133:3;;;;:::i;:::-;;;;2096:93;;;;1898:297;;;;:::o;3143:195:7:-;1637:23;1654:6;1637:23;1645:4;1637:23;1629:80;;;;;;;12172:2:34;1629:80:7;;;12154:21:34;12211:2;12191:18;;;12184:30;12250:34;12230:18;;;12223:62;12321:14;12301:18;;;12294:42;12353:19;;1629:80:7;11970:408:34;1629:80:7;1751:6;1727:30;;:20;1030:66:3;1254:54;;;;1175:140;1727:20:7;:30;;;1719:87;;;;;;;12585:2:34;1719:87:7;;;12567:21:34;12624:2;12604:18;;;12597:30;12663:34;12643:18;;;12636:62;12734:14;12714:18;;;12707:42;12766:19;;1719:87:7;12383:408:34;1719:87:7;3224:36:::1;3242:17;3224;:36::i;:::-;3311:12;::::0;;3321:1:::1;3311:12:::0;;;::::1;::::0;::::1;::::0;;;3270:61:::1;::::0;3292:17;;3311:12;3270:21:::1;:61::i;:::-;3143:195:::0;:::o;1454:353:20:-;1597:22;1631:24;:22;:24::i;:::-;1682:38;1701:6;1709:10;1682:18;:38::i;:::-;1665:55;;1768:32;1780:19;1768:11;:32::i;:::-;1454:353;;;;;:::o;3941:110:30:-;1117:11;3988:56;;;;;4038:4;3988:56;;;7370:74:34;3988:22:30;;;;;;;;4019:9;;7343:18:34;;3988:56:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4203:158;959:12;:10;:12::i;:::-;1117:11;4306:48:::1;::::0;;;;:23:::1;13004:55:34::0;;;4306:48:30::1;::::0;::::1;12986:74:34::0;13076:18;;;13069:34;;;4306:23:30;;;::::1;::::0;::::1;::::0;12959:18:34;;4306:48:30::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;4203:158:::0;;:::o;3657:220:7:-;1637:23;1654:6;1637:23;1645:4;1637:23;1629:80;;;;;;;12172:2:34;1629:80:7;;;12154:21:34;12211:2;12191:18;;;12184:30;12250:34;12230:18;;;12223:62;12321:14;12301:18;;;12294:42;12353:19;;1629:80:7;11970:408:34;1629:80:7;1751:6;1727:30;;:20;1030:66:3;1254:54;;;;1175:140;1727:20:7;:30;;;1719:87;;;;;;;12585:2:34;1719:87:7;;;12567:21:34;12624:2;12604:18;;;12597:30;12663:34;12643:18;;;12636:62;12734:14;12714:18;;;12707:42;12766:19;;1719:87:7;12383:408:34;1719:87:7;3772:36:::1;3790:17;3772;:36::i;:::-;3818:52;3840:17;3859:4;3865;3818:21;:52::i;:::-;3657:220:::0;;:::o;2762:131::-;2840:7;2080:4;2072:23;2089:6;2072:23;;2064:92;;;;;;;13316:2:34;2064:92:7;;;13298:21:34;13355:2;13335:18;;;13328:30;13394:34;13374:18;;;13367:62;13465:26;13445:18;;;13438:54;13509:19;;2064:92:7;13114:420:34;2064:92:7;-1:-1:-1;1030:66:3::1;2762:131:7::0;:::o;1676:158:30:-;1762:31;:29;:31::i;:::-;1803:24;1809:4;1815:5;1822:4;;1803:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1803:5:30;;-1:-1:-1;;;1803:24:30:i;:::-;1676:158;;;;:::o;3745:113::-;3814:37;;;;;3845:4;3814:37;;;7370:74:34;3788:7:30;;3814:22;1117:11;3814:22;;;;7343:18:34;;3814:37:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3807:44;;3745:113;:::o;2479:101::-;3268:19:6;3291:13;;;;;;3290:14;;3336:34;;;;-1:-1:-1;3354:12:6;;3369:1;3354:12;;;;:16;3336:34;3335:97;;;-1:-1:-1;3404:4:6;1702:19:11;:23;;;3376:55:6;;-1:-1:-1;3414:12:6;;;;;:17;3376:55;3314:190;;;;;;;13930:2:34;3314:190:6;;;13912:21:34;13969:2;13949:18;;;13942:30;14008:34;13988:18;;;13981:62;14079:16;14059:18;;;14052:44;14113:19;;3314:190:6;13728:410:34;3314:190:6;3514:12;:16;;;;3529:1;3514:16;;;3540:65;;;;3574:13;:20;;;;;;;;3540:65;2553:20:30::1;2565:7;2553:11;:20::i;:::-;3629:14:6::0;3625:99;;;3675:5;3659:21;;;;;;3699:14;;-1:-1:-1;14295:36:34;;3699:14:6;;14283:2:34;14268:18;3699:14:6;;;;;;;3258:472;2479:101:30;:::o;931:121:20:-;1006:39;;;;;1036:4;1006:39;;;14524:74:34;980:7:20;14614:18:34;;;14607:91;;;980:7:20;1006:21;1117:11:30;1006:21:20;;;;14497:18:34;;1006:39:20;14342:362:34;2804:175:30;2877:10;:35;1117:11;2877:35;;;:58;;-1:-1:-1;2930:5:30;;;;;;;2916:10;:19;2877:58;2869:103;;;;;;;14911:2:34;2869:103:30;;;14893:21:34;;;14930:18;;;14923:30;14989:34;14969:18;;;14962:62;15041:18;;2869:103:30;14709:356:34;2869:103:30;2804:175::o;3381:287::-;3466:12;3480:19;3503:6;:11;;3523:5;3530:4;3503:32;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3465:70;;;;3550:7;3545:117;;3630:6;3624:13;3619:2;3611:6;3607:15;3600:38;4367:135;4483:12;:10;:12::i;2494:922:3:-;689:66;2910:48;;;2906:504;;;2974:37;2993:17;2974:18;:37::i;:::-;2494:922;;;:::o;2906:504::-;3064:17;3046:50;;;:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3046:52:3;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;3042:291;;3262:56;;;;;16008:2:34;3262:56:3;;;15990:21:34;16047:2;16027:18;;;16020:30;16086:34;16066:18;;;16059:62;16157:16;16137:18;;;16130:44;16191:19;;3262:56:3;15806:410:34;3042:291:3;1030:66;3148:28;;3140:82;;;;;;;16423:2:34;3140:82:3;;;16405:21:34;16462:2;16442:18;;;16435:30;16501:34;16481:18;;;16474:62;16572:11;16552:18;;;16545:39;16601:19;;3140:82:3;16221:405:34;3140:82:3;3099:138;3346:53;3364:17;3383:4;3389:9;3346:17;:53::i;1888:149:20:-;1962:10;:35;1117:11:30;1962:35:20;;1954:76;;;;;;;16833:2:34;1954:76:20;;;16815:21:34;16872:2;16852:18;;;16845:30;16911;16891:18;;;16884:58;16959:18;;1954:76:20;16631:352:34;3034:341:30;7389:34:16;3152:22:30;7376:48:16;;;7444:4;7437:18;;;7495:4;7479:21;;3278:30:30;3291:16;;;;:6;:16;:::i;:::-;3278:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3278:4:30;;:30;-1:-1:-1;;3278:12:30;:30;-1:-1:-1;3278:30:30:i;:::-;3269:5;;;;;:39;:5;;;:39;;;3265:85;;742:1:20;3322:28:30;;;;;3265:85;-1:-1:-1;3367:1:30;;3034:341;-1:-1:-1;;;3034:341:30:o;4308:337:20:-;4389:24;;4385:254;;4447:82;;4430:12;;4455:10;;4507:17;;4480:19;;4430:12;4447:82;4430:12;4447:82;4480:19;4455:10;4507:17;4447:82;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1345:233:30;1520:5;;;;;;;1506:10;:19;;:50;;-1:-1:-1;1529:10:30;1551:4;1529:27;1506:50;1498:73;;;;;;;17400:2:34;1498:73:30;;;17382:21:34;17439:2;17419:18;;;17412:30;17478:12;17458:18;;;17451:40;17508:18;;1498:73:30;17198:334:34;2586:146:30;2651:5;:15;;;;;;;;;;;;;;;;;;2681:44;;2719:5;;;;;;2706:11;2681:44;;;;;;;2586:146;:::o;1406:259:3:-;1702:19:11;;;;1479:95:3;;;;;;;17739:2:34;1479:95:3;;;17721:21:34;17778:2;17758:18;;;17751:30;17817:34;17797:18;;;17790:62;17888:15;17868:18;;;17861:43;17921:19;;1479:95:3;17537:409:34;1479:95:3;1030:66;1584:74;;;;;;;;;;;;;;;1406:259::o;2057:265::-;2165:29;2176:17;2165:10;:29::i;:::-;2222:1;2208:4;:11;:15;:28;;;;2227:9;2208:28;2204:112;;;2252:53;2281:17;2300:4;2252:28;:53::i;3661:227:16:-;3739:7;3759:17;3778:18;3800:27;3811:4;3817:9;3800:10;:27::i;:::-;3758:69;;;;3837:18;3849:5;3837:11;:18::i;:::-;-1:-1:-1;3872:9:16;3661:227;-1:-1:-1;;;3661:227:16:o;1771:152:3:-;1837:37;1856:17;1837:18;:37::i;:::-;1889:27;;;;;;;;;;;1771:152;:::o;6674:198:11:-;6757:12;6788:77;6809:6;6817:4;6788:77;;;;;;;;;;;;;;;;;:20;:77::i;2145:730:16:-;2226:7;2235:12;2263:9;:16;2283:2;2263:22;2259:610;;2599:4;2584:20;;2578:27;2648:4;2633:20;;2627:27;2705:4;2690:20;;2684:27;2301:9;2676:36;2746:25;2757:4;2676:36;2578:27;2627;2746:10;:25::i;:::-;2739:32;;;;;;;;;2259:610;-1:-1:-1;2818:1:16;;-1:-1:-1;2822:35:16;2259:610;2145:730;;;;;:::o;570:511::-;647:20;638:5;:29;;;;;;;;:::i;:::-;;634:441;;570:511;:::o;634:441::-;743:29;734:5;:38;;;;;;;;:::i;:::-;;730:345;;788:34;;;;;18342:2:34;788:34:16;;;18324:21:34;18381:2;18361:18;;;18354:30;18420:26;18400:18;;;18393:54;18464:18;;788:34:16;18140:348:34;730:345:16;852:35;843:5;:44;;;;;;;;:::i;:::-;;839:236;;903:41;;;;;18695:2:34;903:41:16;;;18677:21:34;18734:2;18714:18;;;18707:30;18773:33;18753:18;;;18746:61;18824:18;;903:41:16;18493:355:34;839:236:16;974:30;965:5;:39;;;;;;;;:::i;:::-;;961:114;;1020:44;;;;;19055:2:34;1020:44:16;;;19037:21:34;19094:2;19074:18;;;19067:30;19133:34;19113:18;;;19106:62;19204:4;19184:18;;;19177:32;19226:19;;1020:44:16;18853:398:34;7058:325:11;7199:12;7224;7238:23;7265:6;:19;;7285:4;7265:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7223:67;;;;7307:69;7334:6;7342:7;7351:10;7363:12;7307:26;:69::i;:::-;7300:76;7058:325;-1:-1:-1;;;;;;7058:325:11:o;5009:1456:16:-;5097:7;;6021:66;6008:79;;6004:161;;;-1:-1:-1;6119:1:16;;-1:-1:-1;6123:30:16;6103:51;;6004:161;6276:24;;;6259:14;6276:24;;;;;;;;;19483:25:34;;;19556:4;19544:17;;19524:18;;;19517:45;;;;19578:18;;;19571:34;;;19621:18;;;19614:34;;;6276:24:16;;19455:19:34;;6276:24:16;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6276:24:16;;;;;;-1:-1:-1;;6314:20:16;;;6310:101;;6366:1;6370:29;6350:50;;;;;;;6310:101;6429:6;-1:-1:-1;6437:20:16;;-1:-1:-1;5009:1456:16;;;;;;;;:::o;7671:628:11:-;7851:12;7879:7;7875:418;;;7906:10;:17;7927:1;7906:22;7902:286;;1702:19;;;;8113:60;;;;;;;19861:2:34;8113:60:11;;;19843:21:34;19900:2;19880:18;;;19873:30;19939:31;19919:18;;;19912:59;19988:18;;8113:60:11;19659:353:34;8113:60:11;-1:-1:-1;8208:10:11;8201:17;;7875:418;8249:33;8257:10;8269:12;8249:7;:33::i;:::-;7671:628;;;;;;:::o;8821:540::-;8980:17;;:21;8976:379;;9208:10;9202:17;9264:15;9251:10;9247:2;9243:19;9236:44;8976:379;9331:12;9324:20;;;;;;;;;;;:::i;14:154:34:-;100:42;93:5;89:54;82:5;79:65;69:93;;158:1;155;148:12;173:347;224:8;234:6;288:3;281:4;273:6;269:17;265:27;255:55;;306:1;303;296:12;255:55;-1:-1:-1;329:20:34;;372:18;361:30;;358:50;;;404:1;401;394:12;358:50;441:4;433:6;429:17;417:29;;493:3;486:4;477:6;469;465:19;461:30;458:39;455:59;;;510:1;507;500:12;525:1205;651:6;659;667;675;683;691;699;707;760:3;748:9;739:7;735:23;731:33;728:53;;;777:1;774;767:12;728:53;816:9;803:23;835:31;860:5;835:31;:::i;:::-;885:5;-1:-1:-1;942:2:34;927:18;;914:32;955:33;914:32;955:33;:::i;:::-;1007:7;-1:-1:-1;1066:2:34;1051:18;;1038:32;1079:33;1038:32;1079:33;:::i;:::-;1131:7;-1:-1:-1;1185:2:34;1170:18;;1157:32;;-1:-1:-1;1240:3:34;1225:19;;1212:33;1264:18;1294:14;;;1291:34;;;1321:1;1318;1311:12;1291:34;1360:58;1410:7;1401:6;1390:9;1386:22;1360:58;:::i;:::-;1437:8;;-1:-1:-1;1334:84:34;-1:-1:-1;1525:3:34;1510:19;;1497:33;;-1:-1:-1;1542:16:34;;;1539:36;;;1571:1;1568;1561:12;1539:36;;1610:60;1662:7;1651:8;1640:9;1636:24;1610:60;:::i;:::-;525:1205;;;;-1:-1:-1;525:1205:34;;-1:-1:-1;525:1205:34;;;;;;1689:8;-1:-1:-1;;;525:1205:34:o;1735:332::-;1793:6;1846:2;1834:9;1825:7;1821:23;1817:32;1814:52;;;1862:1;1859;1852:12;1814:52;1901:9;1888:23;1951:66;1944:5;1940:78;1933:5;1930:89;1920:117;;2033:1;2030;2023:12;2264:754;2361:6;2369;2377;2385;2393;2446:3;2434:9;2425:7;2421:23;2417:33;2414:53;;;2463:1;2460;2453:12;2414:53;2502:9;2489:23;2521:31;2546:5;2521:31;:::i;:::-;2571:5;-1:-1:-1;2628:2:34;2613:18;;2600:32;2641:33;2600:32;2641:33;:::i;:::-;2693:7;-1:-1:-1;2747:2:34;2732:18;;2719:32;;-1:-1:-1;2802:2:34;2787:18;;2774:32;2829:18;2818:30;;2815:50;;;2861:1;2858;2851:12;2815:50;2900:58;2950:7;2941:6;2930:9;2926:22;2900:58;:::i;:::-;2264:754;;;;-1:-1:-1;2264:754:34;;-1:-1:-1;2977:8:34;;2874:84;2264:754;-1:-1:-1;;;2264:754:34:o;3276:367::-;3339:8;3349:6;3403:3;3396:4;3388:6;3384:17;3380:27;3370:55;;3421:1;3418;3411:12;3370:55;-1:-1:-1;3444:20:34;;3487:18;3476:30;;3473:50;;;3519:1;3516;3509:12;3473:50;3556:4;3548:6;3544:17;3532:29;;3616:3;3609:4;3599:6;3596:1;3592:14;3584:6;3580:27;3576:38;3573:47;3570:67;;;3633:1;3630;3623:12;3648:784;3781:6;3789;3797;3805;3858:2;3846:9;3837:7;3833:23;3829:32;3826:52;;;3874:1;3871;3864:12;3826:52;3914:9;3901:23;3943:18;3984:2;3976:6;3973:14;3970:34;;;4000:1;3997;3990:12;3970:34;4039:70;4101:7;4092:6;4081:9;4077:22;4039:70;:::i;:::-;4128:8;;-1:-1:-1;4013:96:34;-1:-1:-1;4216:2:34;4201:18;;4188:32;;-1:-1:-1;4232:16:34;;;4229:36;;;4261:1;4258;4251:12;4229:36;;4300:72;4364:7;4353:8;4342:9;4338:24;4300:72;:::i;:::-;3648:784;;;;-1:-1:-1;4391:8:34;-1:-1:-1;;;;3648:784:34:o;4437:247::-;4496:6;4549:2;4537:9;4528:7;4524:23;4520:32;4517:52;;;4565:1;4562;4555:12;4517:52;4604:9;4591:23;4623:31;4648:5;4623:31;:::i;4689:529::-;4799:6;4807;4815;4868:2;4856:9;4847:7;4843:23;4839:32;4836:52;;;4884:1;4881;4874:12;4836:52;4924:9;4911:23;4957:18;4949:6;4946:30;4943:50;;;4989:1;4986;4979:12;4943:50;5012:22;;5068:3;5050:16;;;5046:26;5043:46;;;5085:1;5082;5075:12;5043:46;5108:2;5157;5142:18;;5129:32;;-1:-1:-1;5208:2:34;5193:18;;;5180:32;;4689:529;-1:-1:-1;;;4689:529:34:o;5405:323::-;5481:6;5489;5542:2;5530:9;5521:7;5517:23;5513:32;5510:52;;;5558:1;5555;5548:12;5510:52;5597:9;5584:23;5616:31;5641:5;5616:31;:::i;:::-;5666:5;5718:2;5703:18;;;;5690:32;;-1:-1:-1;;;5405:323:34:o;5733:184::-;5785:77;5782:1;5775:88;5882:4;5879:1;5872:15;5906:4;5903:1;5896:15;5922:1115;5999:6;6007;6060:2;6048:9;6039:7;6035:23;6031:32;6028:52;;;6076:1;6073;6066:12;6028:52;6115:9;6102:23;6134:31;6159:5;6134:31;:::i;:::-;6184:5;-1:-1:-1;6240:2:34;6225:18;;6212:32;6263:18;6293:14;;;6290:34;;;6320:1;6317;6310:12;6290:34;6358:6;6347:9;6343:22;6333:32;;6403:7;6396:4;6392:2;6388:13;6384:27;6374:55;;6425:1;6422;6415:12;6374:55;6461:2;6448:16;6483:2;6479;6476:10;6473:36;;;6489:18;;:::i;:::-;6623:2;6617:9;6685:4;6677:13;;6528:66;6673:22;;;6697:2;6669:31;6665:40;6653:53;;;6721:18;;;6741:22;;;6718:46;6715:72;;;6767:18;;:::i;:::-;6807:10;6803:2;6796:22;6842:2;6834:6;6827:18;6882:7;6877:2;6872;6868;6864:11;6860:20;6857:33;6854:53;;;6903:1;6900;6893:12;6854:53;6959:2;6954;6950;6946:11;6941:2;6933:6;6929:15;6916:46;7004:1;6999:2;6994;6986:6;6982:15;6978:24;6971:35;7025:6;7015:16;;;;;;;5922:1115;;;;;:::o;7706:612::-;7794:6;7802;7810;7818;7871:2;7859:9;7850:7;7846:23;7842:32;7839:52;;;7887:1;7884;7877:12;7839:52;7926:9;7913:23;7945:31;7970:5;7945:31;:::i;:::-;7995:5;-1:-1:-1;8047:2:34;8032:18;;8019:32;;-1:-1:-1;8102:2:34;8087:18;;8074:32;8129:18;8118:30;;8115:50;;;8161:1;8158;8151:12;8115:50;8200:58;8250:7;8241:6;8230:9;8226:22;8200:58;:::i;8323:1338::-;8483:6;8491;8499;8507;8515;8523;8531;8539;8592:3;8580:9;8571:7;8567:23;8563:33;8560:53;;;8609:1;8606;8599:12;8560:53;8648:9;8635:23;8667:31;8692:5;8667:31;:::i;:::-;8717:5;-1:-1:-1;8774:2:34;8759:18;;8746:32;8787:33;8746:32;8787:33;:::i;:::-;8839:7;-1:-1:-1;8897:2:34;8882:18;;8869:32;8920:18;8950:14;;;8947:34;;;8977:1;8974;8967:12;8947:34;9016:70;9078:7;9069:6;9058:9;9054:22;9016:70;:::i;:::-;9105:8;;-1:-1:-1;8990:96:34;-1:-1:-1;9193:2:34;9178:18;;9165:32;;-1:-1:-1;9209:16:34;;;9206:36;;;9238:1;9235;9228:12;9206:36;9277:72;9341:7;9330:8;9319:9;9315:24;9277:72;:::i;:::-;9368:8;;-1:-1:-1;9251:98:34;-1:-1:-1;9456:3:34;9441:19;;9428:33;;-1:-1:-1;9473:16:34;;;9470:36;;;9502:1;9499;9492:12;9666:823;9772:6;9780;9788;9796;9804;9812;9865:3;9853:9;9844:7;9840:23;9836:33;9833:53;;;9882:1;9879;9872:12;9833:53;9921:9;9908:23;9940:31;9965:5;9940:31;:::i;:::-;9990:5;-1:-1:-1;10047:2:34;10032:18;;10019:32;10060:33;10019:32;10060:33;:::i;:::-;10112:7;-1:-1:-1;10166:2:34;10151:18;;10138:32;;-1:-1:-1;10217:2:34;10202:18;;10189:32;;-1:-1:-1;10272:3:34;10257:19;;10244:33;10300:18;10289:30;;10286:50;;;10332:1;10329;10322:12;10286:50;10371:58;10421:7;10412:6;10401:9;10397:22;10371:58;:::i;:::-;9666:823;;;;-1:-1:-1;9666:823:34;;-1:-1:-1;9666:823:34;;10448:8;;9666:823;-1:-1:-1;;;9666:823:34:o;10842:184::-;10894:77;10891:1;10884:88;10991:4;10988:1;10981:15;11015:4;11012:1;11005:15;11031:580;11108:4;11114:6;11174:11;11161:25;11264:66;11253:8;11237:14;11233:29;11229:102;11209:18;11205:127;11195:155;;11346:1;11343;11336:12;11195:155;11373:33;;11425:20;;;-1:-1:-1;11468:18:34;11457:30;;11454:50;;;11500:1;11497;11490:12;11454:50;11533:4;11521:17;;-1:-1:-1;11564:14:34;11560:27;;;11550:38;;11547:58;;;11601:1;11598;11591:12;11616:349;11655:3;11686:66;11679:5;11676:77;11673:257;;11786:77;11783:1;11776:88;11887:4;11884:1;11877:15;11915:4;11912:1;11905:15;11673:257;-1:-1:-1;11957:1:34;11946:13;;11616:349::o;13539:184::-;13609:6;13662:2;13650:9;13641:7;13637:23;13633:32;13630:52;;;13678:1;13675;13668:12;13630:52;-1:-1:-1;13701:16:34;;13539:184;-1:-1:-1;13539:184:34:o;15070:250::-;15155:1;15165:113;15179:6;15176:1;15173:13;15165:113;;;15255:11;;;15249:18;15236:11;;;15229:39;15201:2;15194:10;15165:113;;;-1:-1:-1;;15312:1:34;15294:16;;15287:27;15070:250::o;15325:287::-;15454:3;15492:6;15486:13;15508:66;15567:6;15562:3;15555:4;15547:6;15543:17;15508:66;:::i;:::-;15590:16;;;;;15325:287;-1:-1:-1;;15325:287:34:o;17951:184::-;18003:77;18000:1;17993:88;18100:4;18097:1;18090:15;18124:4;18121:1;18114:15;20017:455;20166:2;20155:9;20148:21;20129:4;20198:6;20192:13;20241:6;20236:2;20225:9;20221:18;20214:34;20257:79;20329:6;20324:2;20313:9;20309:18;20304:2;20296:6;20292:15;20257:79;:::i;:::-;20388:2;20376:15;20393:66;20372:88;20357:104;;;;20463:2;20353:113;;20017:455;-1:-1:-1;;20017:455:34:o"},"methodIdentifiers":{"addDeposit()":"4a58db19","entryPoint()":"b0d691fe","execute(address,uint256,bytes)":"b61d27f6","executeBatch(address[],bytes[])":"18dfb3c7","getDeposit()":"c399ec88","getNonce()":"d087d288","initialize(address)":"c4d66de8","onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)":"bc197c81","onERC1155Received(address,address,uint256,uint256,bytes)":"f23a6e61","onERC721Received(address,address,uint256,bytes)":"150b7a02","owner()":"8da5cb5b","proxiableUUID()":"52d1902d","supportsInterface(bytes4)":"01ffc9a7","tokensReceived(address,address,address,uint256,bytes,bytes)":"0023de29","upgradeTo(address)":"3659cfe6","upgradeToAndCall(address,bytes)":"4f1ef286","validateUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)":"3a871cdd","withdrawDepositTo(address,uint256)":"4d44560d"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IEntryPoint\",\"name\":\"anEntryPoint\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IEntryPoint\",\"name\":\"entryPoint\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"SimpleAccountInitialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"addDeposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"entryPoint\",\"outputs\":[{\"internalType\":\"contract IEntryPoint\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"dest\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"func\",\"type\":\"bytes\"}],\"name\":\"execute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"dest\",\"type\":\"address[]\"},{\"internalType\":\"bytes[]\",\"name\":\"func\",\"type\":\"bytes[]\"}],\"name\":\"executeBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"anOwner\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"tokensReceived\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"missingAccountFunds\",\"type\":\"uint256\"}],\"name\":\"validateUserOp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"validationData\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawDepositTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"initialize(address)\":{\"details\":\"The _entryPoint member is immutable, to reduce gas consumption.  To upgrade EntryPoint, a new implementation of SimpleAccount must be deployed with the new EntryPoint address, then upgrading the implementation by calling `upgradeTo()`\"},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"upgradeTo(address)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"},\"withdrawDepositTo(address,uint256)\":{\"params\":{\"amount\":\"to withdraw\",\"withdrawAddress\":\"target to send to\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addDeposit()\":{\"notice\":\"deposit more funds for this account in the entryPoint\"},\"entryPoint()\":{\"notice\":\"return the entryPoint used by this account. subclass should return the current entryPoint used by this account.\"},\"execute(address,uint256,bytes)\":{\"notice\":\"execute a transaction (called directly from owner, or by entryPoint)\"},\"executeBatch(address[],bytes[])\":{\"notice\":\"execute a sequence of transactions\"},\"getDeposit()\":{\"notice\":\"check current account deposit in the entryPoint\"},\"getNonce()\":{\"notice\":\"Return the account nonce. This method returns the next sequential nonce. For a nonce of a specific key, use `entrypoint.getNonce(account, key)`\"},\"validateUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)\":{\"notice\":\"Validate user's signature and nonce. subclass doesn't need to override this method. Instead, it should override the specific internal validation methods.\"},\"withdrawDepositTo(address,uint256)\":{\"notice\":\"withdraw value from the account's deposit\"}},\"notice\":\"minimal account.  this is sample minimal account.  has execute, eth handling methods  has a single signer that can send requests through the entryPoint.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/samples/SimpleAccount.sol\":\"SimpleAccount\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0x3cbef5ebc24b415252e2f8c0c9254555d30d9f085603b4b80d9b5ed20ab87e90\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e8fa670c3bdce78e642cc6ae11c4cb38b133499cdce5e1990a9979d424703263\",\"dweb:/ipfs/QmVxeCUk4jL2pXQyhsoNJwyU874wRufS2WvGe8TgPKPqhE\"]},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://383fb7b8181016ac5ccf07bc9cdb7c1b5045ea36e2cc4df52bcbf20396fc7688\",\"dweb:/ipfs/QmYJ7Cg4WmE3rR8KGQxjUCXFfTH6TcwZ2Z1f6tPrq7jHFr\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":{\"keccak256\":\"0x3b21ae06bf5957f73fa16754b0669c77b7abd8ba6c072d35c3281d446fdb86c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2db8e18505e86e02526847005d7287a33e397ed7fb9eaba3fd4a4a197add16e2\",\"dweb:/ipfs/QmW9BSuKTzHWHBNSHF4L8XfVuU1uJrP2vLg84YtBd8mL82\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354\",\"dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce\"]},\"@openzeppelin/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x3d6069be9b4c01fb81840fb9c2c4dc58dd6a6a4aafaa2c6837de8699574d84c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://720d6bb56ea0c4ef781c0bd65c5bd0541f5a46100163b2587170f97658d2deed\",\"dweb:/ipfs/QmTS2biLVPrv8CeeXCaKmkFxonMiRvc1LxiYBRYDAJHQUS\"]},\"@openzeppelin/contracts/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0xc6619957bcc6641fe8984bfaf9ff11a9e4b97d8149c0495f608f9a2416d7c5cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://543be67f7fa43b1b932637c1c7f12035f0f4b0f7ee2bd3c33841186f79c165c1\",\"dweb:/ipfs/QmSBPM2UVKbmJqWfD9i6hSiqbaE8TV4TSqfuiivziRRLKM\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts/token/ERC777/IERC777Recipient.sol\":{\"keccak256\":\"0x1a5d61db2733202ba361e6d6741cd2e662380e22b80e987eacfc91973f2267dc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04c0cd697050a6516b7779aa2343ad2d0e5217d8915ac2382681dfdf4e445be3\",\"dweb:/ipfs/QmPCBCZgm7pHBwwogE2F9NCN3UfTdLNhqc8UDEvw8kDzyA\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x809bc3edb4bcbef8263fa616c1b60ee0004b50a8a1bfa164d8f57fd31f520c58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b93a1e39a4a19eba1600b92c96f435442db88cac91e315c8291547a2a7bcfe2\",\"dweb:/ipfs/QmTm34KVe6uZBZwq8dZDNWwPcm24qBJdxqL3rPxBJ4LrMv\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"contracts/core/BaseAccount.sol\":{\"keccak256\":\"0xcc33bf670c4334f70c81ab92c03ded5ee4d28abedab06d458b2f234faceafb4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://985ce85b1e80872680db607f62fcf4becf9e2a356e7ea04b0209e4d4bc99fc48\",\"dweb:/ipfs/QmPZddeadd6n963XEeYvcyFSv6c7LcYaQ7G2LfckS7Fa3v\"]},\"contracts/core/Helpers.sol\":{\"keccak256\":\"0x0f5d5a052ba4cecc4699ca4eb0bd21787ab0a5122e3aaa33283e8009dcfba576\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0055598a026e7ab7fd22c900087c08552bfec84350854f337be786191ff571b5\",\"dweb:/ipfs/QmcVFLLLSM2TyaXKbuA718EJygHkvUBgJiAkC6rqCXjMoM\"]},\"contracts/interfaces/IAccount.sol\":{\"keccak256\":\"0x5f95f26f95b7638a679d246e4f88f8bce752c1a2da43d3672db9683584f41949\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f303a98a037054c57eb30a39a90de2339caeca2f244b4bcfd362bd80d68c9c52\",\"dweb:/ipfs/QmTSggTuH1VDj8LvZVG3mY8RupWdCCSwvuQ27Lfmeh5hfC\"]},\"contracts/interfaces/IAggregator.sol\":{\"keccak256\":\"0x882c23df83ff9eb7b6d8da9a0a2aace7ae05ceb5045bab3bcfd8424ad5e3fb94\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26515cb73553340a1347de257e9ec18176c4e1d0743f2b45b192e62fb5da9db2\",\"dweb:/ipfs/QmcVSodmViGq7QR41fzuVkxgzUfoKp14SP42EYeURPudL6\"]},\"contracts/interfaces/IEntryPoint.sol\":{\"keccak256\":\"0x789c29158831da49cb68476ed9fd474b3a96fd07833f9d01c52d96662d7ee5aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1d627a6cd0b63376627e13042f01cdf780150622443a272922f8cd9762cf86b\",\"dweb:/ipfs/Qmci2frpA8wJfmCT7p88LJSh3765WLHCL1EZbpb8C7rkWz\"]},\"contracts/interfaces/INonceManager.sol\":{\"keccak256\":\"0x559e47ae829da7b717f04aad27ea24cad0d3590dcefb71d3b5f19a79f4ad1069\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a193c6d6e35145860e9034f21302be5352239bb92d0cfb0d2a7d0dbb4d4267a2\",\"dweb:/ipfs/QmVuBq5LYBwCXXUdipdomxq82v2ybh73sBCm89AW1vvg6W\"]},\"contracts/interfaces/IStakeManager.sol\":{\"keccak256\":\"0x68fdee5452a594c7f5f2dd80b3637e9cad71fbad4b255d60cd2fa2d98290fb56\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://82407c1d978530b1f4de0abc0c03044e7b618baeb6e090612250863d94307671\",\"dweb:/ipfs/QmYYyZE2j9XVAPxoZXwMx3HGkG8XQ4C8y55dDWLMSrYJZy\"]},\"contracts/interfaces/UserOperation.sol\":{\"keccak256\":\"0x54bfc3bb0ec261c343803cadb5ba08befc65ad40d6e6d6417cb267d1e1437aaf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a115de9d38f45b40cbccdda415d43ac2efb618afcd4d4dab1d434b48b537df3\",\"dweb:/ipfs/QmehKyXL5gWE4FkwrB5QAfDzqFcTWjBUk2nULb3WoBDXcN\"]},\"contracts/samples/SimpleAccount.sol\":{\"keccak256\":\"0x43dd278289640f8ee04f772efed7ff8b6ea26fa968e17765d04b2fefe4da2591\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a0ee6be695a1c57c0481eebbe5a81e992d40985a5483cde9d8bb63ebdd8f7fc\",\"dweb:/ipfs/QmQKrSTedLNpbvstdqpPVqb6ZVecJ4BVaXamasHD65QB12\"]},\"contracts/samples/callback/TokenCallbackHandler.sol\":{\"keccak256\":\"0xe36d84f455b497f6eb7f7058a319c5a679900f499c4f5e1d048f3d762a7da5a6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d9232444f7b34f7a42f8acffd375042c00f75439c37099fe0e609ab17462ace1\",\"dweb:/ipfs/QmPcQAaTy6tiHKyTwMcWPuAM4ypVqpZiijir8h1is1ycuQ\"]}},\"version\":1}"}},"contracts/samples/SimpleAccountFactory.sol":{"SimpleAccountFactory":{"abi":[{"inputs":[{"internalType":"contract IEntryPoint","name":"_entryPoint","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"walletId","type":"uint256"},{"indexed":false,"internalType":"address","name":"addr","type":"address"}],"name":"Created","type":"event"},{"inputs":[],"name":"accountImplementation","outputs":[{"internalType":"contract SimpleAccount","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint32","name":"unstakeDelaySec","type":"uint32"}],"name":"addStake","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"salt","type":"uint256"}],"name":"createAccount","outputs":[{"internalType":"contract SimpleAccount","name":"ret","type":"address"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"entryPoint","outputs":[{"internalType":"contract IEntryPoint","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"salt","type":"uint256"}],"name":"getAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_4448":{"entryPoint":null,"id":4448,"parameterSlots":1,"returnSlots":0},"abi_decode_tuple_t_contract$_IEntryPoint_$3605_fromMemory":{"entryPoint":141,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_IEntryPoint_$3605__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:554:34","statements":[{"nodeType":"YulBlock","src":"6:3:34","statements":[]},{"body":{"nodeType":"YulBlock","src":"115:209:34","statements":[{"body":{"nodeType":"YulBlock","src":"161:16:34","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"170:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"173:1:34","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"163:6:34"},"nodeType":"YulFunctionCall","src":"163:12:34"},"nodeType":"YulExpressionStatement","src":"163:12:34"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"136:7:34"},{"name":"headStart","nodeType":"YulIdentifier","src":"145:9:34"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"132:3:34"},"nodeType":"YulFunctionCall","src":"132:23:34"},{"kind":"number","nodeType":"YulLiteral","src":"157:2:34","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"128:3:34"},"nodeType":"YulFunctionCall","src":"128:32:34"},"nodeType":"YulIf","src":"125:52:34"},{"nodeType":"YulVariableDeclaration","src":"186:29:34","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"205:9:34"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"199:5:34"},"nodeType":"YulFunctionCall","src":"199:16:34"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"190:5:34","type":""}]},{"body":{"nodeType":"YulBlock","src":"278:16:34","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"287:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"290:1:34","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"280:6:34"},"nodeType":"YulFunctionCall","src":"280:12:34"},"nodeType":"YulExpressionStatement","src":"280:12:34"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"237:5:34"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"248:5:34"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"263:3:34","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"268:1:34","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"259:3:34"},"nodeType":"YulFunctionCall","src":"259:11:34"},{"kind":"number","nodeType":"YulLiteral","src":"272:1:34","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"255:3:34"},"nodeType":"YulFunctionCall","src":"255:19:34"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"244:3:34"},"nodeType":"YulFunctionCall","src":"244:31:34"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"234:2:34"},"nodeType":"YulFunctionCall","src":"234:42:34"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"227:6:34"},"nodeType":"YulFunctionCall","src":"227:50:34"},"nodeType":"YulIf","src":"224:70:34"},{"nodeType":"YulAssignment","src":"303:15:34","value":{"name":"value","nodeType":"YulIdentifier","src":"313:5:34"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"303:6:34"}]}]},"name":"abi_decode_tuple_t_contract$_IEntryPoint_$3605_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"81:9:34","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"92:7:34","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"104:6:34","type":""}],"src":"14:310:34"},{"body":{"nodeType":"YulBlock","src":"450:102:34","statements":[{"nodeType":"YulAssignment","src":"460:26:34","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"472:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"483:2:34","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"468:3:34"},"nodeType":"YulFunctionCall","src":"468:18:34"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"460:4:34"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"502:9:34"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"517:6:34"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"533:3:34","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"538:1:34","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"529:3:34"},"nodeType":"YulFunctionCall","src":"529:11:34"},{"kind":"number","nodeType":"YulLiteral","src":"542:1:34","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"525:3:34"},"nodeType":"YulFunctionCall","src":"525:19:34"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"513:3:34"},"nodeType":"YulFunctionCall","src":"513:32:34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"495:6:34"},"nodeType":"YulFunctionCall","src":"495:51:34"},"nodeType":"YulExpressionStatement","src":"495:51:34"}]},"name":"abi_encode_tuple_t_contract$_IEntryPoint_$3605__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"419:9:34","type":""},{"name":"value0","nodeType":"YulTypedName","src":"430:6:34","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"441:4:34","type":""}],"src":"329:223:34"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_contract$_IEntryPoint_$3605_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_contract$_IEntryPoint_$3605__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n}","id":34,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60c060405234801561001057600080fd5b5060405161352338038061352383398101604081905261002f9161008d565b8060405161003c90610080565b6001600160a01b039091168152602001604051809103906000f080158015610068573d6000803e3d6000fd5b506001600160a01b039081166080521660a0526100bd565b6125a680610f7d83390190565b60006020828403121561009f57600080fd5b81516001600160a01b03811681146100b657600080fd5b9392505050565b60805160a051610e876100f66000396000818161013c015261019201526000818160930152818161027601526104200152610e876000f3fe608060405260043610620000615760003560e01c80635fbfb9cf11620000485780635fbfb9cf14620000de5780638cb84e181462000103578063b0d691fe146200012857600080fd5b80630396cb60146200006657806311464fbe146200007f575b600080fd5b6200007d620000773660046200056c565b6200015e565b005b3480156200008c57600080fd5b50620000b57f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b348015620000eb57600080fd5b50620000b5620000fd36600462000594565b6200020a565b3480156200011057600080fd5b50620000b56200012236600462000594565b620003b3565b3480156200013557600080fd5b50620000b57f000000000000000000000000000000000000000000000000000000000000000081565b6040517f0396cb6000000000000000000000000000000000000000000000000000000000815263ffffffff821660048201527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1690630396cb609034906024016000604051808303818588803b158015620001ed57600080fd5b505af115801562000202573d6000803e3d6000fd5b505050505050565b6000806200021760005490565b90506000620002278585620003b3565b905073ffffffffffffffffffffffffffffffffffffffff81163b80156200025357509150620003ad9050565b60405173ffffffffffffffffffffffffffffffffffffffff8716602482015285907f000000000000000000000000000000000000000000000000000000000000000090604401604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fc4d66de800000000000000000000000000000000000000000000000000000000179052516200031b906200055e565b6200032892919062000601565b8190604051809103906000f590508015801562000349573d6000803e3d6000fd5b5093506200035b600080546001019055565b6040805184815273ffffffffffffffffffffffffffffffffffffffff841660208201527f7757890bcab34d673dfca6b71df1b57f75a2fe4231d6e8de726caf534ab1fdd6910160405180910390a15050505b92915050565b6000620005248260001b60405180602001620003cf906200055e565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe082820381018352601f90910116604081905273ffffffffffffffffffffffffffffffffffffffff871660248201527f000000000000000000000000000000000000000000000000000000000000000090604401604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152918152602080830180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fc4d66de8000000000000000000000000000000000000000000000000000000001790529051620004ca9392910162000601565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529082905262000508929160200162000671565b604051602081830303815290604052805190602001206200052b565b9392505050565b6000620005248383306000604051836040820152846020820152828152600b8101905060ff815360559020949350505050565b6107ad80620006a583390190565b6000602082840312156200057f57600080fd5b813563ffffffff811681146200052457600080fd5b60008060408385031215620005a857600080fd5b823573ffffffffffffffffffffffffffffffffffffffff81168114620005cd57600080fd5b946020939093013593505050565b60005b83811015620005f8578181015183820152602001620005de565b50506000910152565b73ffffffffffffffffffffffffffffffffffffffff8316815260406020820152600082518060408401526200063e816060850160208701620005db565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016919091016060019392505050565b6000835162000685818460208801620005db565b8351908301906200069b818360208801620005db565b0194935050505056fe60806040526040516107ad3803806107ad83398101604081905261002291610319565b61002e82826000610035565b5050610436565b61003e8361006b565b60008251118061004b5750805b156100665761006483836100ab60201b6100291760201c565b505b505050565b610074816100d7565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606100d08383604051806060016040528060278152602001610786602791396101a9565b9392505050565b6100ea8161022260201b6100551760201c565b6101515760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b60648201526084015b60405180910390fd5b806101887f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b61023160201b6100711760201c565b80546001600160a01b0319166001600160a01b039290921691909117905550565b6060600080856001600160a01b0316856040516101c691906103e7565b600060405180830381855af49150503d8060008114610201576040519150601f19603f3d011682016040523d82523d6000602084013e610206565b606091505b50909250905061021886838387610234565b9695505050505050565b6001600160a01b03163b151590565b90565b606083156102a357825160000361029c576001600160a01b0385163b61029c5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610148565b50816102ad565b6102ad83836102b5565b949350505050565b8151156102c55781518083602001fd5b8060405162461bcd60e51b81526004016101489190610403565b634e487b7160e01b600052604160045260246000fd5b60005b838110156103105781810151838201526020016102f8565b50506000910152565b6000806040838503121561032c57600080fd5b82516001600160a01b038116811461034357600080fd5b60208401519092506001600160401b038082111561036057600080fd5b818501915085601f83011261037457600080fd5b815181811115610386576103866102df565b604051601f8201601f19908116603f011681019083821181831017156103ae576103ae6102df565b816040528281528860208487010111156103c757600080fd5b6103d88360208301602088016102f5565b80955050505050509250929050565b600082516103f98184602087016102f5565b9190910192915050565b60208152600082518060208401526104228160408501602087016102f5565b601f01601f19169190910160400192915050565b610341806104456000396000f3fe60806040523661001357610011610017565b005b6100115b610027610022610074565b6100b9565b565b606061004e83836040518060600160405280602781526020016102e5602791396100dd565b9392505050565b73ffffffffffffffffffffffffffffffffffffffff163b151590565b90565b60006100b47f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5473ffffffffffffffffffffffffffffffffffffffff1690565b905090565b3660008037600080366000845af43d6000803e8080156100d8573d6000f35b3d6000fd5b60606000808573ffffffffffffffffffffffffffffffffffffffff16856040516101079190610277565b600060405180830381855af49150503d8060008114610142576040519150601f19603f3d011682016040523d82523d6000602084013e610147565b606091505b509150915061015886838387610162565b9695505050505050565b606083156101fd5782516000036101f65773ffffffffffffffffffffffffffffffffffffffff85163b6101f6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064015b60405180910390fd5b5081610207565b610207838361020f565b949350505050565b81511561021f5781518083602001fd5b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101ed9190610293565b60005b8381101561026e578181015183820152602001610256565b50506000910152565b60008251610289818460208701610253565b9190910192915050565b60208152600082518060208401526102b2816040850160208701610253565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016919091016040019291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220b6d490c7b0f7d19828a449ea9a4cecbee2e462a603d4de127808117591d9f02564736f6c63430008120033416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220eb3ce247c401307168a8b677733675e96f6f6a51720a8840db994054877dea1764736f6c6343000812003360c0604052306080523480156200001557600080fd5b50604051620025a6380380620025a6833981016040819052620000389162000117565b6001600160a01b03811660a0526200004f62000056565b5062000149565b600054610100900460ff1615620000c35760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60005460ff9081161462000115576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b6000602082840312156200012a57600080fd5b81516001600160a01b03811681146200014257600080fd5b9392505050565b60805160a0516123ea620001bc6000396000818161032f015281816108810152818161092801528181610d4c01528181610f9d01528181610fe40152818161133601526115c801526000818161066b0152818161071b015281816109ec01528181610a9c0152610be501526123ea6000f3fe60806040526004361061012c5760003560e01c806352d1902d116100a5578063bc197c8111610074578063c4d66de811610059578063c4d66de8146103d0578063d087d288146103f0578063f23a6e611461040557600080fd5b8063bc197c8114610373578063c399ec88146103bb57600080fd5b806352d1902d146102b35780638da5cb5b146102c8578063b0d691fe14610320578063b61d27f61461035357600080fd5b80633659cfe6116100fc5780634a58db19116100e15780634a58db19146102785780634d44560d146102805780634f1ef286146102a057600080fd5b80633659cfe61461022a5780633a871cdd1461024a57600080fd5b806223de291461013857806301ffc9a71461015f578063150b7a021461019457806318dfb3c71461020a57600080fd5b3661013357005b600080fd5b34801561014457600080fd5b5061015d610153366004611c92565b5050505050505050565b005b34801561016b57600080fd5b5061017f61017a366004611d43565b61044b565b60405190151581526020015b60405180910390f35b3480156101a057600080fd5b506101d96101af366004611d85565b7f150b7a020000000000000000000000000000000000000000000000000000000095945050505050565b6040517fffffffff00000000000000000000000000000000000000000000000000000000909116815260200161018b565b34801561021657600080fd5b5061015d610225366004611e3d565b610530565b34801561023657600080fd5b5061015d610245366004611ea9565b610654565b34801561025657600080fd5b5061026a610265366004611ec6565b610859565b60405190815260200161018b565b61015d61087f565b34801561028c57600080fd5b5061015d61029b366004611f1a565b61091e565b61015d6102ae366004611f75565b6109d5565b3480156102bf57600080fd5b5061026a610bcb565b3480156102d457600080fd5b506000546102fb9062010000900473ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161018b565b34801561032c57600080fd5b507f00000000000000000000000000000000000000000000000000000000000000006102fb565b34801561035f57600080fd5b5061015d61036e366004612057565b610cb7565b34801561037f57600080fd5b506101d961038e3660046120a7565b7fbc197c810000000000000000000000000000000000000000000000000000000098975050505050505050565b3480156103c757600080fd5b5061026a610d06565b3480156103dc57600080fd5b5061015d6103eb366004611ea9565b610dbd565b3480156103fc57600080fd5b5061026a610f50565b34801561041157600080fd5b506101d9610420366004612145565b7ff23a6e61000000000000000000000000000000000000000000000000000000009695505050505050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f150b7a020000000000000000000000000000000000000000000000000000000014806104de57507fffffffff0000000000000000000000000000000000000000000000000000000082167f4e2312e000000000000000000000000000000000000000000000000000000000145b8061052a57507fffffffff0000000000000000000000000000000000000000000000000000000082167f01ffc9a700000000000000000000000000000000000000000000000000000000145b92915050565b610538610fcc565b8281146105a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f77726f6e67206172726179206c656e677468730000000000000000000000000060448201526064015b60405180910390fd5b60005b8381101561064d5761063b8585838181106105c6576105c66121c1565b90506020020160208101906105db9190611ea9565b60008585858181106105ef576105ef6121c1565b905060200281019061060191906121f0565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061109592505050565b8061064581612255565b9150506105a9565b5050505050565b73ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000163003610719576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201527f64656c656761746563616c6c0000000000000000000000000000000000000000606482015260840161059d565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1661078e7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5473ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff1614610831576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201527f6163746976652070726f78790000000000000000000000000000000000000000606482015260840161059d565b61083a81611112565b604080516000808252602082019092526108569183919061111a565b50565b600061086361131e565b61086d84846113bd565b905061087882611476565b9392505050565b7f00000000000000000000000000000000000000000000000000000000000000006040517fb760faf900000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff919091169063b760faf99034906024016000604051808303818588803b15801561090a57600080fd5b505af115801561064d573d6000803e3d6000fd5b6109266114e1565b7f00000000000000000000000000000000000000000000000000000000000000006040517f205c287800000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff848116600483015260248201849052919091169063205c287890604401600060405180830381600087803b1580156109b957600080fd5b505af11580156109cd573d6000803e3d6000fd5b505050505050565b73ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000163003610a9a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201527f64656c656761746563616c6c0000000000000000000000000000000000000000606482015260840161059d565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16610b0f7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5473ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff1614610bb2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201527f6163746976652070726f78790000000000000000000000000000000000000000606482015260840161059d565b610bbb82611112565b610bc78282600161111a565b5050565b60003073ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614610c92576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c0000000000000000606482015260840161059d565b507f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc90565b610cbf610fcc565b610d00848484848080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061109592505050565b50505050565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009073ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016906370a08231906024015b602060405180830381865afa158015610d94573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610db891906122b4565b905090565b600054610100900460ff1615808015610ddd5750600054600160ff909116105b80610df75750303b158015610df7575060005460ff166001145b610e83576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a6564000000000000000000000000000000000000606482015260840161059d565b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011790558015610ee157600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff166101001790555b610eea82611572565b8015610bc757600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15050565b6040517f35567e1a0000000000000000000000000000000000000000000000000000000081523060048201526000602482018190529073ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016906335567e1a90604401610d77565b3373ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016148061102d575060005462010000900473ffffffffffffffffffffffffffffffffffffffff1633145b611093576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f6163636f756e743a206e6f74204f776e6572206f7220456e747279506f696e74604482015260640161059d565b565b6000808473ffffffffffffffffffffffffffffffffffffffff1684846040516110be91906122f1565b60006040518083038185875af1925050503d80600081146110fb576040519150601f19603f3d011682016040523d82523d6000602084013e611100565b606091505b50915091508161064d57805160208201fd5b6108566114e1565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff16156111525761114d83611611565b505050565b8273ffffffffffffffffffffffffffffffffffffffff166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa9250505080156111d7575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682019092526111d4918101906122b4565b60015b611263576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201527f6f6e206973206e6f742055555053000000000000000000000000000000000000606482015260840161059d565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc8114611312576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f7860448201527f6961626c65555549440000000000000000000000000000000000000000000000606482015260840161059d565b5061114d83838361171b565b3373ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614611093576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f6163636f756e743a206e6f742066726f6d20456e747279506f696e7400000000604482015260640161059d565b7f19457468657265756d205369676e6564204d6573736167653a0a3332000000006000908152601c829052603c812061143a6113fd6101408601866121f0565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525085939250506117409050565b60005462010000900473ffffffffffffffffffffffffffffffffffffffff90811691161461146c57600191505061052a565b5060009392505050565b80156108565760405160009033907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90849084818181858888f193505050503d806000811461064d576040519150601f19603f3d011682016040523d82523d6000602084013e61064d565b60005462010000900473ffffffffffffffffffffffffffffffffffffffff1633148061150c57503330145b611093576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f6f6e6c79206f776e657200000000000000000000000000000000000000000000604482015260640161059d565b600080547fffffffffffffffffffff0000000000000000000000000000000000000000ffff166201000073ffffffffffffffffffffffffffffffffffffffff8481168202929092178084556040519190048216927f0000000000000000000000000000000000000000000000000000000000000000909216917f47e55c76e7a6f1fd8996a1da8008c1ea29699cca35e7bcd057f2dec313b6e5de91a350565b73ffffffffffffffffffffffffffffffffffffffff81163b6116b5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201527f6f74206120636f6e747261637400000000000000000000000000000000000000606482015260840161059d565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b61172483611764565b6000825111806117315750805b1561114d57610d0083836117b1565b600080600061174f85856117d6565b9150915061175c8161181b565b509392505050565b61176d81611611565b60405173ffffffffffffffffffffffffffffffffffffffff8216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b6060610878838360405180606001604052806027815260200161238e602791396119ce565b600080825160410361180c5760208301516040840151606085015160001a61180087828585611a53565b94509450505050611814565b506000905060025b9250929050565b600081600481111561182f5761182f61230d565b036118375750565b600181600481111561184b5761184b61230d565b036118b2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f45434453413a20696e76616c6964207369676e61747572650000000000000000604482015260640161059d565b60028160048111156118c6576118c661230d565b0361192d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e67746800604482015260640161059d565b60038160048111156119415761194161230d565b03610856576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c60448201527f7565000000000000000000000000000000000000000000000000000000000000606482015260840161059d565b60606000808573ffffffffffffffffffffffffffffffffffffffff16856040516119f891906122f1565b600060405180830381855af49150503d8060008114611a33576040519150601f19603f3d011682016040523d82523d6000602084013e611a38565b606091505b5091509150611a4986838387611b42565b9695505050505050565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115611a8a5750600090506003611b39565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015611ade573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015191505073ffffffffffffffffffffffffffffffffffffffff8116611b3257600060019250925050611b39565b9150600090505b94509492505050565b60608315611bd8578251600003611bd15773ffffffffffffffffffffffffffffffffffffffff85163b611bd1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161059d565b5081611be2565b611be28383611bea565b949350505050565b815115611bfa5781518083602001fd5b806040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161059d919061233c565b73ffffffffffffffffffffffffffffffffffffffff8116811461085657600080fd5b60008083601f840112611c6257600080fd5b50813567ffffffffffffffff811115611c7a57600080fd5b60208301915083602082850101111561181457600080fd5b60008060008060008060008060c0898b031215611cae57600080fd5b8835611cb981611c2e565b97506020890135611cc981611c2e565b96506040890135611cd981611c2e565b955060608901359450608089013567ffffffffffffffff80821115611cfd57600080fd5b611d098c838d01611c50565b909650945060a08b0135915080821115611d2257600080fd5b50611d2f8b828c01611c50565b999c989b5096995094979396929594505050565b600060208284031215611d5557600080fd5b81357fffffffff000000000000000000000000000000000000000000000000000000008116811461087857600080fd5b600080600080600060808688031215611d9d57600080fd5b8535611da881611c2e565b94506020860135611db881611c2e565b935060408601359250606086013567ffffffffffffffff811115611ddb57600080fd5b611de788828901611c50565b969995985093965092949392505050565b60008083601f840112611e0a57600080fd5b50813567ffffffffffffffff811115611e2257600080fd5b6020830191508360208260051b850101111561181457600080fd5b60008060008060408587031215611e5357600080fd5b843567ffffffffffffffff80821115611e6b57600080fd5b611e7788838901611df8565b90965094506020870135915080821115611e9057600080fd5b50611e9d87828801611df8565b95989497509550505050565b600060208284031215611ebb57600080fd5b813561087881611c2e565b600080600060608486031215611edb57600080fd5b833567ffffffffffffffff811115611ef257600080fd5b84016101608187031215611f0557600080fd5b95602085013595506040909401359392505050565b60008060408385031215611f2d57600080fd5b8235611f3881611c2e565b946020939093013593505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60008060408385031215611f8857600080fd5b8235611f9381611c2e565b9150602083013567ffffffffffffffff80821115611fb057600080fd5b818501915085601f830112611fc457600080fd5b813581811115611fd657611fd6611f46565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f0116810190838211818310171561201c5761201c611f46565b8160405282815288602084870101111561203557600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b6000806000806060858703121561206d57600080fd5b843561207881611c2e565b935060208501359250604085013567ffffffffffffffff81111561209b57600080fd5b611e9d87828801611c50565b60008060008060008060008060a0898b0312156120c357600080fd5b88356120ce81611c2e565b975060208901356120de81611c2e565b9650604089013567ffffffffffffffff808211156120fb57600080fd5b6121078c838d01611df8565b909850965060608b013591508082111561212057600080fd5b61212c8c838d01611df8565b909650945060808b0135915080821115611d2257600080fd5b60008060008060008060a0878903121561215e57600080fd5b863561216981611c2e565b9550602087013561217981611c2e565b94506040870135935060608701359250608087013567ffffffffffffffff8111156121a357600080fd5b6121af89828a01611c50565b979a9699509497509295939492505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261222557600080fd5b83018035915067ffffffffffffffff82111561224057600080fd5b60200191503681900382131561181457600080fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036122ad577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b5060010190565b6000602082840312156122c657600080fd5b5051919050565b60005b838110156122e85781810151838201526020016122d0565b50506000910152565b600082516123038184602087016122cd565b9190910192915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b602081526000825180602084015261235b8160408501602087016122cd565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016919091016040019291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a264697066735822122014e1cbcd9a6655a444f8eb73ceb55ace8aa8f9628fb9e13f39143adc3483262c64736f6c63430008120033","opcodes":"PUSH1 0xC0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x3523 CODESIZE SUB DUP1 PUSH2 0x3523 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0x8D JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH2 0x3C SWAP1 PUSH2 0x80 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH2 0x68 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x80 MSTORE AND PUSH1 0xA0 MSTORE PUSH2 0xBD JUMP JUMPDEST PUSH2 0x25A6 DUP1 PUSH2 0xF7D DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xB6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH2 0xE87 PUSH2 0xF6 PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x13C ADD MSTORE PUSH2 0x192 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH1 0x93 ADD MSTORE DUP2 DUP2 PUSH2 0x276 ADD MSTORE PUSH2 0x420 ADD MSTORE PUSH2 0xE87 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH3 0x61 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5FBFB9CF GT PUSH3 0x48 JUMPI DUP1 PUSH4 0x5FBFB9CF EQ PUSH3 0xDE JUMPI DUP1 PUSH4 0x8CB84E18 EQ PUSH3 0x103 JUMPI DUP1 PUSH4 0xB0D691FE EQ PUSH3 0x128 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x396CB60 EQ PUSH3 0x66 JUMPI DUP1 PUSH4 0x11464FBE EQ PUSH3 0x7F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x7D PUSH3 0x77 CALLDATASIZE PUSH1 0x4 PUSH3 0x56C JUMP JUMPDEST PUSH3 0x15E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x8C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0xB5 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0xEB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0xB5 PUSH3 0xFD CALLDATASIZE PUSH1 0x4 PUSH3 0x594 JUMP JUMPDEST PUSH3 0x20A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x110 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0xB5 PUSH3 0x122 CALLDATASIZE PUSH1 0x4 PUSH3 0x594 JUMP JUMPDEST PUSH3 0x3B3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x135 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0xB5 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x396CB6000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH4 0xFFFFFFFF DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH4 0x396CB60 SWAP1 CALLVALUE SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x1ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x202 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH3 0x217 PUSH1 0x0 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH3 0x227 DUP6 DUP6 PUSH3 0x3B3 JUMP JUMPDEST SWAP1 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND EXTCODESIZE DUP1 ISZERO PUSH3 0x253 JUMPI POP SWAP2 POP PUSH3 0x3AD SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND PUSH1 0x24 DUP3 ADD MSTORE DUP6 SWAP1 PUSH32 0x0 SWAP1 PUSH1 0x44 ADD PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC4D66DE800000000000000000000000000000000000000000000000000000000 OR SWAP1 MSTORE MLOAD PUSH3 0x31B SWAP1 PUSH3 0x55E JUMP JUMPDEST PUSH3 0x328 SWAP3 SWAP2 SWAP1 PUSH3 0x601 JUMP JUMPDEST DUP2 SWAP1 PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE2 SWAP1 POP DUP1 ISZERO DUP1 ISZERO PUSH3 0x349 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP SWAP4 POP PUSH3 0x35B PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x7757890BCAB34D673DFCA6B71DF1B57F75A2FE4231D6E8DE726CAF534AB1FDD6 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x524 DUP3 PUSH1 0x0 SHL PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH3 0x3CF SWAP1 PUSH3 0x55E JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP3 DUP3 SUB DUP2 ADD DUP4 MSTORE PUSH1 0x1F SWAP1 SWAP2 ADD AND PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x0 SWAP1 PUSH1 0x44 ADD PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP1 DUP4 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC4D66DE800000000000000000000000000000000000000000000000000000000 OR SWAP1 MSTORE SWAP1 MLOAD PUSH3 0x4CA SWAP4 SWAP3 SWAP2 ADD PUSH3 0x601 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH3 0x508 SWAP3 SWAP2 PUSH1 0x20 ADD PUSH3 0x671 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH3 0x52B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x524 DUP4 DUP4 ADDRESS PUSH1 0x0 PUSH1 0x40 MLOAD DUP4 PUSH1 0x40 DUP3 ADD MSTORE DUP5 PUSH1 0x20 DUP3 ADD MSTORE DUP3 DUP2 MSTORE PUSH1 0xB DUP2 ADD SWAP1 POP PUSH1 0xFF DUP2 MSTORE8 PUSH1 0x55 SWAP1 KECCAK256 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x7AD DUP1 PUSH3 0x6A5 DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x57F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH4 0xFFFFFFFF DUP2 AND DUP2 EQ PUSH3 0x524 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x5A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH3 0x5CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x5F8 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH3 0x5DE JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x40 DUP5 ADD MSTORE PUSH3 0x63E DUP2 PUSH1 0x60 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH3 0x5DB JUMP JUMPDEST PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x60 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH3 0x685 DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH3 0x5DB JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH3 0x69B DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH3 0x5DB JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x7AD CODESIZE SUB DUP1 PUSH2 0x7AD DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x22 SWAP2 PUSH2 0x319 JUMP JUMPDEST PUSH2 0x2E DUP3 DUP3 PUSH1 0x0 PUSH2 0x35 JUMP JUMPDEST POP POP PUSH2 0x436 JUMP JUMPDEST PUSH2 0x3E DUP4 PUSH2 0x6B JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT DUP1 PUSH2 0x4B JUMPI POP DUP1 JUMPDEST ISZERO PUSH2 0x66 JUMPI PUSH2 0x64 DUP4 DUP4 PUSH2 0xAB PUSH1 0x20 SHL PUSH2 0x29 OR PUSH1 0x20 SHR JUMP JUMPDEST POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x74 DUP2 PUSH2 0xD7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xD0 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x786 PUSH1 0x27 SWAP2 CODECOPY PUSH2 0x1A9 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xEA DUP2 PUSH2 0x222 PUSH1 0x20 SHL PUSH2 0x55 OR PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x151 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720696D706C656D656E746174696F6E206973206E PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x1BDD08184818DBDB9D1C9858DD PUSH1 0x9A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH2 0x188 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL PUSH2 0x231 PUSH1 0x20 SHL PUSH2 0x71 OR PUSH1 0x20 SHR JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x40 MLOAD PUSH2 0x1C6 SWAP2 SWAP1 PUSH2 0x3E7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x201 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x206 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x218 DUP7 DUP4 DUP4 DUP8 PUSH2 0x234 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x2A3 JUMPI DUP3 MLOAD PUSH1 0x0 SUB PUSH2 0x29C JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH2 0x29C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x148 JUMP JUMPDEST POP DUP2 PUSH2 0x2AD JUMP JUMPDEST PUSH2 0x2AD DUP4 DUP4 PUSH2 0x2B5 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP2 MLOAD ISZERO PUSH2 0x2C5 JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x148 SWAP2 SWAP1 PUSH2 0x403 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x310 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2F8 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x32C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x343 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP5 ADD MLOAD SWAP1 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x360 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x374 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x386 JUMPI PUSH2 0x386 PUSH2 0x2DF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x3AE JUMPI PUSH2 0x3AE PUSH2 0x2DF JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP9 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x3C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3D8 DUP4 PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x2F5 JUMP JUMPDEST DUP1 SWAP6 POP POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x3F9 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x2F5 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x422 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x2F5 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x341 DUP1 PUSH2 0x445 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLDATASIZE PUSH2 0x13 JUMPI PUSH2 0x11 PUSH2 0x17 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x11 JUMPDEST PUSH2 0x27 PUSH2 0x22 PUSH2 0x74 JUMP JUMPDEST PUSH2 0xB9 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH2 0x4E DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2E5 PUSH1 0x27 SWAP2 CODECOPY PUSH2 0xDD JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB4 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST CALLDATASIZE PUSH1 0x0 DUP1 CALLDATACOPY PUSH1 0x0 DUP1 CALLDATASIZE PUSH1 0x0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY DUP1 DUP1 ISZERO PUSH2 0xD8 JUMPI RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH1 0x40 MLOAD PUSH2 0x107 SWAP2 SWAP1 PUSH2 0x277 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x142 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x147 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x158 DUP7 DUP4 DUP4 DUP8 PUSH2 0x162 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x1FD JUMPI DUP3 MLOAD PUSH1 0x0 SUB PUSH2 0x1F6 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND EXTCODESIZE PUSH2 0x1F6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP DUP2 PUSH2 0x207 JUMP JUMPDEST PUSH2 0x207 DUP4 DUP4 PUSH2 0x20F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP2 MLOAD ISZERO PUSH2 0x21F JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1ED SWAP2 SWAP1 PUSH2 0x293 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x26E JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x256 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x289 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x253 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x2B2 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x253 JUMP JUMPDEST PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP INVALID COINBASE PUSH5 0x6472657373 GASPRICE KECCAK256 PUSH13 0x6F772D6C6576656C2064656C65 PUSH8 0x6174652063616C6C KECCAK256 PUSH7 0x61696C6564A264 PUSH10 0x70667358221220B6D490 0xC7 0xB0 0xF7 0xD1 SWAP9 0x28 LOG4 0x49 0xEA SWAP11 0x4C 0xEC 0xBE 0xE2 0xE4 PUSH3 0xA603D4 0xDE SLT PUSH25 0x8117591D9F02564736F6C6343000812003341646472657373 GASPRICE KECCAK256 PUSH13 0x6F772D6C6576656C2064656C65 PUSH8 0x6174652063616C6C KECCAK256 PUSH7 0x61696C6564A264 PUSH10 0x70667358221220EB3CE2 SELFBALANCE 0xC4 ADD ADDRESS PUSH18 0x68A8B677733675E96F6F6A51720A8840DB99 BLOCKHASH SLOAD DUP8 PUSH30 0xEA1764736F6C6343000812003360C0604052306080523480156200001557 PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x25A6 CODESIZE SUB DUP1 PUSH3 0x25A6 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x38 SWAP2 PUSH3 0x117 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0xA0 MSTORE PUSH3 0x4F PUSH3 0x56 JUMP JUMPDEST POP PUSH3 0x149 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH3 0xC3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320696E697469 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x616C697A696E67 PUSH1 0xC8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0xFF SWAP1 DUP2 AND EQ PUSH3 0x115 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0xFF SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x12A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x142 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH2 0x23EA PUSH3 0x1BC PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x32F ADD MSTORE DUP2 DUP2 PUSH2 0x881 ADD MSTORE DUP2 DUP2 PUSH2 0x928 ADD MSTORE DUP2 DUP2 PUSH2 0xD4C ADD MSTORE DUP2 DUP2 PUSH2 0xF9D ADD MSTORE DUP2 DUP2 PUSH2 0xFE4 ADD MSTORE DUP2 DUP2 PUSH2 0x1336 ADD MSTORE PUSH2 0x15C8 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x66B ADD MSTORE DUP2 DUP2 PUSH2 0x71B ADD MSTORE DUP2 DUP2 PUSH2 0x9EC ADD MSTORE DUP2 DUP2 PUSH2 0xA9C ADD MSTORE PUSH2 0xBE5 ADD MSTORE PUSH2 0x23EA PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x52D1902D GT PUSH2 0xA5 JUMPI DUP1 PUSH4 0xBC197C81 GT PUSH2 0x74 JUMPI DUP1 PUSH4 0xC4D66DE8 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xC4D66DE8 EQ PUSH2 0x3D0 JUMPI DUP1 PUSH4 0xD087D288 EQ PUSH2 0x3F0 JUMPI DUP1 PUSH4 0xF23A6E61 EQ PUSH2 0x405 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xBC197C81 EQ PUSH2 0x373 JUMPI DUP1 PUSH4 0xC399EC88 EQ PUSH2 0x3BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x52D1902D EQ PUSH2 0x2B3 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2C8 JUMPI DUP1 PUSH4 0xB0D691FE EQ PUSH2 0x320 JUMPI DUP1 PUSH4 0xB61D27F6 EQ PUSH2 0x353 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3659CFE6 GT PUSH2 0xFC JUMPI DUP1 PUSH4 0x4A58DB19 GT PUSH2 0xE1 JUMPI DUP1 PUSH4 0x4A58DB19 EQ PUSH2 0x278 JUMPI DUP1 PUSH4 0x4D44560D EQ PUSH2 0x280 JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x2A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3659CFE6 EQ PUSH2 0x22A JUMPI DUP1 PUSH4 0x3A871CDD EQ PUSH2 0x24A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0x23DE29 EQ PUSH2 0x138 JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0x150B7A02 EQ PUSH2 0x194 JUMPI DUP1 PUSH4 0x18DFB3C7 EQ PUSH2 0x20A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x133 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x144 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15D PUSH2 0x153 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C92 JUMP JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x16B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17F PUSH2 0x17A CALLDATASIZE PUSH1 0x4 PUSH2 0x1D43 JUMP JUMPDEST PUSH2 0x44B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D9 PUSH2 0x1AF CALLDATASIZE PUSH1 0x4 PUSH2 0x1D85 JUMP JUMPDEST PUSH32 0x150B7A0200000000000000000000000000000000000000000000000000000000 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x18B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x216 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15D PUSH2 0x225 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E3D JUMP JUMPDEST PUSH2 0x530 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x236 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15D PUSH2 0x245 CALLDATASIZE PUSH1 0x4 PUSH2 0x1EA9 JUMP JUMPDEST PUSH2 0x654 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x256 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26A PUSH2 0x265 CALLDATASIZE PUSH1 0x4 PUSH2 0x1EC6 JUMP JUMPDEST PUSH2 0x859 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x18B JUMP JUMPDEST PUSH2 0x15D PUSH2 0x87F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15D PUSH2 0x29B CALLDATASIZE PUSH1 0x4 PUSH2 0x1F1A JUMP JUMPDEST PUSH2 0x91E JUMP JUMPDEST PUSH2 0x15D PUSH2 0x2AE CALLDATASIZE PUSH1 0x4 PUSH2 0x1F75 JUMP JUMPDEST PUSH2 0x9D5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26A PUSH2 0xBCB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH2 0x2FB SWAP1 PUSH3 0x10000 SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x18B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH32 0x0 PUSH2 0x2FB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x35F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15D PUSH2 0x36E CALLDATASIZE PUSH1 0x4 PUSH2 0x2057 JUMP JUMPDEST PUSH2 0xCB7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D9 PUSH2 0x38E CALLDATASIZE PUSH1 0x4 PUSH2 0x20A7 JUMP JUMPDEST PUSH32 0xBC197C8100000000000000000000000000000000000000000000000000000000 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26A PUSH2 0xD06 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15D PUSH2 0x3EB CALLDATASIZE PUSH1 0x4 PUSH2 0x1EA9 JUMP JUMPDEST PUSH2 0xDBD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26A PUSH2 0xF50 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x411 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D9 PUSH2 0x420 CALLDATASIZE PUSH1 0x4 PUSH2 0x2145 JUMP JUMPDEST PUSH32 0xF23A6E6100000000000000000000000000000000000000000000000000000000 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH32 0x150B7A0200000000000000000000000000000000000000000000000000000000 EQ DUP1 PUSH2 0x4DE JUMPI POP PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH32 0x4E2312E000000000000000000000000000000000000000000000000000000000 EQ JUMPDEST DUP1 PUSH2 0x52A JUMPI POP PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x538 PUSH2 0xFCC JUMP JUMPDEST DUP3 DUP2 EQ PUSH2 0x5A6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x77726F6E67206172726179206C656E6774687300000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x64D JUMPI PUSH2 0x63B DUP6 DUP6 DUP4 DUP2 DUP2 LT PUSH2 0x5C6 JUMPI PUSH2 0x5C6 PUSH2 0x21C1 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x5DB SWAP2 SWAP1 PUSH2 0x1EA9 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP6 DUP6 DUP2 DUP2 LT PUSH2 0x5EF JUMPI PUSH2 0x5EF PUSH2 0x21C1 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL DUP2 ADD SWAP1 PUSH2 0x601 SWAP2 SWAP1 PUSH2 0x21F0 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x1095 SWAP3 POP POP POP JUMP JUMPDEST DUP1 PUSH2 0x645 DUP2 PUSH2 0x2255 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x5A9 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND ADDRESS SUB PUSH2 0x719 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x64656C656761746563616C6C0000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x59D JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x78E PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x831 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6163746976652070726F78790000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x59D JUMP JUMPDEST PUSH2 0x83A DUP2 PUSH2 0x1112 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x856 SWAP2 DUP4 SWAP2 SWAP1 PUSH2 0x111A JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x863 PUSH2 0x131E JUMP JUMPDEST PUSH2 0x86D DUP5 DUP5 PUSH2 0x13BD JUMP JUMPDEST SWAP1 POP PUSH2 0x878 DUP3 PUSH2 0x1476 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x0 PUSH1 0x40 MLOAD PUSH32 0xB760FAF900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 SWAP1 SWAP2 AND SWAP1 PUSH4 0xB760FAF9 SWAP1 CALLVALUE SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x90A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x64D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH2 0x926 PUSH2 0x14E1 JUMP JUMPDEST PUSH32 0x0 PUSH1 0x40 MLOAD PUSH32 0x205C287800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE SWAP2 SWAP1 SWAP2 AND SWAP1 PUSH4 0x205C2878 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9CD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND ADDRESS SUB PUSH2 0xA9A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x64656C656761746563616C6C0000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x59D JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB0F PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBB2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6163746976652070726F78790000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x59D JUMP JUMPDEST PUSH2 0xBBB DUP3 PUSH2 0x1112 JUMP JUMPDEST PUSH2 0xBC7 DUP3 DUP3 PUSH1 0x1 PUSH2 0x111A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND EQ PUSH2 0xC92 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x555550535570677261646561626C653A206D757374206E6F742062652063616C PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6C6564207468726F7567682064656C656761746563616C6C0000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x59D JUMP JUMPDEST POP PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SWAP1 JUMP JUMPDEST PUSH2 0xCBF PUSH2 0xFCC JUMP JUMPDEST PUSH2 0xD00 DUP5 DUP5 DUP5 DUP5 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x1095 SWAP3 POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD94 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDB8 SWAP2 SWAP1 PUSH2 0x22B4 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 DUP1 ISZERO PUSH2 0xDDD JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xFF SWAP1 SWAP2 AND LT JUMPDEST DUP1 PUSH2 0xDF7 JUMPI POP ADDRESS EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDF7 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND PUSH1 0x1 EQ JUMPDEST PUSH2 0xE83 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x647920696E697469616C697A6564000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x59D JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND PUSH1 0x1 OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0xEE1 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FF AND PUSH2 0x100 OR SWAP1 SSTORE JUMPDEST PUSH2 0xEEA DUP3 PUSH2 0x1572 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xBC7 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FF AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x35567E1A00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x24 DUP3 ADD DUP2 SWAP1 MSTORE SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND SWAP1 PUSH4 0x35567E1A SWAP1 PUSH1 0x44 ADD PUSH2 0xD77 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND EQ DUP1 PUSH2 0x102D JUMPI POP PUSH1 0x0 SLOAD PUSH3 0x10000 SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ JUMPDEST PUSH2 0x1093 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6163636F756E743A206E6F74204F776E6572206F7220456E747279506F696E74 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x59D JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x10BE SWAP2 SWAP1 PUSH2 0x22F1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x10FB JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1100 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x64D JUMPI DUP1 MLOAD PUSH1 0x20 DUP3 ADD REVERT JUMPDEST PUSH2 0x856 PUSH2 0x14E1 JUMP JUMPDEST PUSH32 0x4910FDFA16FED3260ED0E7147F7CC6DA11A60208B5B9406D12A635614FFD9143 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1152 JUMPI PUSH2 0x114D DUP4 PUSH2 0x1611 JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x11D7 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x11D4 SWAP2 DUP2 ADD SWAP1 PUSH2 0x22B4 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1263 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A206E657720696D706C656D656E74617469 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F6E206973206E6F742055555053000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x59D JUMP JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP2 EQ PUSH2 0x1312 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A20756E737570706F727465642070726F78 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6961626C65555549440000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x59D JUMP JUMPDEST POP PUSH2 0x114D DUP4 DUP4 DUP4 PUSH2 0x171B JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND EQ PUSH2 0x1093 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6163636F756E743A206E6F742066726F6D20456E747279506F696E7400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x59D JUMP JUMPDEST PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1C DUP3 SWAP1 MSTORE PUSH1 0x3C DUP2 KECCAK256 PUSH2 0x143A PUSH2 0x13FD PUSH2 0x140 DUP7 ADD DUP7 PUSH2 0x21F0 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP DUP6 SWAP4 SWAP3 POP POP PUSH2 0x1740 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH3 0x10000 SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x146C JUMPI PUSH1 0x1 SWAP2 POP POP PUSH2 0x52A JUMP JUMPDEST POP PUSH1 0x0 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 ISZERO PUSH2 0x856 JUMPI PUSH1 0x40 MLOAD PUSH1 0x0 SWAP1 CALLER SWAP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP5 SWAP1 DUP5 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x64D JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x64D JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH3 0x10000 SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ DUP1 PUSH2 0x150C JUMPI POP CALLER ADDRESS EQ JUMPDEST PUSH2 0x1093 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6F6E6C79206F776E657200000000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x59D JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000FFFF AND PUSH3 0x10000 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP2 AND DUP3 MUL SWAP3 SWAP1 SWAP3 OR DUP1 DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 DIV DUP3 AND SWAP3 PUSH32 0x0 SWAP1 SWAP3 AND SWAP2 PUSH32 0x47E55C76E7A6F1FD8996A1DA8008C1EA29699CCA35E7BCD057F2DEC313B6E5DE SWAP2 LOG3 POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND EXTCODESIZE PUSH2 0x16B5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720696D706C656D656E746174696F6E206973206E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F74206120636F6E747261637400000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x59D JUMP JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x1724 DUP4 PUSH2 0x1764 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT DUP1 PUSH2 0x1731 JUMPI POP DUP1 JUMPDEST ISZERO PUSH2 0x114D JUMPI PUSH2 0xD00 DUP4 DUP4 PUSH2 0x17B1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x174F DUP6 DUP6 PUSH2 0x17D6 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x175C DUP2 PUSH2 0x181B JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x176D DUP2 PUSH2 0x1611 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x878 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x238E PUSH1 0x27 SWAP2 CODECOPY PUSH2 0x19CE JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 MLOAD PUSH1 0x41 SUB PUSH2 0x180C JUMPI PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x40 DUP5 ADD MLOAD PUSH1 0x60 DUP6 ADD MLOAD PUSH1 0x0 BYTE PUSH2 0x1800 DUP8 DUP3 DUP6 DUP6 PUSH2 0x1A53 JUMP JUMPDEST SWAP5 POP SWAP5 POP POP POP POP PUSH2 0x1814 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 POP PUSH1 0x2 JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x182F JUMPI PUSH2 0x182F PUSH2 0x230D JUMP JUMPDEST SUB PUSH2 0x1837 JUMPI POP JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x184B JUMPI PUSH2 0x184B PUSH2 0x230D JUMP JUMPDEST SUB PUSH2 0x18B2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E61747572650000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x59D JUMP JUMPDEST PUSH1 0x2 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x18C6 JUMPI PUSH2 0x18C6 PUSH2 0x230D JUMP JUMPDEST SUB PUSH2 0x192D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E6174757265206C656E67746800 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x59D JUMP JUMPDEST PUSH1 0x3 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1941 JUMPI PUSH2 0x1941 PUSH2 0x230D JUMP JUMPDEST SUB PUSH2 0x856 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E6174757265202773272076616C PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7565000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x59D JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH1 0x40 MLOAD PUSH2 0x19F8 SWAP2 SWAP1 PUSH2 0x22F1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1A33 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1A38 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1A49 DUP7 DUP4 DUP4 DUP8 PUSH2 0x1B42 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP4 GT ISZERO PUSH2 0x1A8A JUMPI POP PUSH1 0x0 SWAP1 POP PUSH1 0x3 PUSH2 0x1B39 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP1 DUP5 MSTORE DUP10 SWAP1 MSTORE PUSH1 0xFF DUP9 AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1ADE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 ADD MLOAD SWAP2 POP POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0x1B32 JUMPI PUSH1 0x0 PUSH1 0x1 SWAP3 POP SWAP3 POP POP PUSH2 0x1B39 JUMP JUMPDEST SWAP2 POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x1BD8 JUMPI DUP3 MLOAD PUSH1 0x0 SUB PUSH2 0x1BD1 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND EXTCODESIZE PUSH2 0x1BD1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x59D JUMP JUMPDEST POP DUP2 PUSH2 0x1BE2 JUMP JUMPDEST PUSH2 0x1BE2 DUP4 DUP4 PUSH2 0x1BEA JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP2 MLOAD ISZERO PUSH2 0x1BFA JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x59D SWAP2 SWAP1 PUSH2 0x233C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x856 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1C62 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1C7A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x1814 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP10 DUP12 SUB SLT ISZERO PUSH2 0x1CAE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP9 CALLDATALOAD PUSH2 0x1CB9 DUP2 PUSH2 0x1C2E JUMP JUMPDEST SWAP8 POP PUSH1 0x20 DUP10 ADD CALLDATALOAD PUSH2 0x1CC9 DUP2 PUSH2 0x1C2E JUMP JUMPDEST SWAP7 POP PUSH1 0x40 DUP10 ADD CALLDATALOAD PUSH2 0x1CD9 DUP2 PUSH2 0x1C2E JUMP JUMPDEST SWAP6 POP PUSH1 0x60 DUP10 ADD CALLDATALOAD SWAP5 POP PUSH1 0x80 DUP10 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1CFD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1D09 DUP13 DUP4 DUP14 ADD PUSH2 0x1C50 JUMP JUMPDEST SWAP1 SWAP7 POP SWAP5 POP PUSH1 0xA0 DUP12 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1D22 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D2F DUP12 DUP3 DUP13 ADD PUSH2 0x1C50 JUMP JUMPDEST SWAP10 SWAP13 SWAP9 SWAP12 POP SWAP7 SWAP10 POP SWAP5 SWAP8 SWAP4 SWAP7 SWAP3 SWAP6 SWAP5 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D55 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND DUP2 EQ PUSH2 0x878 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1D9D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0x1DA8 DUP2 PUSH2 0x1C2E JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH2 0x1DB8 DUP2 PUSH2 0x1C2E JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1DDB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1DE7 DUP9 DUP3 DUP10 ADD PUSH2 0x1C50 JUMP JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 POP SWAP3 SWAP5 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1E0A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1E22 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x1814 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x40 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1E53 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1E6B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1E77 DUP9 DUP4 DUP10 ADD PUSH2 0x1DF8 JUMP JUMPDEST SWAP1 SWAP7 POP SWAP5 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1E90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E9D DUP8 DUP3 DUP9 ADD PUSH2 0x1DF8 JUMP JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP6 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1EBB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x878 DUP2 PUSH2 0x1C2E JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1EDB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1EF2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 ADD PUSH2 0x160 DUP2 DUP8 SUB SLT ISZERO PUSH2 0x1F05 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1F2D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1F38 DUP2 PUSH2 0x1C2E JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1F88 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1F93 DUP2 PUSH2 0x1C2E JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1FB0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1FC4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x1FD6 JUMPI PUSH2 0x1FD6 PUSH2 0x1F46 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x201C JUMPI PUSH2 0x201C PUSH2 0x1F46 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP9 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x2035 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x206D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0x2078 DUP2 PUSH2 0x1C2E JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x209B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1E9D DUP8 DUP3 DUP9 ADD PUSH2 0x1C50 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xA0 DUP10 DUP12 SUB SLT ISZERO PUSH2 0x20C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP9 CALLDATALOAD PUSH2 0x20CE DUP2 PUSH2 0x1C2E JUMP JUMPDEST SWAP8 POP PUSH1 0x20 DUP10 ADD CALLDATALOAD PUSH2 0x20DE DUP2 PUSH2 0x1C2E JUMP JUMPDEST SWAP7 POP PUSH1 0x40 DUP10 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x20FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2107 DUP13 DUP4 DUP14 ADD PUSH2 0x1DF8 JUMP JUMPDEST SWAP1 SWAP9 POP SWAP7 POP PUSH1 0x60 DUP12 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x2120 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x212C DUP13 DUP4 DUP14 ADD PUSH2 0x1DF8 JUMP JUMPDEST SWAP1 SWAP7 POP SWAP5 POP PUSH1 0x80 DUP12 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1D22 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xA0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x215E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 CALLDATALOAD PUSH2 0x2169 DUP2 PUSH2 0x1C2E JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD PUSH2 0x2179 DUP2 PUSH2 0x1C2E JUMP JUMPDEST SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD SWAP3 POP PUSH1 0x80 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x21A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x21AF DUP10 DUP3 DUP11 ADD PUSH2 0x1C50 JUMP JUMPDEST SWAP8 SWAP11 SWAP7 SWAP10 POP SWAP5 SWAP8 POP SWAP3 SWAP6 SWAP4 SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 CALLDATALOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE1 DUP5 CALLDATASIZE SUB ADD DUP2 SLT PUSH2 0x2225 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 ADD DUP1 CALLDATALOAD SWAP2 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2240 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 ADD SWAP2 POP CALLDATASIZE DUP2 SWAP1 SUB DUP3 SGT ISZERO PUSH2 0x1814 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x22AD JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x22C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x22E8 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x22D0 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x2303 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x22CD JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x235B DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x22CD JUMP JUMPDEST PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP INVALID COINBASE PUSH5 0x6472657373 GASPRICE KECCAK256 PUSH13 0x6F772D6C6576656C2064656C65 PUSH8 0x6174652063616C6C KECCAK256 PUSH7 0x61696C6564A264 PUSH10 0x7066735822122014E1CB 0xCD SWAP11 PUSH7 0x55A444F8EB73CE 0xB5 GAS 0xCE DUP11 0xA8 0xF9 PUSH3 0x8FB9E1 EXTCODEHASH CODECOPY EQ GASPRICE 0xDC CALLVALUE DUP4 0x26 0x2C PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ","sourceMap":"649:2492:31:-:0;;;1062:142;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1151:11;1133:30;;;;;:::i;:::-;-1:-1:-1;;;;;513:32:34;;;495:51;;483:2;468:18;1133:30:31;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1109:54:31;;;;;1173:24;;;649:2492;;;;;;;;;;:::o;14:310:34:-;104:6;157:2;145:9;136:7;132:23;128:32;125:52;;;173:1;170;163:12;125:52;199:16;;-1:-1:-1;;;;;244:31:34;;234:42;;224:70;;290:1;287;280:12;224:70;313:5;14:310;-1:-1:-1;;;14:310:34:o;329:223::-;649:2492:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@accountImplementation_4412":{"entryPoint":null,"id":4412,"parameterSlots":0,"returnSlots":0},"@addStake_4587":{"entryPoint":350,"id":4587,"parameterSlots":1,"returnSlots":0},"@computeAddress_1267":{"entryPoint":1323,"id":1267,"parameterSlots":2,"returnSlots":1},"@computeAddress_1281":{"entryPoint":null,"id":1281,"parameterSlots":3,"returnSlots":1},"@createAccount_4529":{"entryPoint":522,"id":4529,"parameterSlots":2,"returnSlots":1},"@current_1145":{"entryPoint":null,"id":1145,"parameterSlots":1,"returnSlots":1},"@entryPoint_4415":{"entryPoint":null,"id":4415,"parameterSlots":0,"returnSlots":0},"@getAddress_4571":{"entryPoint":947,"id":4571,"parameterSlots":2,"returnSlots":1},"@increment_1159":{"entryPoint":null,"id":1159,"parameterSlots":1,"returnSlots":0},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":1428,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint32":{"entryPoint":1388,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_bytes_memory_ptr_t_bytes_memory_ptr__to_t_bytes_memory_ptr_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":1649,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_bytes_memory_ptr__to_t_address_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":1537,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_contract$_IEntryPoint_$3605__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_SimpleAccount_$4402__to_t_address_payable__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":1499,"id":null,"parameterSlots":3,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:3246:34","statements":[{"nodeType":"YulBlock","src":"6:3:34","statements":[]},{"body":{"nodeType":"YulBlock","src":"83:207:34","statements":[{"body":{"nodeType":"YulBlock","src":"129:16:34","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"138:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"141:1:34","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"131:6:34"},"nodeType":"YulFunctionCall","src":"131:12:34"},"nodeType":"YulExpressionStatement","src":"131:12:34"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"104:7:34"},{"name":"headStart","nodeType":"YulIdentifier","src":"113:9:34"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"100:3:34"},"nodeType":"YulFunctionCall","src":"100:23:34"},{"kind":"number","nodeType":"YulLiteral","src":"125:2:34","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"96:3:34"},"nodeType":"YulFunctionCall","src":"96:32:34"},"nodeType":"YulIf","src":"93:52:34"},{"nodeType":"YulVariableDeclaration","src":"154:36:34","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"180:9:34"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"167:12:34"},"nodeType":"YulFunctionCall","src":"167:23:34"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"158:5:34","type":""}]},{"body":{"nodeType":"YulBlock","src":"244:16:34","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"253:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"256:1:34","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"246:6:34"},"nodeType":"YulFunctionCall","src":"246:12:34"},"nodeType":"YulExpressionStatement","src":"246:12:34"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"212:5:34"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"223:5:34"},{"kind":"number","nodeType":"YulLiteral","src":"230:10:34","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"219:3:34"},"nodeType":"YulFunctionCall","src":"219:22:34"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"209:2:34"},"nodeType":"YulFunctionCall","src":"209:33:34"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"202:6:34"},"nodeType":"YulFunctionCall","src":"202:41:34"},"nodeType":"YulIf","src":"199:61:34"},{"nodeType":"YulAssignment","src":"269:15:34","value":{"name":"value","nodeType":"YulIdentifier","src":"279:5:34"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"269:6:34"}]}]},"name":"abi_decode_tuple_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"49:9:34","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"60:7:34","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"72:6:34","type":""}],"src":"14:276:34"},{"body":{"nodeType":"YulBlock","src":"426:125:34","statements":[{"nodeType":"YulAssignment","src":"436:26:34","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"448:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"459:2:34","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"444:3:34"},"nodeType":"YulFunctionCall","src":"444:18:34"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"436:4:34"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"478:9:34"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"493:6:34"},{"kind":"number","nodeType":"YulLiteral","src":"501:42:34","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"489:3:34"},"nodeType":"YulFunctionCall","src":"489:55:34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"471:6:34"},"nodeType":"YulFunctionCall","src":"471:74:34"},"nodeType":"YulExpressionStatement","src":"471:74:34"}]},"name":"abi_encode_tuple_t_contract$_SimpleAccount_$4402__to_t_address_payable__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"395:9:34","type":""},{"name":"value0","nodeType":"YulTypedName","src":"406:6:34","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"417:4:34","type":""}],"src":"295:256:34"},{"body":{"nodeType":"YulBlock","src":"643:290:34","statements":[{"body":{"nodeType":"YulBlock","src":"689:16:34","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"698:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"701:1:34","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"691:6:34"},"nodeType":"YulFunctionCall","src":"691:12:34"},"nodeType":"YulExpressionStatement","src":"691:12:34"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"664:7:34"},{"name":"headStart","nodeType":"YulIdentifier","src":"673:9:34"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"660:3:34"},"nodeType":"YulFunctionCall","src":"660:23:34"},{"kind":"number","nodeType":"YulLiteral","src":"685:2:34","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"656:3:34"},"nodeType":"YulFunctionCall","src":"656:32:34"},"nodeType":"YulIf","src":"653:52:34"},{"nodeType":"YulVariableDeclaration","src":"714:36:34","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"740:9:34"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"727:12:34"},"nodeType":"YulFunctionCall","src":"727:23:34"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"718:5:34","type":""}]},{"body":{"nodeType":"YulBlock","src":"836:16:34","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"845:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"848:1:34","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"838:6:34"},"nodeType":"YulFunctionCall","src":"838:12:34"},"nodeType":"YulExpressionStatement","src":"838:12:34"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"772:5:34"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"783:5:34"},{"kind":"number","nodeType":"YulLiteral","src":"790:42:34","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"779:3:34"},"nodeType":"YulFunctionCall","src":"779:54:34"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"769:2:34"},"nodeType":"YulFunctionCall","src":"769:65:34"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"762:6:34"},"nodeType":"YulFunctionCall","src":"762:73:34"},"nodeType":"YulIf","src":"759:93:34"},{"nodeType":"YulAssignment","src":"861:15:34","value":{"name":"value","nodeType":"YulIdentifier","src":"871:5:34"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"861:6:34"}]},{"nodeType":"YulAssignment","src":"885:42:34","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"912:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"923:2:34","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"908:3:34"},"nodeType":"YulFunctionCall","src":"908:18:34"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"895:12:34"},"nodeType":"YulFunctionCall","src":"895:32:34"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"885:6:34"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"601:9:34","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"612:7:34","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"624:6:34","type":""},{"name":"value1","nodeType":"YulTypedName","src":"632:6:34","type":""}],"src":"556:377:34"},{"body":{"nodeType":"YulBlock","src":"1039:125:34","statements":[{"nodeType":"YulAssignment","src":"1049:26:34","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1061:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"1072:2:34","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1057:3:34"},"nodeType":"YulFunctionCall","src":"1057:18:34"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1049:4:34"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1091:9:34"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1106:6:34"},{"kind":"number","nodeType":"YulLiteral","src":"1114:42:34","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1102:3:34"},"nodeType":"YulFunctionCall","src":"1102:55:34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1084:6:34"},"nodeType":"YulFunctionCall","src":"1084:74:34"},"nodeType":"YulExpressionStatement","src":"1084:74:34"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1008:9:34","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1019:6:34","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1030:4:34","type":""}],"src":"938:226:34"},{"body":{"nodeType":"YulBlock","src":"1290:125:34","statements":[{"nodeType":"YulAssignment","src":"1300:26:34","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1312:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"1323:2:34","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1308:3:34"},"nodeType":"YulFunctionCall","src":"1308:18:34"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1300:4:34"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1342:9:34"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1357:6:34"},{"kind":"number","nodeType":"YulLiteral","src":"1365:42:34","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1353:3:34"},"nodeType":"YulFunctionCall","src":"1353:55:34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1335:6:34"},"nodeType":"YulFunctionCall","src":"1335:74:34"},"nodeType":"YulExpressionStatement","src":"1335:74:34"}]},"name":"abi_encode_tuple_t_contract$_IEntryPoint_$3605__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1259:9:34","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1270:6:34","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1281:4:34","type":""}],"src":"1169:246:34"},{"body":{"nodeType":"YulBlock","src":"1519:93:34","statements":[{"nodeType":"YulAssignment","src":"1529:26:34","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1541:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"1552:2:34","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1537:3:34"},"nodeType":"YulFunctionCall","src":"1537:18:34"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1529:4:34"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1571:9:34"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1586:6:34"},{"kind":"number","nodeType":"YulLiteral","src":"1594:10:34","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1582:3:34"},"nodeType":"YulFunctionCall","src":"1582:23:34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1564:6:34"},"nodeType":"YulFunctionCall","src":"1564:42:34"},"nodeType":"YulExpressionStatement","src":"1564:42:34"}]},"name":"abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1488:9:34","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1499:6:34","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1510:4:34","type":""}],"src":"1420:192:34"},{"body":{"nodeType":"YulBlock","src":"1683:184:34","statements":[{"nodeType":"YulVariableDeclaration","src":"1693:10:34","value":{"kind":"number","nodeType":"YulLiteral","src":"1702:1:34","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1697:1:34","type":""}]},{"body":{"nodeType":"YulBlock","src":"1762:63:34","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1787:3:34"},{"name":"i","nodeType":"YulIdentifier","src":"1792:1:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1783:3:34"},"nodeType":"YulFunctionCall","src":"1783:11:34"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1806:3:34"},{"name":"i","nodeType":"YulIdentifier","src":"1811:1:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1802:3:34"},"nodeType":"YulFunctionCall","src":"1802:11:34"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1796:5:34"},"nodeType":"YulFunctionCall","src":"1796:18:34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1776:6:34"},"nodeType":"YulFunctionCall","src":"1776:39:34"},"nodeType":"YulExpressionStatement","src":"1776:39:34"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1723:1:34"},{"name":"length","nodeType":"YulIdentifier","src":"1726:6:34"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1720:2:34"},"nodeType":"YulFunctionCall","src":"1720:13:34"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1734:19:34","statements":[{"nodeType":"YulAssignment","src":"1736:15:34","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1745:1:34"},{"kind":"number","nodeType":"YulLiteral","src":"1748:2:34","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1741:3:34"},"nodeType":"YulFunctionCall","src":"1741:10:34"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1736:1:34"}]}]},"pre":{"nodeType":"YulBlock","src":"1716:3:34","statements":[]},"src":"1712:113:34"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1845:3:34"},{"name":"length","nodeType":"YulIdentifier","src":"1850:6:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1841:3:34"},"nodeType":"YulFunctionCall","src":"1841:16:34"},{"kind":"number","nodeType":"YulLiteral","src":"1859:1:34","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1834:6:34"},"nodeType":"YulFunctionCall","src":"1834:27:34"},"nodeType":"YulExpressionStatement","src":"1834:27:34"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1661:3:34","type":""},{"name":"dst","nodeType":"YulTypedName","src":"1666:3:34","type":""},{"name":"length","nodeType":"YulTypedName","src":"1671:6:34","type":""}],"src":"1617:250:34"},{"body":{"nodeType":"YulBlock","src":"2019:426:34","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2036:9:34"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2051:6:34"},{"kind":"number","nodeType":"YulLiteral","src":"2059:42:34","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2047:3:34"},"nodeType":"YulFunctionCall","src":"2047:55:34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2029:6:34"},"nodeType":"YulFunctionCall","src":"2029:74:34"},"nodeType":"YulExpressionStatement","src":"2029:74:34"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2123:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"2134:2:34","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2119:3:34"},"nodeType":"YulFunctionCall","src":"2119:18:34"},{"kind":"number","nodeType":"YulLiteral","src":"2139:2:34","type":"","value":"64"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2112:6:34"},"nodeType":"YulFunctionCall","src":"2112:30:34"},"nodeType":"YulExpressionStatement","src":"2112:30:34"},{"nodeType":"YulVariableDeclaration","src":"2151:27:34","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"2171:6:34"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2165:5:34"},"nodeType":"YulFunctionCall","src":"2165:13:34"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2155:6:34","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2198:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"2209:2:34","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2194:3:34"},"nodeType":"YulFunctionCall","src":"2194:18:34"},{"name":"length","nodeType":"YulIdentifier","src":"2214:6:34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2187:6:34"},"nodeType":"YulFunctionCall","src":"2187:34:34"},"nodeType":"YulExpressionStatement","src":"2187:34:34"},{"expression":{"arguments":[{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"2269:6:34"},{"kind":"number","nodeType":"YulLiteral","src":"2277:2:34","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2265:3:34"},"nodeType":"YulFunctionCall","src":"2265:15:34"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2286:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"2297:2:34","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2282:3:34"},"nodeType":"YulFunctionCall","src":"2282:18:34"},{"name":"length","nodeType":"YulIdentifier","src":"2302:6:34"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"2230:34:34"},"nodeType":"YulFunctionCall","src":"2230:79:34"},"nodeType":"YulExpressionStatement","src":"2230:79:34"},{"nodeType":"YulAssignment","src":"2318:121:34","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2334:9:34"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2353:6:34"},{"kind":"number","nodeType":"YulLiteral","src":"2361:2:34","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2349:3:34"},"nodeType":"YulFunctionCall","src":"2349:15:34"},{"kind":"number","nodeType":"YulLiteral","src":"2366:66:34","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2345:3:34"},"nodeType":"YulFunctionCall","src":"2345:88:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2330:3:34"},"nodeType":"YulFunctionCall","src":"2330:104:34"},{"kind":"number","nodeType":"YulLiteral","src":"2436:2:34","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2326:3:34"},"nodeType":"YulFunctionCall","src":"2326:113:34"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2318:4:34"}]}]},"name":"abi_encode_tuple_t_address_t_bytes_memory_ptr__to_t_address_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1980:9:34","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1991:6:34","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1999:6:34","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2010:4:34","type":""}],"src":"1872:573:34"},{"body":{"nodeType":"YulBlock","src":"2579:168:34","statements":[{"nodeType":"YulAssignment","src":"2589:26:34","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2601:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"2612:2:34","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2597:3:34"},"nodeType":"YulFunctionCall","src":"2597:18:34"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2589:4:34"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2631:9:34"},{"name":"value0","nodeType":"YulIdentifier","src":"2642:6:34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2624:6:34"},"nodeType":"YulFunctionCall","src":"2624:25:34"},"nodeType":"YulExpressionStatement","src":"2624:25:34"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2669:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"2680:2:34","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2665:3:34"},"nodeType":"YulFunctionCall","src":"2665:18:34"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"2689:6:34"},{"kind":"number","nodeType":"YulLiteral","src":"2697:42:34","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2685:3:34"},"nodeType":"YulFunctionCall","src":"2685:55:34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2658:6:34"},"nodeType":"YulFunctionCall","src":"2658:83:34"},"nodeType":"YulExpressionStatement","src":"2658:83:34"}]},"name":"abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2540:9:34","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2551:6:34","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2559:6:34","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2570:4:34","type":""}],"src":"2450:297:34"},{"body":{"nodeType":"YulBlock","src":"2935:309:34","statements":[{"nodeType":"YulVariableDeclaration","src":"2945:27:34","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2965:6:34"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2959:5:34"},"nodeType":"YulFunctionCall","src":"2959:13:34"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2949:6:34","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3020:6:34"},{"kind":"number","nodeType":"YulLiteral","src":"3028:4:34","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3016:3:34"},"nodeType":"YulFunctionCall","src":"3016:17:34"},{"name":"pos","nodeType":"YulIdentifier","src":"3035:3:34"},{"name":"length","nodeType":"YulIdentifier","src":"3040:6:34"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"2981:34:34"},"nodeType":"YulFunctionCall","src":"2981:66:34"},"nodeType":"YulExpressionStatement","src":"2981:66:34"},{"nodeType":"YulVariableDeclaration","src":"3056:29:34","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3073:3:34"},{"name":"length","nodeType":"YulIdentifier","src":"3078:6:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3069:3:34"},"nodeType":"YulFunctionCall","src":"3069:16:34"},"variables":[{"name":"end_1","nodeType":"YulTypedName","src":"3060:5:34","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3094:29:34","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"3116:6:34"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3110:5:34"},"nodeType":"YulFunctionCall","src":"3110:13:34"},"variables":[{"name":"length_1","nodeType":"YulTypedName","src":"3098:8:34","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"3171:6:34"},{"kind":"number","nodeType":"YulLiteral","src":"3179:4:34","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3167:3:34"},"nodeType":"YulFunctionCall","src":"3167:17:34"},{"name":"end_1","nodeType":"YulIdentifier","src":"3186:5:34"},{"name":"length_1","nodeType":"YulIdentifier","src":"3193:8:34"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"3132:34:34"},"nodeType":"YulFunctionCall","src":"3132:70:34"},"nodeType":"YulExpressionStatement","src":"3132:70:34"},{"nodeType":"YulAssignment","src":"3211:27:34","value":{"arguments":[{"name":"end_1","nodeType":"YulIdentifier","src":"3222:5:34"},{"name":"length_1","nodeType":"YulIdentifier","src":"3229:8:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3218:3:34"},"nodeType":"YulFunctionCall","src":"3218:20:34"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"3211:3:34"}]}]},"name":"abi_encode_tuple_packed_t_bytes_memory_ptr_t_bytes_memory_ptr__to_t_bytes_memory_ptr_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"2903:3:34","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2908:6:34","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2916:6:34","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2927:3:34","type":""}],"src":"2752:492:34"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_uint32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, 0xffffffff))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_contract$_SimpleAccount_$4402__to_t_address_payable__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_contract$_IEntryPoint_$3605__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffff))\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_tuple_t_address_t_bytes_memory_ptr__to_t_address_t_bytes_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), 64)\n        let length := mload(value1)\n        mstore(add(headStart, 64), length)\n        copy_memory_to_memory_with_cleanup(add(value1, 32), add(headStart, 96), length)\n        tail := add(add(headStart, and(add(length, 31), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)), 96)\n    }\n    function abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr_t_bytes_memory_ptr__to_t_bytes_memory_ptr_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        let end_1 := add(pos, length)\n        let length_1 := mload(value1)\n        copy_memory_to_memory_with_cleanup(add(value1, 0x20), end_1, length_1)\n        end := add(end_1, length_1)\n    }\n}","id":34,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"4412":[{"length":32,"start":147},{"length":32,"start":630},{"length":32,"start":1056}],"4415":[{"length":32,"start":316},{"length":32,"start":402}]},"linkReferences":{},"object":"608060405260043610620000615760003560e01c80635fbfb9cf11620000485780635fbfb9cf14620000de5780638cb84e181462000103578063b0d691fe146200012857600080fd5b80630396cb60146200006657806311464fbe146200007f575b600080fd5b6200007d620000773660046200056c565b6200015e565b005b3480156200008c57600080fd5b50620000b57f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b348015620000eb57600080fd5b50620000b5620000fd36600462000594565b6200020a565b3480156200011057600080fd5b50620000b56200012236600462000594565b620003b3565b3480156200013557600080fd5b50620000b57f000000000000000000000000000000000000000000000000000000000000000081565b6040517f0396cb6000000000000000000000000000000000000000000000000000000000815263ffffffff821660048201527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1690630396cb609034906024016000604051808303818588803b158015620001ed57600080fd5b505af115801562000202573d6000803e3d6000fd5b505050505050565b6000806200021760005490565b90506000620002278585620003b3565b905073ffffffffffffffffffffffffffffffffffffffff81163b80156200025357509150620003ad9050565b60405173ffffffffffffffffffffffffffffffffffffffff8716602482015285907f000000000000000000000000000000000000000000000000000000000000000090604401604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fc4d66de800000000000000000000000000000000000000000000000000000000179052516200031b906200055e565b6200032892919062000601565b8190604051809103906000f590508015801562000349573d6000803e3d6000fd5b5093506200035b600080546001019055565b6040805184815273ffffffffffffffffffffffffffffffffffffffff841660208201527f7757890bcab34d673dfca6b71df1b57f75a2fe4231d6e8de726caf534ab1fdd6910160405180910390a15050505b92915050565b6000620005248260001b60405180602001620003cf906200055e565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe082820381018352601f90910116604081905273ffffffffffffffffffffffffffffffffffffffff871660248201527f000000000000000000000000000000000000000000000000000000000000000090604401604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152918152602080830180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fc4d66de8000000000000000000000000000000000000000000000000000000001790529051620004ca9392910162000601565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529082905262000508929160200162000671565b604051602081830303815290604052805190602001206200052b565b9392505050565b6000620005248383306000604051836040820152846020820152828152600b8101905060ff815360559020949350505050565b6107ad80620006a583390190565b6000602082840312156200057f57600080fd5b813563ffffffff811681146200052457600080fd5b60008060408385031215620005a857600080fd5b823573ffffffffffffffffffffffffffffffffffffffff81168114620005cd57600080fd5b946020939093013593505050565b60005b83811015620005f8578181015183820152602001620005de565b50506000910152565b73ffffffffffffffffffffffffffffffffffffffff8316815260406020820152600082518060408401526200063e816060850160208701620005db565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016919091016060019392505050565b6000835162000685818460208801620005db565b8351908301906200069b818360208801620005db565b0194935050505056fe60806040526040516107ad3803806107ad83398101604081905261002291610319565b61002e82826000610035565b5050610436565b61003e8361006b565b60008251118061004b5750805b156100665761006483836100ab60201b6100291760201c565b505b505050565b610074816100d7565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606100d08383604051806060016040528060278152602001610786602791396101a9565b9392505050565b6100ea8161022260201b6100551760201c565b6101515760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b60648201526084015b60405180910390fd5b806101887f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b61023160201b6100711760201c565b80546001600160a01b0319166001600160a01b039290921691909117905550565b6060600080856001600160a01b0316856040516101c691906103e7565b600060405180830381855af49150503d8060008114610201576040519150601f19603f3d011682016040523d82523d6000602084013e610206565b606091505b50909250905061021886838387610234565b9695505050505050565b6001600160a01b03163b151590565b90565b606083156102a357825160000361029c576001600160a01b0385163b61029c5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610148565b50816102ad565b6102ad83836102b5565b949350505050565b8151156102c55781518083602001fd5b8060405162461bcd60e51b81526004016101489190610403565b634e487b7160e01b600052604160045260246000fd5b60005b838110156103105781810151838201526020016102f8565b50506000910152565b6000806040838503121561032c57600080fd5b82516001600160a01b038116811461034357600080fd5b60208401519092506001600160401b038082111561036057600080fd5b818501915085601f83011261037457600080fd5b815181811115610386576103866102df565b604051601f8201601f19908116603f011681019083821181831017156103ae576103ae6102df565b816040528281528860208487010111156103c757600080fd5b6103d88360208301602088016102f5565b80955050505050509250929050565b600082516103f98184602087016102f5565b9190910192915050565b60208152600082518060208401526104228160408501602087016102f5565b601f01601f19169190910160400192915050565b610341806104456000396000f3fe60806040523661001357610011610017565b005b6100115b610027610022610074565b6100b9565b565b606061004e83836040518060600160405280602781526020016102e5602791396100dd565b9392505050565b73ffffffffffffffffffffffffffffffffffffffff163b151590565b90565b60006100b47f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5473ffffffffffffffffffffffffffffffffffffffff1690565b905090565b3660008037600080366000845af43d6000803e8080156100d8573d6000f35b3d6000fd5b60606000808573ffffffffffffffffffffffffffffffffffffffff16856040516101079190610277565b600060405180830381855af49150503d8060008114610142576040519150601f19603f3d011682016040523d82523d6000602084013e610147565b606091505b509150915061015886838387610162565b9695505050505050565b606083156101fd5782516000036101f65773ffffffffffffffffffffffffffffffffffffffff85163b6101f6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064015b60405180910390fd5b5081610207565b610207838361020f565b949350505050565b81511561021f5781518083602001fd5b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101ed9190610293565b60005b8381101561026e578181015183820152602001610256565b50506000910152565b60008251610289818460208701610253565b9190910192915050565b60208152600082518060208401526102b2816040850160208701610253565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016919091016040019291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220b6d490c7b0f7d19828a449ea9a4cecbee2e462a603d4de127808117591d9f02564736f6c63430008120033416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220eb3ce247c401307168a8b677733675e96f6f6a51720a8840db994054877dea1764736f6c63430008120033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH3 0x61 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5FBFB9CF GT PUSH3 0x48 JUMPI DUP1 PUSH4 0x5FBFB9CF EQ PUSH3 0xDE JUMPI DUP1 PUSH4 0x8CB84E18 EQ PUSH3 0x103 JUMPI DUP1 PUSH4 0xB0D691FE EQ PUSH3 0x128 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x396CB60 EQ PUSH3 0x66 JUMPI DUP1 PUSH4 0x11464FBE EQ PUSH3 0x7F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x7D PUSH3 0x77 CALLDATASIZE PUSH1 0x4 PUSH3 0x56C JUMP JUMPDEST PUSH3 0x15E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x8C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0xB5 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0xEB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0xB5 PUSH3 0xFD CALLDATASIZE PUSH1 0x4 PUSH3 0x594 JUMP JUMPDEST PUSH3 0x20A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x110 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0xB5 PUSH3 0x122 CALLDATASIZE PUSH1 0x4 PUSH3 0x594 JUMP JUMPDEST PUSH3 0x3B3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x135 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0xB5 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x396CB6000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH4 0xFFFFFFFF DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH4 0x396CB60 SWAP1 CALLVALUE SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x1ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x202 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH3 0x217 PUSH1 0x0 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH3 0x227 DUP6 DUP6 PUSH3 0x3B3 JUMP JUMPDEST SWAP1 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND EXTCODESIZE DUP1 ISZERO PUSH3 0x253 JUMPI POP SWAP2 POP PUSH3 0x3AD SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND PUSH1 0x24 DUP3 ADD MSTORE DUP6 SWAP1 PUSH32 0x0 SWAP1 PUSH1 0x44 ADD PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC4D66DE800000000000000000000000000000000000000000000000000000000 OR SWAP1 MSTORE MLOAD PUSH3 0x31B SWAP1 PUSH3 0x55E JUMP JUMPDEST PUSH3 0x328 SWAP3 SWAP2 SWAP1 PUSH3 0x601 JUMP JUMPDEST DUP2 SWAP1 PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE2 SWAP1 POP DUP1 ISZERO DUP1 ISZERO PUSH3 0x349 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP SWAP4 POP PUSH3 0x35B PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x7757890BCAB34D673DFCA6B71DF1B57F75A2FE4231D6E8DE726CAF534AB1FDD6 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x524 DUP3 PUSH1 0x0 SHL PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH3 0x3CF SWAP1 PUSH3 0x55E JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP3 DUP3 SUB DUP2 ADD DUP4 MSTORE PUSH1 0x1F SWAP1 SWAP2 ADD AND PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x0 SWAP1 PUSH1 0x44 ADD PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP1 DUP4 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC4D66DE800000000000000000000000000000000000000000000000000000000 OR SWAP1 MSTORE SWAP1 MLOAD PUSH3 0x4CA SWAP4 SWAP3 SWAP2 ADD PUSH3 0x601 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH3 0x508 SWAP3 SWAP2 PUSH1 0x20 ADD PUSH3 0x671 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH3 0x52B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x524 DUP4 DUP4 ADDRESS PUSH1 0x0 PUSH1 0x40 MLOAD DUP4 PUSH1 0x40 DUP3 ADD MSTORE DUP5 PUSH1 0x20 DUP3 ADD MSTORE DUP3 DUP2 MSTORE PUSH1 0xB DUP2 ADD SWAP1 POP PUSH1 0xFF DUP2 MSTORE8 PUSH1 0x55 SWAP1 KECCAK256 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x7AD DUP1 PUSH3 0x6A5 DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x57F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH4 0xFFFFFFFF DUP2 AND DUP2 EQ PUSH3 0x524 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x5A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH3 0x5CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x5F8 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH3 0x5DE JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x40 DUP5 ADD MSTORE PUSH3 0x63E DUP2 PUSH1 0x60 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH3 0x5DB JUMP JUMPDEST PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x60 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH3 0x685 DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH3 0x5DB JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH3 0x69B DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH3 0x5DB JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x7AD CODESIZE SUB DUP1 PUSH2 0x7AD DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x22 SWAP2 PUSH2 0x319 JUMP JUMPDEST PUSH2 0x2E DUP3 DUP3 PUSH1 0x0 PUSH2 0x35 JUMP JUMPDEST POP POP PUSH2 0x436 JUMP JUMPDEST PUSH2 0x3E DUP4 PUSH2 0x6B JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT DUP1 PUSH2 0x4B JUMPI POP DUP1 JUMPDEST ISZERO PUSH2 0x66 JUMPI PUSH2 0x64 DUP4 DUP4 PUSH2 0xAB PUSH1 0x20 SHL PUSH2 0x29 OR PUSH1 0x20 SHR JUMP JUMPDEST POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x74 DUP2 PUSH2 0xD7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xD0 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x786 PUSH1 0x27 SWAP2 CODECOPY PUSH2 0x1A9 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xEA DUP2 PUSH2 0x222 PUSH1 0x20 SHL PUSH2 0x55 OR PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x151 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720696D706C656D656E746174696F6E206973206E PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x1BDD08184818DBDB9D1C9858DD PUSH1 0x9A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH2 0x188 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL PUSH2 0x231 PUSH1 0x20 SHL PUSH2 0x71 OR PUSH1 0x20 SHR JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x40 MLOAD PUSH2 0x1C6 SWAP2 SWAP1 PUSH2 0x3E7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x201 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x206 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x218 DUP7 DUP4 DUP4 DUP8 PUSH2 0x234 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x2A3 JUMPI DUP3 MLOAD PUSH1 0x0 SUB PUSH2 0x29C JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH2 0x29C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x148 JUMP JUMPDEST POP DUP2 PUSH2 0x2AD JUMP JUMPDEST PUSH2 0x2AD DUP4 DUP4 PUSH2 0x2B5 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP2 MLOAD ISZERO PUSH2 0x2C5 JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x148 SWAP2 SWAP1 PUSH2 0x403 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x310 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2F8 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x32C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x343 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP5 ADD MLOAD SWAP1 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x360 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x374 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x386 JUMPI PUSH2 0x386 PUSH2 0x2DF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x3AE JUMPI PUSH2 0x3AE PUSH2 0x2DF JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP9 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x3C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3D8 DUP4 PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x2F5 JUMP JUMPDEST DUP1 SWAP6 POP POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x3F9 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x2F5 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x422 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x2F5 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x341 DUP1 PUSH2 0x445 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLDATASIZE PUSH2 0x13 JUMPI PUSH2 0x11 PUSH2 0x17 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x11 JUMPDEST PUSH2 0x27 PUSH2 0x22 PUSH2 0x74 JUMP JUMPDEST PUSH2 0xB9 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH2 0x4E DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2E5 PUSH1 0x27 SWAP2 CODECOPY PUSH2 0xDD JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB4 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST CALLDATASIZE PUSH1 0x0 DUP1 CALLDATACOPY PUSH1 0x0 DUP1 CALLDATASIZE PUSH1 0x0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY DUP1 DUP1 ISZERO PUSH2 0xD8 JUMPI RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH1 0x40 MLOAD PUSH2 0x107 SWAP2 SWAP1 PUSH2 0x277 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x142 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x147 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x158 DUP7 DUP4 DUP4 DUP8 PUSH2 0x162 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x1FD JUMPI DUP3 MLOAD PUSH1 0x0 SUB PUSH2 0x1F6 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND EXTCODESIZE PUSH2 0x1F6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP DUP2 PUSH2 0x207 JUMP JUMPDEST PUSH2 0x207 DUP4 DUP4 PUSH2 0x20F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP2 MLOAD ISZERO PUSH2 0x21F JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1ED SWAP2 SWAP1 PUSH2 0x293 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x26E JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x256 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x289 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x253 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x2B2 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x253 JUMP JUMPDEST PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP INVALID COINBASE PUSH5 0x6472657373 GASPRICE KECCAK256 PUSH13 0x6F772D6C6576656C2064656C65 PUSH8 0x6174652063616C6C KECCAK256 PUSH7 0x61696C6564A264 PUSH10 0x70667358221220B6D490 0xC7 0xB0 0xF7 0xD1 SWAP9 0x28 LOG4 0x49 0xEA SWAP11 0x4C 0xEC 0xBE 0xE2 0xE4 PUSH3 0xA603D4 0xDE SLT PUSH25 0x8117591D9F02564736F6C6343000812003341646472657373 GASPRICE KECCAK256 PUSH13 0x6F772D6C6576656C2064656C65 PUSH8 0x6174652063616C6C KECCAK256 PUSH7 0x61696C6564A264 PUSH10 0x70667358221220EB3CE2 SELFBALANCE 0xC4 ADD ADDRESS PUSH18 0x68A8B677733675E96F6F6A51720A8840DB99 BLOCKHASH SLOAD DUP8 PUSH30 0xEA1764736F6C634300081200330000000000000000000000000000000000 ","sourceMap":"649:2492:31:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3009:130;;;;;;:::i;:::-;;:::i;:::-;;685:52;;;;;;;;;;;;;;;;;;501:42:34;489:55;;;471:74;;459:2;444:18;685:52:31;;;;;;;1584:686;;;;;;;;;;-1:-1:-1;1584:686:31;;;;;:::i;:::-;;:::i;2395:567::-;;;;;;;;;;-1:-1:-1;2395:567:31;;;;;:::i;:::-;;:::i;769:39::-;;;;;;;;;;;;;;;3009:130;3078:54;;;;;1594:10:34;1582:23;;3078:54:31;;;1564:42:34;3078:10:31;:19;;;;;3105:9;;1537:18:34;;3078:54:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3009:130;:::o;1584:686::-;1674:17;1703:16;1722:20;:10;918:14:12;;827:112;1722:20:31;1703:39;;1752:12;1767:23;1778:5;1785:4;1767:10;:23::i;:::-;1752:38;-1:-1:-1;1816:16:31;;;;1846:12;;1842:78;;-1:-1:-1;1903:4:31;-1:-1:-1;1874:35:31;;-1:-1:-1;1874:35:31;1842:78;2098:49;;501:42:34;489:55;;2098:49:31;;;471:74:34;2018:4:31;;2054:21;;444:18:34;;2098:49:31;;;;;;;;;;;;;;;;;;;;;;;;1987:178;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;1929:260;;2200:22;:10;1032:19:12;;1050:1;1032:19;;;945:123;2200:22:31;2237:26;;;2624:25:34;;;2697:42;2685:55;;2680:2;2665:18;;2658:83;2237:26:31;;2597:18:34;2237:26:31;;;;;;;1693:577;;;1584:686;;;;;:::o;2395:567::-;2487:7;2525:430;2573:4;2565:13;;2669:31;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;501:42:34;489:55;;2826:49:31;;;471:74:34;2774:21:31;;444:18:34;;2826:49:31;;;;;;;;;;;;;;;;;;;;;;;;;2726:175;;;;;2826:49;2726:175;;:::i;:::-;;;;;;;;;;;;;;;2627:296;;;2726:175;2627:296;;:::i;:::-;;;;;;;;;;;;;2596:345;;;;;;2525:22;:430::i;:::-;2506:449;2395:567;-1:-1:-1;;;2395:567:31:o;1769:165:13:-;1852:7;1878:49;1893:4;1899:12;1921:4;2278:12;2385:4;2379:11;3604:12;3597:4;3592:3;3588:14;3581:36;3653:4;3646;3641:3;3637:14;3630:28;3683:8;3678:3;3671:21;3776:4;3771:3;3767:14;3754:27;;3887:4;3880:5;3872:20;3930:2;3913:20;;;2177:1772;-1:-1:-1;;;;2177:1772:13:o;-1:-1:-1:-;;;;;;;;:::o;14:276:34:-;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;180:9;167:23;230:10;223:5;219:22;212:5;209:33;199:61;;256:1;253;246:12;556:377;624:6;632;685:2;673:9;664:7;660:23;656:32;653:52;;;701:1;698;691:12;653:52;740:9;727:23;790:42;783:5;779:54;772:5;769:65;759:93;;848:1;845;838:12;759:93;871:5;923:2;908:18;;;;895:32;;-1:-1:-1;;;556:377:34:o;1617:250::-;1702:1;1712:113;1726:6;1723:1;1720:13;1712:113;;;1802:11;;;1796:18;1783:11;;;1776:39;1748:2;1741:10;1712:113;;;-1:-1:-1;;1859:1:34;1841:16;;1834:27;1617:250::o;1872:573::-;2059:42;2051:6;2047:55;2036:9;2029:74;2139:2;2134;2123:9;2119:18;2112:30;2010:4;2171:6;2165:13;2214:6;2209:2;2198:9;2194:18;2187:34;2230:79;2302:6;2297:2;2286:9;2282:18;2277:2;2269:6;2265:15;2230:79;:::i;:::-;2361:2;2349:15;2366:66;2345:88;2330:104;;;;2436:2;2326:113;;1872:573;-1:-1:-1;;;1872:573:34:o;2752:492::-;2927:3;2965:6;2959:13;2981:66;3040:6;3035:3;3028:4;3020:6;3016:17;2981:66;:::i;:::-;3110:13;;3069:16;;;;3132:70;3110:13;3069:16;3179:4;3167:17;;3132:70;:::i;:::-;3218:20;;2752:492;-1:-1:-1;;;;2752:492:34:o"},"methodIdentifiers":{"accountImplementation()":"11464fbe","addStake(uint32)":"0396cb60","createAccount(address,uint256)":"5fbfb9cf","entryPoint()":"b0d691fe","getAddress(address,uint256)":"8cb84e18"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IEntryPoint\",\"name\":\"_entryPoint\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"walletId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"Created\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"accountImplementation\",\"outputs\":[{\"internalType\":\"contract SimpleAccount\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"unstakeDelaySec\",\"type\":\"uint32\"}],\"name\":\"addStake\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"}],\"name\":\"createAccount\",\"outputs\":[{\"internalType\":\"contract SimpleAccount\",\"name\":\"ret\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"entryPoint\",\"outputs\":[{\"internalType\":\"contract IEntryPoint\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"}],\"name\":\"getAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"_entryPoint\":\"entryPoint Contract's Address\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addStake(uint32)\":{\"notice\":\"addStake function\"},\"constructor\":{\"notice\":\"constructor\"},\"createAccount(address,uint256)\":{\"notice\":\"create an account, and return its address. returns the address even if the account is already deployed. Note that during UserOperation execution, this method is called only if the account is not deployed. This method returns an existing account address so that entryPoint.getSenderAddress() would work even after account creation\"},\"getAddress(address,uint256)\":{\"notice\":\"calculate the counterfactual address of this account as it would be returned by createAccount()\"}},\"notice\":\"A sample factory contract for SimpleAccount A UserOperations \\\"initCode\\\" holds the address of the factory, and a method call (to createAccount, in this sample factory). The factory's createAccount returns the target account address even if it is already installed. This way, the entryPoint.getSenderAddress() can be called either before or after the account is created.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/samples/SimpleAccountFactory.sol\":\"SimpleAccountFactory\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0x3cbef5ebc24b415252e2f8c0c9254555d30d9f085603b4b80d9b5ed20ab87e90\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e8fa670c3bdce78e642cc6ae11c4cb38b133499cdce5e1990a9979d424703263\",\"dweb:/ipfs/QmVxeCUk4jL2pXQyhsoNJwyU874wRufS2WvGe8TgPKPqhE\"]},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://383fb7b8181016ac5ccf07bc9cdb7c1b5045ea36e2cc4df52bcbf20396fc7688\",\"dweb:/ipfs/QmYJ7Cg4WmE3rR8KGQxjUCXFfTH6TcwZ2Z1f6tPrq7jHFr\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":{\"keccak256\":\"0xa2b22da3032e50b55f95ec1d13336102d675f341167aa76db571ef7f8bb7975d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://96b6d77a20bebd4eb06b801d3d020c7e82be13bd535cb0d0a6b7181c51dab5d5\",\"dweb:/ipfs/QmPUR9Cv9jNFdQX6PtBfaBW1ZCnKwiu65R2VD5kbdanDyn\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":{\"keccak256\":\"0x3b21ae06bf5957f73fa16754b0669c77b7abd8ba6c072d35c3281d446fdb86c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2db8e18505e86e02526847005d7287a33e397ed7fb9eaba3fd4a4a197add16e2\",\"dweb:/ipfs/QmW9BSuKTzHWHBNSHF4L8XfVuU1uJrP2vLg84YtBd8mL82\"]},\"@openzeppelin/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc130fe33f1b2132158531a87734153293f6d07bc263ff4ac90e85da9c82c0e27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8831721b6f4cc26534d190f9f1631c3f59c9ff38efdd911f85e0882b8e360472\",\"dweb:/ipfs/QmQZnLErZNStirSQ13ZNWQgvEYUtGE5tXYwn4QUPaVUfPN\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354\",\"dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce\"]},\"@openzeppelin/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x3d6069be9b4c01fb81840fb9c2c4dc58dd6a6a4aafaa2c6837de8699574d84c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://720d6bb56ea0c4ef781c0bd65c5bd0541f5a46100163b2587170f97658d2deed\",\"dweb:/ipfs/QmTS2biLVPrv8CeeXCaKmkFxonMiRvc1LxiYBRYDAJHQUS\"]},\"@openzeppelin/contracts/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0xc6619957bcc6641fe8984bfaf9ff11a9e4b97d8149c0495f608f9a2416d7c5cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://543be67f7fa43b1b932637c1c7f12035f0f4b0f7ee2bd3c33841186f79c165c1\",\"dweb:/ipfs/QmSBPM2UVKbmJqWfD9i6hSiqbaE8TV4TSqfuiivziRRLKM\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts/token/ERC777/IERC777Recipient.sol\":{\"keccak256\":\"0x1a5d61db2733202ba361e6d6741cd2e662380e22b80e987eacfc91973f2267dc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04c0cd697050a6516b7779aa2343ad2d0e5217d8915ac2382681dfdf4e445be3\",\"dweb:/ipfs/QmPCBCZgm7pHBwwogE2F9NCN3UfTdLNhqc8UDEvw8kDzyA\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"@openzeppelin/contracts/utils/Create2.sol\":{\"keccak256\":\"0x6e00f269073ffc4350e56b7e8153c9092d5f70bfba423299990514183101ef89\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8dc5ff5c204604be7594ce2fa9100a0638f22b5aada6ebec1e165b0f50a48447\",\"dweb:/ipfs/QmfH7uWphPrq8jqwGvyh4pFnLEgEPmLwyGV2Bvx1Acjggh\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x809bc3edb4bcbef8263fa616c1b60ee0004b50a8a1bfa164d8f57fd31f520c58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b93a1e39a4a19eba1600b92c96f435442db88cac91e315c8291547a2a7bcfe2\",\"dweb:/ipfs/QmTm34KVe6uZBZwq8dZDNWwPcm24qBJdxqL3rPxBJ4LrMv\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"contracts/core/BaseAccount.sol\":{\"keccak256\":\"0xcc33bf670c4334f70c81ab92c03ded5ee4d28abedab06d458b2f234faceafb4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://985ce85b1e80872680db607f62fcf4becf9e2a356e7ea04b0209e4d4bc99fc48\",\"dweb:/ipfs/QmPZddeadd6n963XEeYvcyFSv6c7LcYaQ7G2LfckS7Fa3v\"]},\"contracts/core/Helpers.sol\":{\"keccak256\":\"0x0f5d5a052ba4cecc4699ca4eb0bd21787ab0a5122e3aaa33283e8009dcfba576\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0055598a026e7ab7fd22c900087c08552bfec84350854f337be786191ff571b5\",\"dweb:/ipfs/QmcVFLLLSM2TyaXKbuA718EJygHkvUBgJiAkC6rqCXjMoM\"]},\"contracts/interfaces/IAccount.sol\":{\"keccak256\":\"0x5f95f26f95b7638a679d246e4f88f8bce752c1a2da43d3672db9683584f41949\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f303a98a037054c57eb30a39a90de2339caeca2f244b4bcfd362bd80d68c9c52\",\"dweb:/ipfs/QmTSggTuH1VDj8LvZVG3mY8RupWdCCSwvuQ27Lfmeh5hfC\"]},\"contracts/interfaces/IAggregator.sol\":{\"keccak256\":\"0x882c23df83ff9eb7b6d8da9a0a2aace7ae05ceb5045bab3bcfd8424ad5e3fb94\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26515cb73553340a1347de257e9ec18176c4e1d0743f2b45b192e62fb5da9db2\",\"dweb:/ipfs/QmcVSodmViGq7QR41fzuVkxgzUfoKp14SP42EYeURPudL6\"]},\"contracts/interfaces/IEntryPoint.sol\":{\"keccak256\":\"0x789c29158831da49cb68476ed9fd474b3a96fd07833f9d01c52d96662d7ee5aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1d627a6cd0b63376627e13042f01cdf780150622443a272922f8cd9762cf86b\",\"dweb:/ipfs/Qmci2frpA8wJfmCT7p88LJSh3765WLHCL1EZbpb8C7rkWz\"]},\"contracts/interfaces/INonceManager.sol\":{\"keccak256\":\"0x559e47ae829da7b717f04aad27ea24cad0d3590dcefb71d3b5f19a79f4ad1069\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a193c6d6e35145860e9034f21302be5352239bb92d0cfb0d2a7d0dbb4d4267a2\",\"dweb:/ipfs/QmVuBq5LYBwCXXUdipdomxq82v2ybh73sBCm89AW1vvg6W\"]},\"contracts/interfaces/IStakeManager.sol\":{\"keccak256\":\"0x68fdee5452a594c7f5f2dd80b3637e9cad71fbad4b255d60cd2fa2d98290fb56\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://82407c1d978530b1f4de0abc0c03044e7b618baeb6e090612250863d94307671\",\"dweb:/ipfs/QmYYyZE2j9XVAPxoZXwMx3HGkG8XQ4C8y55dDWLMSrYJZy\"]},\"contracts/interfaces/UserOperation.sol\":{\"keccak256\":\"0x54bfc3bb0ec261c343803cadb5ba08befc65ad40d6e6d6417cb267d1e1437aaf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a115de9d38f45b40cbccdda415d43ac2efb618afcd4d4dab1d434b48b537df3\",\"dweb:/ipfs/QmehKyXL5gWE4FkwrB5QAfDzqFcTWjBUk2nULb3WoBDXcN\"]},\"contracts/samples/SimpleAccount.sol\":{\"keccak256\":\"0x43dd278289640f8ee04f772efed7ff8b6ea26fa968e17765d04b2fefe4da2591\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a0ee6be695a1c57c0481eebbe5a81e992d40985a5483cde9d8bb63ebdd8f7fc\",\"dweb:/ipfs/QmQKrSTedLNpbvstdqpPVqb6ZVecJ4BVaXamasHD65QB12\"]},\"contracts/samples/SimpleAccountFactory.sol\":{\"keccak256\":\"0xd794dea62c0861d32595680d0a13737ce37300988c656572b399639ee717cf88\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f114307fdf6fc85b1bd25f59999ffedd373e13b8420d6febbf2ae43f5dc2d307\",\"dweb:/ipfs/QmZbDkh4zs5CN9NvUgoTpwK8uznCGvo5XL3rFZNXVChS3E\"]},\"contracts/samples/callback/TokenCallbackHandler.sol\":{\"keccak256\":\"0xe36d84f455b497f6eb7f7058a319c5a679900f499c4f5e1d048f3d762a7da5a6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d9232444f7b34f7a42f8acffd375042c00f75439c37099fe0e609ab17462ace1\",\"dweb:/ipfs/QmPcQAaTy6tiHKyTwMcWPuAM4ypVqpZiijir8h1is1ycuQ\"]}},\"version\":1}"}},"contracts/samples/callback/TokenCallbackHandler.sol":{"TokenCallbackHandler":{"abi":[{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256[]","name":"","type":"uint256[]"},{"internalType":"uint256[]","name":"","type":"uint256[]"},{"internalType":"bytes","name":"","type":"bytes"}],"name":"onERC1155BatchReceived","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"bytes","name":"","type":"bytes"}],"name":"onERC1155Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"bytes","name":"","type":"bytes"}],"name":"onERC721Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"bytes","name":"","type":"bytes"},{"internalType":"bytes","name":"","type":"bytes"}],"name":"tokensReceived","outputs":[],"stateMutability":"pure","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"608060405234801561001057600080fd5b506105d1806100206000396000f3fe608060405234801561001057600080fd5b50600436106100665760003560e01c8063150b7a0211610050578063150b7a02146100ad578063bc197c8114610116578063f23a6e611461015157600080fd5b806223de291461006b57806301ffc9a714610085575b600080fd5b6100836100793660046102e1565b5050505050505050565b005b61009861009336600461038c565b61018a565b60405190151581526020015b60405180910390f35b6100e56100bb3660046103d5565b7f150b7a020000000000000000000000000000000000000000000000000000000095945050505050565b6040517fffffffff0000000000000000000000000000000000000000000000000000000090911681526020016100a4565b6100e5610124366004610489565b7fbc197c810000000000000000000000000000000000000000000000000000000098975050505050505050565b6100e561015f366004610523565b7ff23a6e61000000000000000000000000000000000000000000000000000000009695505050505050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f150b7a0200000000000000000000000000000000000000000000000000000000148061021d57507fffffffff0000000000000000000000000000000000000000000000000000000082167f4e2312e000000000000000000000000000000000000000000000000000000000145b8061026957507fffffffff0000000000000000000000000000000000000000000000000000000082167f01ffc9a700000000000000000000000000000000000000000000000000000000145b92915050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461029357600080fd5b919050565b60008083601f8401126102aa57600080fd5b50813567ffffffffffffffff8111156102c257600080fd5b6020830191508360208285010111156102da57600080fd5b9250929050565b60008060008060008060008060c0898b0312156102fd57600080fd5b6103068961026f565b975061031460208a0161026f565b965061032260408a0161026f565b955060608901359450608089013567ffffffffffffffff8082111561034657600080fd5b6103528c838d01610298565b909650945060a08b013591508082111561036b57600080fd5b506103788b828c01610298565b999c989b5096995094979396929594505050565b60006020828403121561039e57600080fd5b81357fffffffff00000000000000000000000000000000000000000000000000000000811681146103ce57600080fd5b9392505050565b6000806000806000608086880312156103ed57600080fd5b6103f68661026f565b94506104046020870161026f565b935060408601359250606086013567ffffffffffffffff81111561042757600080fd5b61043388828901610298565b969995985093965092949392505050565b60008083601f84011261045657600080fd5b50813567ffffffffffffffff81111561046e57600080fd5b6020830191508360208260051b85010111156102da57600080fd5b60008060008060008060008060a0898b0312156104a557600080fd5b6104ae8961026f565b97506104bc60208a0161026f565b9650604089013567ffffffffffffffff808211156104d957600080fd5b6104e58c838d01610444565b909850965060608b01359150808211156104fe57600080fd5b61050a8c838d01610444565b909650945060808b013591508082111561036b57600080fd5b60008060008060008060a0878903121561053c57600080fd5b6105458761026f565b95506105536020880161026f565b94506040870135935060608701359250608087013567ffffffffffffffff81111561057d57600080fd5b61058989828a01610298565b979a969950949750929593949250505056fea2646970667358221220f542c3da772eb1c4ae60e4314c5503acfcc0ad8973d3f81d523071da1bc41be364736f6c63430008120033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5D1 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x66 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x150B7A02 GT PUSH2 0x50 JUMPI DUP1 PUSH4 0x150B7A02 EQ PUSH2 0xAD JUMPI DUP1 PUSH4 0xBC197C81 EQ PUSH2 0x116 JUMPI DUP1 PUSH4 0xF23A6E61 EQ PUSH2 0x151 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0x23DE29 EQ PUSH2 0x6B JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x85 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x83 PUSH2 0x79 CALLDATASIZE PUSH1 0x4 PUSH2 0x2E1 JUMP JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST STOP JUMPDEST PUSH2 0x98 PUSH2 0x93 CALLDATASIZE PUSH1 0x4 PUSH2 0x38C JUMP JUMPDEST PUSH2 0x18A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE5 PUSH2 0xBB CALLDATASIZE PUSH1 0x4 PUSH2 0x3D5 JUMP JUMPDEST PUSH32 0x150B7A0200000000000000000000000000000000000000000000000000000000 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xA4 JUMP JUMPDEST PUSH2 0xE5 PUSH2 0x124 CALLDATASIZE PUSH1 0x4 PUSH2 0x489 JUMP JUMPDEST PUSH32 0xBC197C8100000000000000000000000000000000000000000000000000000000 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xE5 PUSH2 0x15F CALLDATASIZE PUSH1 0x4 PUSH2 0x523 JUMP JUMPDEST PUSH32 0xF23A6E6100000000000000000000000000000000000000000000000000000000 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH32 0x150B7A0200000000000000000000000000000000000000000000000000000000 EQ DUP1 PUSH2 0x21D JUMPI POP PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH32 0x4E2312E000000000000000000000000000000000000000000000000000000000 EQ JUMPDEST DUP1 PUSH2 0x269 JUMPI POP PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x293 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x2AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x2DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP10 DUP12 SUB SLT ISZERO PUSH2 0x2FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x306 DUP10 PUSH2 0x26F JUMP JUMPDEST SWAP8 POP PUSH2 0x314 PUSH1 0x20 DUP11 ADD PUSH2 0x26F JUMP JUMPDEST SWAP7 POP PUSH2 0x322 PUSH1 0x40 DUP11 ADD PUSH2 0x26F JUMP JUMPDEST SWAP6 POP PUSH1 0x60 DUP10 ADD CALLDATALOAD SWAP5 POP PUSH1 0x80 DUP10 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x346 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x352 DUP13 DUP4 DUP14 ADD PUSH2 0x298 JUMP JUMPDEST SWAP1 SWAP7 POP SWAP5 POP PUSH1 0xA0 DUP12 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x36B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x378 DUP12 DUP3 DUP13 ADD PUSH2 0x298 JUMP JUMPDEST SWAP10 SWAP13 SWAP9 SWAP12 POP SWAP7 SWAP10 POP SWAP5 SWAP8 SWAP4 SWAP7 SWAP3 SWAP6 SWAP5 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x39E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND DUP2 EQ PUSH2 0x3CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x3ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3F6 DUP7 PUSH2 0x26F JUMP JUMPDEST SWAP5 POP PUSH2 0x404 PUSH1 0x20 DUP8 ADD PUSH2 0x26F JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x427 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x433 DUP9 DUP3 DUP10 ADD PUSH2 0x298 JUMP JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 POP SWAP3 SWAP5 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x456 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x46E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x2DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xA0 DUP10 DUP12 SUB SLT ISZERO PUSH2 0x4A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4AE DUP10 PUSH2 0x26F JUMP JUMPDEST SWAP8 POP PUSH2 0x4BC PUSH1 0x20 DUP11 ADD PUSH2 0x26F JUMP JUMPDEST SWAP7 POP PUSH1 0x40 DUP10 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x4D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E5 DUP13 DUP4 DUP14 ADD PUSH2 0x444 JUMP JUMPDEST SWAP1 SWAP9 POP SWAP7 POP PUSH1 0x60 DUP12 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x4FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x50A DUP13 DUP4 DUP14 ADD PUSH2 0x444 JUMP JUMPDEST SWAP1 SWAP7 POP SWAP5 POP PUSH1 0x80 DUP12 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x36B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xA0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x53C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x545 DUP8 PUSH2 0x26F JUMP JUMPDEST SWAP6 POP PUSH2 0x553 PUSH1 0x20 DUP9 ADD PUSH2 0x26F JUMP JUMPDEST SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD SWAP3 POP PUSH1 0x80 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x57D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x589 DUP10 DUP3 DUP11 ADD PUSH2 0x298 JUMP JUMPDEST SWAP8 SWAP11 SWAP7 SWAP10 POP SWAP5 SWAP8 POP SWAP3 SWAP6 SWAP4 SWAP5 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE2 TIMESTAMP 0xC3 0xDA PUSH24 0x2EB1C4AE60E4314C5503ACFCC0AD8973D3F81D523071DA1B 0xC4 SHL 0xE3 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ","sourceMap":"486:1299:32:-:0;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@onERC1155BatchReceived_4681":{"entryPoint":null,"id":4681,"parameterSlots":8,"returnSlots":1},"@onERC1155Received_4658":{"entryPoint":null,"id":4658,"parameterSlots":6,"returnSlots":1},"@onERC721Received_4637":{"entryPoint":null,"id":4637,"parameterSlots":5,"returnSlots":1},"@supportsInterface_4711":{"entryPoint":394,"id":4711,"parameterSlots":1,"returnSlots":1},"@tokensReceived_4618":{"entryPoint":null,"id":4618,"parameterSlots":8,"returnSlots":0},"abi_decode_address":{"entryPoint":623,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_array_uint256_dyn_calldata":{"entryPoint":1092,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_bytes_calldata":{"entryPoint":664,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_addresst_uint256t_bytes_calldata_ptrt_bytes_calldata_ptr":{"entryPoint":737,"id":null,"parameterSlots":2,"returnSlots":8},"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptrt_bytes_calldata_ptr":{"entryPoint":1161,"id":null,"parameterSlots":2,"returnSlots":8},"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_calldata_ptr":{"entryPoint":981,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_calldata_ptr":{"entryPoint":1315,"id":null,"parameterSlots":2,"returnSlots":6},"abi_decode_tuple_t_bytes4":{"entryPoint":908,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:5279:34","statements":[{"nodeType":"YulBlock","src":"6:3:34","statements":[]},{"body":{"nodeType":"YulBlock","src":"63:147:34","statements":[{"nodeType":"YulAssignment","src":"73:29:34","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"95:6:34"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"82:12:34"},"nodeType":"YulFunctionCall","src":"82:20:34"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"73:5:34"}]},{"body":{"nodeType":"YulBlock","src":"188:16:34","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"197:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"200:1:34","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"190:6:34"},"nodeType":"YulFunctionCall","src":"190:12:34"},"nodeType":"YulExpressionStatement","src":"190:12:34"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"124:5:34"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"135:5:34"},{"kind":"number","nodeType":"YulLiteral","src":"142:42:34","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"131:3:34"},"nodeType":"YulFunctionCall","src":"131:54:34"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"121:2:34"},"nodeType":"YulFunctionCall","src":"121:65:34"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"114:6:34"},"nodeType":"YulFunctionCall","src":"114:73:34"},"nodeType":"YulIf","src":"111:93:34"}]},"name":"abi_decode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"42:6:34","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"53:5:34","type":""}],"src":"14:196:34"},{"body":{"nodeType":"YulBlock","src":"287:275:34","statements":[{"body":{"nodeType":"YulBlock","src":"336:16:34","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"345:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"348:1:34","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"338:6:34"},"nodeType":"YulFunctionCall","src":"338:12:34"},"nodeType":"YulExpressionStatement","src":"338:12:34"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"315:6:34"},{"kind":"number","nodeType":"YulLiteral","src":"323:4:34","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"311:3:34"},"nodeType":"YulFunctionCall","src":"311:17:34"},{"name":"end","nodeType":"YulIdentifier","src":"330:3:34"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"307:3:34"},"nodeType":"YulFunctionCall","src":"307:27:34"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"300:6:34"},"nodeType":"YulFunctionCall","src":"300:35:34"},"nodeType":"YulIf","src":"297:55:34"},{"nodeType":"YulAssignment","src":"361:30:34","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"384:6:34"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"371:12:34"},"nodeType":"YulFunctionCall","src":"371:20:34"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"361:6:34"}]},{"body":{"nodeType":"YulBlock","src":"434:16:34","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"443:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"446:1:34","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"436:6:34"},"nodeType":"YulFunctionCall","src":"436:12:34"},"nodeType":"YulExpressionStatement","src":"436:12:34"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"406:6:34"},{"kind":"number","nodeType":"YulLiteral","src":"414:18:34","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"403:2:34"},"nodeType":"YulFunctionCall","src":"403:30:34"},"nodeType":"YulIf","src":"400:50:34"},{"nodeType":"YulAssignment","src":"459:29:34","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"475:6:34"},{"kind":"number","nodeType":"YulLiteral","src":"483:4:34","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"471:3:34"},"nodeType":"YulFunctionCall","src":"471:17:34"},"variableNames":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"459:8:34"}]},{"body":{"nodeType":"YulBlock","src":"540:16:34","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"549:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"552:1:34","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"542:6:34"},"nodeType":"YulFunctionCall","src":"542:12:34"},"nodeType":"YulExpressionStatement","src":"542:12:34"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"511:6:34"},{"name":"length","nodeType":"YulIdentifier","src":"519:6:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"507:3:34"},"nodeType":"YulFunctionCall","src":"507:19:34"},{"kind":"number","nodeType":"YulLiteral","src":"528:4:34","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"503:3:34"},"nodeType":"YulFunctionCall","src":"503:30:34"},{"name":"end","nodeType":"YulIdentifier","src":"535:3:34"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"500:2:34"},"nodeType":"YulFunctionCall","src":"500:39:34"},"nodeType":"YulIf","src":"497:59:34"}]},"name":"abi_decode_bytes_calldata","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"250:6:34","type":""},{"name":"end","nodeType":"YulTypedName","src":"258:3:34","type":""}],"returnVariables":[{"name":"arrayPos","nodeType":"YulTypedName","src":"266:8:34","type":""},{"name":"length","nodeType":"YulTypedName","src":"276:6:34","type":""}],"src":"215:347:34"},{"body":{"nodeType":"YulBlock","src":"760:817:34","statements":[{"body":{"nodeType":"YulBlock","src":"807:16:34","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"816:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"819:1:34","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"809:6:34"},"nodeType":"YulFunctionCall","src":"809:12:34"},"nodeType":"YulExpressionStatement","src":"809:12:34"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"781:7:34"},{"name":"headStart","nodeType":"YulIdentifier","src":"790:9:34"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"777:3:34"},"nodeType":"YulFunctionCall","src":"777:23:34"},{"kind":"number","nodeType":"YulLiteral","src":"802:3:34","type":"","value":"192"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"773:3:34"},"nodeType":"YulFunctionCall","src":"773:33:34"},"nodeType":"YulIf","src":"770:53:34"},{"nodeType":"YulAssignment","src":"832:39:34","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"861:9:34"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"842:18:34"},"nodeType":"YulFunctionCall","src":"842:29:34"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"832:6:34"}]},{"nodeType":"YulAssignment","src":"880:48:34","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"913:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"924:2:34","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"909:3:34"},"nodeType":"YulFunctionCall","src":"909:18:34"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"890:18:34"},"nodeType":"YulFunctionCall","src":"890:38:34"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"880:6:34"}]},{"nodeType":"YulAssignment","src":"937:48:34","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"970:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"981:2:34","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"966:3:34"},"nodeType":"YulFunctionCall","src":"966:18:34"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"947:18:34"},"nodeType":"YulFunctionCall","src":"947:38:34"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"937:6:34"}]},{"nodeType":"YulAssignment","src":"994:42:34","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1021:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"1032:2:34","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1017:3:34"},"nodeType":"YulFunctionCall","src":"1017:18:34"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1004:12:34"},"nodeType":"YulFunctionCall","src":"1004:32:34"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"994:6:34"}]},{"nodeType":"YulVariableDeclaration","src":"1045:47:34","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1076:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"1087:3:34","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1072:3:34"},"nodeType":"YulFunctionCall","src":"1072:19:34"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1059:12:34"},"nodeType":"YulFunctionCall","src":"1059:33:34"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1049:6:34","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1101:28:34","value":{"kind":"number","nodeType":"YulLiteral","src":"1111:18:34","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1105:2:34","type":""}]},{"body":{"nodeType":"YulBlock","src":"1156:16:34","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1165:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1168:1:34","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1158:6:34"},"nodeType":"YulFunctionCall","src":"1158:12:34"},"nodeType":"YulExpressionStatement","src":"1158:12:34"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1144:6:34"},{"name":"_1","nodeType":"YulIdentifier","src":"1152:2:34"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1141:2:34"},"nodeType":"YulFunctionCall","src":"1141:14:34"},"nodeType":"YulIf","src":"1138:34:34"},{"nodeType":"YulVariableDeclaration","src":"1181:84:34","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1237:9:34"},{"name":"offset","nodeType":"YulIdentifier","src":"1248:6:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1233:3:34"},"nodeType":"YulFunctionCall","src":"1233:22:34"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1257:7:34"}],"functionName":{"name":"abi_decode_bytes_calldata","nodeType":"YulIdentifier","src":"1207:25:34"},"nodeType":"YulFunctionCall","src":"1207:58:34"},"variables":[{"name":"value4_1","nodeType":"YulTypedName","src":"1185:8:34","type":""},{"name":"value5_1","nodeType":"YulTypedName","src":"1195:8:34","type":""}]},{"nodeType":"YulAssignment","src":"1274:18:34","value":{"name":"value4_1","nodeType":"YulIdentifier","src":"1284:8:34"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"1274:6:34"}]},{"nodeType":"YulAssignment","src":"1301:18:34","value":{"name":"value5_1","nodeType":"YulIdentifier","src":"1311:8:34"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"1301:6:34"}]},{"nodeType":"YulVariableDeclaration","src":"1328:49:34","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1361:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"1372:3:34","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1357:3:34"},"nodeType":"YulFunctionCall","src":"1357:19:34"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1344:12:34"},"nodeType":"YulFunctionCall","src":"1344:33:34"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"1332:8:34","type":""}]},{"body":{"nodeType":"YulBlock","src":"1406:16:34","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1415:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1418:1:34","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1408:6:34"},"nodeType":"YulFunctionCall","src":"1408:12:34"},"nodeType":"YulExpressionStatement","src":"1408:12:34"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"1392:8:34"},{"name":"_1","nodeType":"YulIdentifier","src":"1402:2:34"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1389:2:34"},"nodeType":"YulFunctionCall","src":"1389:16:34"},"nodeType":"YulIf","src":"1386:36:34"},{"nodeType":"YulVariableDeclaration","src":"1431:86:34","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1487:9:34"},{"name":"offset_1","nodeType":"YulIdentifier","src":"1498:8:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1483:3:34"},"nodeType":"YulFunctionCall","src":"1483:24:34"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1509:7:34"}],"functionName":{"name":"abi_decode_bytes_calldata","nodeType":"YulIdentifier","src":"1457:25:34"},"nodeType":"YulFunctionCall","src":"1457:60:34"},"variables":[{"name":"value6_1","nodeType":"YulTypedName","src":"1435:8:34","type":""},{"name":"value7_1","nodeType":"YulTypedName","src":"1445:8:34","type":""}]},{"nodeType":"YulAssignment","src":"1526:18:34","value":{"name":"value6_1","nodeType":"YulIdentifier","src":"1536:8:34"},"variableNames":[{"name":"value6","nodeType":"YulIdentifier","src":"1526:6:34"}]},{"nodeType":"YulAssignment","src":"1553:18:34","value":{"name":"value7_1","nodeType":"YulIdentifier","src":"1563:8:34"},"variableNames":[{"name":"value7","nodeType":"YulIdentifier","src":"1553:6:34"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_addresst_uint256t_bytes_calldata_ptrt_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"670:9:34","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"681:7:34","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"693:6:34","type":""},{"name":"value1","nodeType":"YulTypedName","src":"701:6:34","type":""},{"name":"value2","nodeType":"YulTypedName","src":"709:6:34","type":""},{"name":"value3","nodeType":"YulTypedName","src":"717:6:34","type":""},{"name":"value4","nodeType":"YulTypedName","src":"725:6:34","type":""},{"name":"value5","nodeType":"YulTypedName","src":"733:6:34","type":""},{"name":"value6","nodeType":"YulTypedName","src":"741:6:34","type":""},{"name":"value7","nodeType":"YulTypedName","src":"749:6:34","type":""}],"src":"567:1010:34"},{"body":{"nodeType":"YulBlock","src":"1651:263:34","statements":[{"body":{"nodeType":"YulBlock","src":"1697:16:34","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1706:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1709:1:34","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1699:6:34"},"nodeType":"YulFunctionCall","src":"1699:12:34"},"nodeType":"YulExpressionStatement","src":"1699:12:34"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1672:7:34"},{"name":"headStart","nodeType":"YulIdentifier","src":"1681:9:34"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1668:3:34"},"nodeType":"YulFunctionCall","src":"1668:23:34"},{"kind":"number","nodeType":"YulLiteral","src":"1693:2:34","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1664:3:34"},"nodeType":"YulFunctionCall","src":"1664:32:34"},"nodeType":"YulIf","src":"1661:52:34"},{"nodeType":"YulVariableDeclaration","src":"1722:36:34","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1748:9:34"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1735:12:34"},"nodeType":"YulFunctionCall","src":"1735:23:34"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"1726:5:34","type":""}]},{"body":{"nodeType":"YulBlock","src":"1868:16:34","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1877:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1880:1:34","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1870:6:34"},"nodeType":"YulFunctionCall","src":"1870:12:34"},"nodeType":"YulExpressionStatement","src":"1870:12:34"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1780:5:34"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1791:5:34"},{"kind":"number","nodeType":"YulLiteral","src":"1798:66:34","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1787:3:34"},"nodeType":"YulFunctionCall","src":"1787:78:34"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1777:2:34"},"nodeType":"YulFunctionCall","src":"1777:89:34"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1770:6:34"},"nodeType":"YulFunctionCall","src":"1770:97:34"},"nodeType":"YulIf","src":"1767:117:34"},{"nodeType":"YulAssignment","src":"1893:15:34","value":{"name":"value","nodeType":"YulIdentifier","src":"1903:5:34"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1893:6:34"}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1617:9:34","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1628:7:34","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1640:6:34","type":""}],"src":"1582:332:34"},{"body":{"nodeType":"YulBlock","src":"2014:92:34","statements":[{"nodeType":"YulAssignment","src":"2024:26:34","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2036:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"2047:2:34","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2032:3:34"},"nodeType":"YulFunctionCall","src":"2032:18:34"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2024:4:34"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2066:9:34"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2091:6:34"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2084:6:34"},"nodeType":"YulFunctionCall","src":"2084:14:34"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2077:6:34"},"nodeType":"YulFunctionCall","src":"2077:22:34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2059:6:34"},"nodeType":"YulFunctionCall","src":"2059:41:34"},"nodeType":"YulExpressionStatement","src":"2059:41:34"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1983:9:34","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1994:6:34","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2005:4:34","type":""}],"src":"1919:187:34"},{"body":{"nodeType":"YulBlock","src":"2251:486:34","statements":[{"body":{"nodeType":"YulBlock","src":"2298:16:34","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2307:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2310:1:34","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2300:6:34"},"nodeType":"YulFunctionCall","src":"2300:12:34"},"nodeType":"YulExpressionStatement","src":"2300:12:34"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2272:7:34"},{"name":"headStart","nodeType":"YulIdentifier","src":"2281:9:34"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2268:3:34"},"nodeType":"YulFunctionCall","src":"2268:23:34"},{"kind":"number","nodeType":"YulLiteral","src":"2293:3:34","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2264:3:34"},"nodeType":"YulFunctionCall","src":"2264:33:34"},"nodeType":"YulIf","src":"2261:53:34"},{"nodeType":"YulAssignment","src":"2323:39:34","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2352:9:34"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2333:18:34"},"nodeType":"YulFunctionCall","src":"2333:29:34"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2323:6:34"}]},{"nodeType":"YulAssignment","src":"2371:48:34","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2404:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"2415:2:34","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2400:3:34"},"nodeType":"YulFunctionCall","src":"2400:18:34"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2381:18:34"},"nodeType":"YulFunctionCall","src":"2381:38:34"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2371:6:34"}]},{"nodeType":"YulAssignment","src":"2428:42:34","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2455:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"2466:2:34","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2451:3:34"},"nodeType":"YulFunctionCall","src":"2451:18:34"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2438:12:34"},"nodeType":"YulFunctionCall","src":"2438:32:34"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"2428:6:34"}]},{"nodeType":"YulVariableDeclaration","src":"2479:46:34","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2510:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"2521:2:34","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2506:3:34"},"nodeType":"YulFunctionCall","src":"2506:18:34"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2493:12:34"},"nodeType":"YulFunctionCall","src":"2493:32:34"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2483:6:34","type":""}]},{"body":{"nodeType":"YulBlock","src":"2568:16:34","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2577:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2580:1:34","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2570:6:34"},"nodeType":"YulFunctionCall","src":"2570:12:34"},"nodeType":"YulExpressionStatement","src":"2570:12:34"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2540:6:34"},{"kind":"number","nodeType":"YulLiteral","src":"2548:18:34","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2537:2:34"},"nodeType":"YulFunctionCall","src":"2537:30:34"},"nodeType":"YulIf","src":"2534:50:34"},{"nodeType":"YulVariableDeclaration","src":"2593:84:34","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2649:9:34"},{"name":"offset","nodeType":"YulIdentifier","src":"2660:6:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2645:3:34"},"nodeType":"YulFunctionCall","src":"2645:22:34"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2669:7:34"}],"functionName":{"name":"abi_decode_bytes_calldata","nodeType":"YulIdentifier","src":"2619:25:34"},"nodeType":"YulFunctionCall","src":"2619:58:34"},"variables":[{"name":"value3_1","nodeType":"YulTypedName","src":"2597:8:34","type":""},{"name":"value4_1","nodeType":"YulTypedName","src":"2607:8:34","type":""}]},{"nodeType":"YulAssignment","src":"2686:18:34","value":{"name":"value3_1","nodeType":"YulIdentifier","src":"2696:8:34"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"2686:6:34"}]},{"nodeType":"YulAssignment","src":"2713:18:34","value":{"name":"value4_1","nodeType":"YulIdentifier","src":"2723:8:34"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"2713:6:34"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2185:9:34","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2196:7:34","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2208:6:34","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2216:6:34","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2224:6:34","type":""},{"name":"value3","nodeType":"YulTypedName","src":"2232:6:34","type":""},{"name":"value4","nodeType":"YulTypedName","src":"2240:6:34","type":""}],"src":"2111:626:34"},{"body":{"nodeType":"YulBlock","src":"2841:149:34","statements":[{"nodeType":"YulAssignment","src":"2851:26:34","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2863:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"2874:2:34","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2859:3:34"},"nodeType":"YulFunctionCall","src":"2859:18:34"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2851:4:34"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2893:9:34"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2908:6:34"},{"kind":"number","nodeType":"YulLiteral","src":"2916:66:34","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2904:3:34"},"nodeType":"YulFunctionCall","src":"2904:79:34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2886:6:34"},"nodeType":"YulFunctionCall","src":"2886:98:34"},"nodeType":"YulExpressionStatement","src":"2886:98:34"}]},"name":"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2810:9:34","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2821:6:34","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2832:4:34","type":""}],"src":"2742:248:34"},{"body":{"nodeType":"YulBlock","src":"3079:283:34","statements":[{"body":{"nodeType":"YulBlock","src":"3128:16:34","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3137:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3140:1:34","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3130:6:34"},"nodeType":"YulFunctionCall","src":"3130:12:34"},"nodeType":"YulExpressionStatement","src":"3130:12:34"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3107:6:34"},{"kind":"number","nodeType":"YulLiteral","src":"3115:4:34","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3103:3:34"},"nodeType":"YulFunctionCall","src":"3103:17:34"},{"name":"end","nodeType":"YulIdentifier","src":"3122:3:34"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3099:3:34"},"nodeType":"YulFunctionCall","src":"3099:27:34"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3092:6:34"},"nodeType":"YulFunctionCall","src":"3092:35:34"},"nodeType":"YulIf","src":"3089:55:34"},{"nodeType":"YulAssignment","src":"3153:30:34","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3176:6:34"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3163:12:34"},"nodeType":"YulFunctionCall","src":"3163:20:34"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3153:6:34"}]},{"body":{"nodeType":"YulBlock","src":"3226:16:34","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3235:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3238:1:34","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3228:6:34"},"nodeType":"YulFunctionCall","src":"3228:12:34"},"nodeType":"YulExpressionStatement","src":"3228:12:34"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3198:6:34"},{"kind":"number","nodeType":"YulLiteral","src":"3206:18:34","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3195:2:34"},"nodeType":"YulFunctionCall","src":"3195:30:34"},"nodeType":"YulIf","src":"3192:50:34"},{"nodeType":"YulAssignment","src":"3251:29:34","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3267:6:34"},{"kind":"number","nodeType":"YulLiteral","src":"3275:4:34","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3263:3:34"},"nodeType":"YulFunctionCall","src":"3263:17:34"},"variableNames":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"3251:8:34"}]},{"body":{"nodeType":"YulBlock","src":"3340:16:34","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3349:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3352:1:34","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3342:6:34"},"nodeType":"YulFunctionCall","src":"3342:12:34"},"nodeType":"YulExpressionStatement","src":"3342:12:34"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3303:6:34"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3315:1:34","type":"","value":"5"},{"name":"length","nodeType":"YulIdentifier","src":"3318:6:34"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3311:3:34"},"nodeType":"YulFunctionCall","src":"3311:14:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3299:3:34"},"nodeType":"YulFunctionCall","src":"3299:27:34"},{"kind":"number","nodeType":"YulLiteral","src":"3328:4:34","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3295:3:34"},"nodeType":"YulFunctionCall","src":"3295:38:34"},{"name":"end","nodeType":"YulIdentifier","src":"3335:3:34"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3292:2:34"},"nodeType":"YulFunctionCall","src":"3292:47:34"},"nodeType":"YulIf","src":"3289:67:34"}]},"name":"abi_decode_array_uint256_dyn_calldata","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3042:6:34","type":""},{"name":"end","nodeType":"YulTypedName","src":"3050:3:34","type":""}],"returnVariables":[{"name":"arrayPos","nodeType":"YulTypedName","src":"3058:8:34","type":""},{"name":"length","nodeType":"YulTypedName","src":"3068:6:34","type":""}],"src":"2995:367:34"},{"body":{"nodeType":"YulBlock","src":"3594:983:34","statements":[{"body":{"nodeType":"YulBlock","src":"3641:16:34","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3650:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3653:1:34","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3643:6:34"},"nodeType":"YulFunctionCall","src":"3643:12:34"},"nodeType":"YulExpressionStatement","src":"3643:12:34"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3615:7:34"},{"name":"headStart","nodeType":"YulIdentifier","src":"3624:9:34"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3611:3:34"},"nodeType":"YulFunctionCall","src":"3611:23:34"},{"kind":"number","nodeType":"YulLiteral","src":"3636:3:34","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3607:3:34"},"nodeType":"YulFunctionCall","src":"3607:33:34"},"nodeType":"YulIf","src":"3604:53:34"},{"nodeType":"YulAssignment","src":"3666:39:34","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3695:9:34"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"3676:18:34"},"nodeType":"YulFunctionCall","src":"3676:29:34"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3666:6:34"}]},{"nodeType":"YulAssignment","src":"3714:48:34","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3747:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"3758:2:34","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3743:3:34"},"nodeType":"YulFunctionCall","src":"3743:18:34"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"3724:18:34"},"nodeType":"YulFunctionCall","src":"3724:38:34"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3714:6:34"}]},{"nodeType":"YulVariableDeclaration","src":"3771:46:34","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3802:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"3813:2:34","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3798:3:34"},"nodeType":"YulFunctionCall","src":"3798:18:34"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3785:12:34"},"nodeType":"YulFunctionCall","src":"3785:32:34"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3775:6:34","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3826:28:34","value":{"kind":"number","nodeType":"YulLiteral","src":"3836:18:34","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"3830:2:34","type":""}]},{"body":{"nodeType":"YulBlock","src":"3881:16:34","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3890:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3893:1:34","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3883:6:34"},"nodeType":"YulFunctionCall","src":"3883:12:34"},"nodeType":"YulExpressionStatement","src":"3883:12:34"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3869:6:34"},{"name":"_1","nodeType":"YulIdentifier","src":"3877:2:34"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3866:2:34"},"nodeType":"YulFunctionCall","src":"3866:14:34"},"nodeType":"YulIf","src":"3863:34:34"},{"nodeType":"YulVariableDeclaration","src":"3906:96:34","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3974:9:34"},{"name":"offset","nodeType":"YulIdentifier","src":"3985:6:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3970:3:34"},"nodeType":"YulFunctionCall","src":"3970:22:34"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3994:7:34"}],"functionName":{"name":"abi_decode_array_uint256_dyn_calldata","nodeType":"YulIdentifier","src":"3932:37:34"},"nodeType":"YulFunctionCall","src":"3932:70:34"},"variables":[{"name":"value2_1","nodeType":"YulTypedName","src":"3910:8:34","type":""},{"name":"value3_1","nodeType":"YulTypedName","src":"3920:8:34","type":""}]},{"nodeType":"YulAssignment","src":"4011:18:34","value":{"name":"value2_1","nodeType":"YulIdentifier","src":"4021:8:34"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"4011:6:34"}]},{"nodeType":"YulAssignment","src":"4038:18:34","value":{"name":"value3_1","nodeType":"YulIdentifier","src":"4048:8:34"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"4038:6:34"}]},{"nodeType":"YulVariableDeclaration","src":"4065:48:34","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4098:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"4109:2:34","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4094:3:34"},"nodeType":"YulFunctionCall","src":"4094:18:34"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4081:12:34"},"nodeType":"YulFunctionCall","src":"4081:32:34"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"4069:8:34","type":""}]},{"body":{"nodeType":"YulBlock","src":"4142:16:34","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4151:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4154:1:34","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4144:6:34"},"nodeType":"YulFunctionCall","src":"4144:12:34"},"nodeType":"YulExpressionStatement","src":"4144:12:34"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"4128:8:34"},{"name":"_1","nodeType":"YulIdentifier","src":"4138:2:34"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4125:2:34"},"nodeType":"YulFunctionCall","src":"4125:16:34"},"nodeType":"YulIf","src":"4122:36:34"},{"nodeType":"YulVariableDeclaration","src":"4167:98:34","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4235:9:34"},{"name":"offset_1","nodeType":"YulIdentifier","src":"4246:8:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4231:3:34"},"nodeType":"YulFunctionCall","src":"4231:24:34"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4257:7:34"}],"functionName":{"name":"abi_decode_array_uint256_dyn_calldata","nodeType":"YulIdentifier","src":"4193:37:34"},"nodeType":"YulFunctionCall","src":"4193:72:34"},"variables":[{"name":"value4_1","nodeType":"YulTypedName","src":"4171:8:34","type":""},{"name":"value5_1","nodeType":"YulTypedName","src":"4181:8:34","type":""}]},{"nodeType":"YulAssignment","src":"4274:18:34","value":{"name":"value4_1","nodeType":"YulIdentifier","src":"4284:8:34"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"4274:6:34"}]},{"nodeType":"YulAssignment","src":"4301:18:34","value":{"name":"value5_1","nodeType":"YulIdentifier","src":"4311:8:34"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"4301:6:34"}]},{"nodeType":"YulVariableDeclaration","src":"4328:49:34","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4361:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"4372:3:34","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4357:3:34"},"nodeType":"YulFunctionCall","src":"4357:19:34"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4344:12:34"},"nodeType":"YulFunctionCall","src":"4344:33:34"},"variables":[{"name":"offset_2","nodeType":"YulTypedName","src":"4332:8:34","type":""}]},{"body":{"nodeType":"YulBlock","src":"4406:16:34","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4415:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4418:1:34","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4408:6:34"},"nodeType":"YulFunctionCall","src":"4408:12:34"},"nodeType":"YulExpressionStatement","src":"4408:12:34"}]},"condition":{"arguments":[{"name":"offset_2","nodeType":"YulIdentifier","src":"4392:8:34"},{"name":"_1","nodeType":"YulIdentifier","src":"4402:2:34"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4389:2:34"},"nodeType":"YulFunctionCall","src":"4389:16:34"},"nodeType":"YulIf","src":"4386:36:34"},{"nodeType":"YulVariableDeclaration","src":"4431:86:34","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4487:9:34"},{"name":"offset_2","nodeType":"YulIdentifier","src":"4498:8:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4483:3:34"},"nodeType":"YulFunctionCall","src":"4483:24:34"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4509:7:34"}],"functionName":{"name":"abi_decode_bytes_calldata","nodeType":"YulIdentifier","src":"4457:25:34"},"nodeType":"YulFunctionCall","src":"4457:60:34"},"variables":[{"name":"value6_1","nodeType":"YulTypedName","src":"4435:8:34","type":""},{"name":"value7_1","nodeType":"YulTypedName","src":"4445:8:34","type":""}]},{"nodeType":"YulAssignment","src":"4526:18:34","value":{"name":"value6_1","nodeType":"YulIdentifier","src":"4536:8:34"},"variableNames":[{"name":"value6","nodeType":"YulIdentifier","src":"4526:6:34"}]},{"nodeType":"YulAssignment","src":"4553:18:34","value":{"name":"value7_1","nodeType":"YulIdentifier","src":"4563:8:34"},"variableNames":[{"name":"value7","nodeType":"YulIdentifier","src":"4553:6:34"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptrt_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3504:9:34","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3515:7:34","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3527:6:34","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3535:6:34","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3543:6:34","type":""},{"name":"value3","nodeType":"YulTypedName","src":"3551:6:34","type":""},{"name":"value4","nodeType":"YulTypedName","src":"3559:6:34","type":""},{"name":"value5","nodeType":"YulTypedName","src":"3567:6:34","type":""},{"name":"value6","nodeType":"YulTypedName","src":"3575:6:34","type":""},{"name":"value7","nodeType":"YulTypedName","src":"3583:6:34","type":""}],"src":"3367:1210:34"},{"body":{"nodeType":"YulBlock","src":"4739:538:34","statements":[{"body":{"nodeType":"YulBlock","src":"4786:16:34","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4795:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4798:1:34","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4788:6:34"},"nodeType":"YulFunctionCall","src":"4788:12:34"},"nodeType":"YulExpressionStatement","src":"4788:12:34"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4760:7:34"},{"name":"headStart","nodeType":"YulIdentifier","src":"4769:9:34"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4756:3:34"},"nodeType":"YulFunctionCall","src":"4756:23:34"},{"kind":"number","nodeType":"YulLiteral","src":"4781:3:34","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4752:3:34"},"nodeType":"YulFunctionCall","src":"4752:33:34"},"nodeType":"YulIf","src":"4749:53:34"},{"nodeType":"YulAssignment","src":"4811:39:34","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4840:9:34"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"4821:18:34"},"nodeType":"YulFunctionCall","src":"4821:29:34"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4811:6:34"}]},{"nodeType":"YulAssignment","src":"4859:48:34","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4892:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"4903:2:34","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4888:3:34"},"nodeType":"YulFunctionCall","src":"4888:18:34"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"4869:18:34"},"nodeType":"YulFunctionCall","src":"4869:38:34"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4859:6:34"}]},{"nodeType":"YulAssignment","src":"4916:42:34","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4943:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"4954:2:34","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4939:3:34"},"nodeType":"YulFunctionCall","src":"4939:18:34"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4926:12:34"},"nodeType":"YulFunctionCall","src":"4926:32:34"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"4916:6:34"}]},{"nodeType":"YulAssignment","src":"4967:42:34","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4994:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"5005:2:34","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4990:3:34"},"nodeType":"YulFunctionCall","src":"4990:18:34"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4977:12:34"},"nodeType":"YulFunctionCall","src":"4977:32:34"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"4967:6:34"}]},{"nodeType":"YulVariableDeclaration","src":"5018:47:34","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5049:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"5060:3:34","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5045:3:34"},"nodeType":"YulFunctionCall","src":"5045:19:34"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5032:12:34"},"nodeType":"YulFunctionCall","src":"5032:33:34"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5022:6:34","type":""}]},{"body":{"nodeType":"YulBlock","src":"5108:16:34","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5117:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5120:1:34","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5110:6:34"},"nodeType":"YulFunctionCall","src":"5110:12:34"},"nodeType":"YulExpressionStatement","src":"5110:12:34"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5080:6:34"},{"kind":"number","nodeType":"YulLiteral","src":"5088:18:34","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5077:2:34"},"nodeType":"YulFunctionCall","src":"5077:30:34"},"nodeType":"YulIf","src":"5074:50:34"},{"nodeType":"YulVariableDeclaration","src":"5133:84:34","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5189:9:34"},{"name":"offset","nodeType":"YulIdentifier","src":"5200:6:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5185:3:34"},"nodeType":"YulFunctionCall","src":"5185:22:34"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5209:7:34"}],"functionName":{"name":"abi_decode_bytes_calldata","nodeType":"YulIdentifier","src":"5159:25:34"},"nodeType":"YulFunctionCall","src":"5159:58:34"},"variables":[{"name":"value4_1","nodeType":"YulTypedName","src":"5137:8:34","type":""},{"name":"value5_1","nodeType":"YulTypedName","src":"5147:8:34","type":""}]},{"nodeType":"YulAssignment","src":"5226:18:34","value":{"name":"value4_1","nodeType":"YulIdentifier","src":"5236:8:34"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"5226:6:34"}]},{"nodeType":"YulAssignment","src":"5253:18:34","value":{"name":"value5_1","nodeType":"YulIdentifier","src":"5263:8:34"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"5253:6:34"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4665:9:34","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4676:7:34","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4688:6:34","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4696:6:34","type":""},{"name":"value2","nodeType":"YulTypedName","src":"4704:6:34","type":""},{"name":"value3","nodeType":"YulTypedName","src":"4712:6:34","type":""},{"name":"value4","nodeType":"YulTypedName","src":"4720:6:34","type":""},{"name":"value5","nodeType":"YulTypedName","src":"4728:6:34","type":""}],"src":"4582:695:34"}]},"contents":"{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_bytes_calldata(offset, end) -> arrayPos, length\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        arrayPos := add(offset, 0x20)\n        if gt(add(add(offset, length), 0x20), end) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_addresst_uint256t_bytes_calldata_ptrt_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6, value7\n    {\n        if slt(sub(dataEnd, headStart), 192) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := abi_decode_address(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        let offset := calldataload(add(headStart, 128))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let value4_1, value5_1 := abi_decode_bytes_calldata(add(headStart, offset), dataEnd)\n        value4 := value4_1\n        value5 := value5_1\n        let offset_1 := calldataload(add(headStart, 160))\n        if gt(offset_1, _1) { revert(0, 0) }\n        let value6_1, value7_1 := abi_decode_bytes_calldata(add(headStart, offset_1), dataEnd)\n        value6 := value6_1\n        value7 := value7_1\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let value3_1, value4_1 := abi_decode_bytes_calldata(add(headStart, offset), dataEnd)\n        value3 := value3_1\n        value4 := value4_1\n    }\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffff00000000000000000000000000000000000000000000000000000000))\n    }\n    function abi_decode_array_uint256_dyn_calldata(offset, end) -> arrayPos, length\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        arrayPos := add(offset, 0x20)\n        if gt(add(add(offset, shl(5, length)), 0x20), end) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptrt_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6, value7\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let offset := calldataload(add(headStart, 64))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let value2_1, value3_1 := abi_decode_array_uint256_dyn_calldata(add(headStart, offset), dataEnd)\n        value2 := value2_1\n        value3 := value3_1\n        let offset_1 := calldataload(add(headStart, 96))\n        if gt(offset_1, _1) { revert(0, 0) }\n        let value4_1, value5_1 := abi_decode_array_uint256_dyn_calldata(add(headStart, offset_1), dataEnd)\n        value4 := value4_1\n        value5 := value5_1\n        let offset_2 := calldataload(add(headStart, 128))\n        if gt(offset_2, _1) { revert(0, 0) }\n        let value6_1, value7_1 := abi_decode_bytes_calldata(add(headStart, offset_2), dataEnd)\n        value6 := value6_1\n        value7 := value7_1\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        let offset := calldataload(add(headStart, 128))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let value4_1, value5_1 := abi_decode_bytes_calldata(add(headStart, offset), dataEnd)\n        value4 := value4_1\n        value5 := value5_1\n    }\n}","id":34,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100665760003560e01c8063150b7a0211610050578063150b7a02146100ad578063bc197c8114610116578063f23a6e611461015157600080fd5b806223de291461006b57806301ffc9a714610085575b600080fd5b6100836100793660046102e1565b5050505050505050565b005b61009861009336600461038c565b61018a565b60405190151581526020015b60405180910390f35b6100e56100bb3660046103d5565b7f150b7a020000000000000000000000000000000000000000000000000000000095945050505050565b6040517fffffffff0000000000000000000000000000000000000000000000000000000090911681526020016100a4565b6100e5610124366004610489565b7fbc197c810000000000000000000000000000000000000000000000000000000098975050505050505050565b6100e561015f366004610523565b7ff23a6e61000000000000000000000000000000000000000000000000000000009695505050505050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f150b7a0200000000000000000000000000000000000000000000000000000000148061021d57507fffffffff0000000000000000000000000000000000000000000000000000000082167f4e2312e000000000000000000000000000000000000000000000000000000000145b8061026957507fffffffff0000000000000000000000000000000000000000000000000000000082167f01ffc9a700000000000000000000000000000000000000000000000000000000145b92915050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461029357600080fd5b919050565b60008083601f8401126102aa57600080fd5b50813567ffffffffffffffff8111156102c257600080fd5b6020830191508360208285010111156102da57600080fd5b9250929050565b60008060008060008060008060c0898b0312156102fd57600080fd5b6103068961026f565b975061031460208a0161026f565b965061032260408a0161026f565b955060608901359450608089013567ffffffffffffffff8082111561034657600080fd5b6103528c838d01610298565b909650945060a08b013591508082111561036b57600080fd5b506103788b828c01610298565b999c989b5096995094979396929594505050565b60006020828403121561039e57600080fd5b81357fffffffff00000000000000000000000000000000000000000000000000000000811681146103ce57600080fd5b9392505050565b6000806000806000608086880312156103ed57600080fd5b6103f68661026f565b94506104046020870161026f565b935060408601359250606086013567ffffffffffffffff81111561042757600080fd5b61043388828901610298565b969995985093965092949392505050565b60008083601f84011261045657600080fd5b50813567ffffffffffffffff81111561046e57600080fd5b6020830191508360208260051b85010111156102da57600080fd5b60008060008060008060008060a0898b0312156104a557600080fd5b6104ae8961026f565b97506104bc60208a0161026f565b9650604089013567ffffffffffffffff808211156104d957600080fd5b6104e58c838d01610444565b909850965060608b01359150808211156104fe57600080fd5b61050a8c838d01610444565b909650945060808b013591508082111561036b57600080fd5b60008060008060008060a0878903121561053c57600080fd5b6105458761026f565b95506105536020880161026f565b94506040870135935060608701359250608087013567ffffffffffffffff81111561057d57600080fd5b61058989828a01610298565b979a969950949750929593949250505056fea2646970667358221220f542c3da772eb1c4ae60e4314c5503acfcc0ad8973d3f81d523071da1bc41be364736f6c63430008120033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x66 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x150B7A02 GT PUSH2 0x50 JUMPI DUP1 PUSH4 0x150B7A02 EQ PUSH2 0xAD JUMPI DUP1 PUSH4 0xBC197C81 EQ PUSH2 0x116 JUMPI DUP1 PUSH4 0xF23A6E61 EQ PUSH2 0x151 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0x23DE29 EQ PUSH2 0x6B JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x85 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x83 PUSH2 0x79 CALLDATASIZE PUSH1 0x4 PUSH2 0x2E1 JUMP JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST STOP JUMPDEST PUSH2 0x98 PUSH2 0x93 CALLDATASIZE PUSH1 0x4 PUSH2 0x38C JUMP JUMPDEST PUSH2 0x18A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE5 PUSH2 0xBB CALLDATASIZE PUSH1 0x4 PUSH2 0x3D5 JUMP JUMPDEST PUSH32 0x150B7A0200000000000000000000000000000000000000000000000000000000 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xA4 JUMP JUMPDEST PUSH2 0xE5 PUSH2 0x124 CALLDATASIZE PUSH1 0x4 PUSH2 0x489 JUMP JUMPDEST PUSH32 0xBC197C8100000000000000000000000000000000000000000000000000000000 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xE5 PUSH2 0x15F CALLDATASIZE PUSH1 0x4 PUSH2 0x523 JUMP JUMPDEST PUSH32 0xF23A6E6100000000000000000000000000000000000000000000000000000000 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH32 0x150B7A0200000000000000000000000000000000000000000000000000000000 EQ DUP1 PUSH2 0x21D JUMPI POP PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH32 0x4E2312E000000000000000000000000000000000000000000000000000000000 EQ JUMPDEST DUP1 PUSH2 0x269 JUMPI POP PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x293 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x2AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x2DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP10 DUP12 SUB SLT ISZERO PUSH2 0x2FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x306 DUP10 PUSH2 0x26F JUMP JUMPDEST SWAP8 POP PUSH2 0x314 PUSH1 0x20 DUP11 ADD PUSH2 0x26F JUMP JUMPDEST SWAP7 POP PUSH2 0x322 PUSH1 0x40 DUP11 ADD PUSH2 0x26F JUMP JUMPDEST SWAP6 POP PUSH1 0x60 DUP10 ADD CALLDATALOAD SWAP5 POP PUSH1 0x80 DUP10 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x346 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x352 DUP13 DUP4 DUP14 ADD PUSH2 0x298 JUMP JUMPDEST SWAP1 SWAP7 POP SWAP5 POP PUSH1 0xA0 DUP12 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x36B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x378 DUP12 DUP3 DUP13 ADD PUSH2 0x298 JUMP JUMPDEST SWAP10 SWAP13 SWAP9 SWAP12 POP SWAP7 SWAP10 POP SWAP5 SWAP8 SWAP4 SWAP7 SWAP3 SWAP6 SWAP5 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x39E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND DUP2 EQ PUSH2 0x3CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x3ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3F6 DUP7 PUSH2 0x26F JUMP JUMPDEST SWAP5 POP PUSH2 0x404 PUSH1 0x20 DUP8 ADD PUSH2 0x26F JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x427 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x433 DUP9 DUP3 DUP10 ADD PUSH2 0x298 JUMP JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 POP SWAP3 SWAP5 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x456 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x46E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x2DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xA0 DUP10 DUP12 SUB SLT ISZERO PUSH2 0x4A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4AE DUP10 PUSH2 0x26F JUMP JUMPDEST SWAP8 POP PUSH2 0x4BC PUSH1 0x20 DUP11 ADD PUSH2 0x26F JUMP JUMPDEST SWAP7 POP PUSH1 0x40 DUP10 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x4D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E5 DUP13 DUP4 DUP14 ADD PUSH2 0x444 JUMP JUMPDEST SWAP1 SWAP9 POP SWAP7 POP PUSH1 0x60 DUP12 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x4FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x50A DUP13 DUP4 DUP14 ADD PUSH2 0x444 JUMP JUMPDEST SWAP1 SWAP7 POP SWAP5 POP PUSH1 0x80 DUP12 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x36B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xA0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x53C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x545 DUP8 PUSH2 0x26F JUMP JUMPDEST SWAP6 POP PUSH2 0x553 PUSH1 0x20 DUP9 ADD PUSH2 0x26F JUMP JUMPDEST SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD SWAP3 POP PUSH1 0x80 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x57D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x589 DUP10 DUP3 DUP11 ADD PUSH2 0x298 JUMP JUMPDEST SWAP8 SWAP11 SWAP7 SWAP10 POP SWAP5 SWAP8 POP SWAP3 SWAP6 SWAP4 SWAP5 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE2 TIMESTAMP 0xC3 0xDA PUSH24 0x2EB1C4AE60E4314C5503ACFCC0AD8973D3F81D523071DA1B 0xC4 SHL 0xE3 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ","sourceMap":"486:1299:32:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;577:176;;;;;;:::i;:::-;;;;;;;;;;;;1485:298;;;;;;:::i;:::-;;:::i;:::-;;;2084:14:34;;2077:22;2059:41;;2047:2;2032:18;1485:298:32;;;;;;;;759:212;;;;;;:::i;:::-;923:41;759:212;;;;;;;;;;;2916:66:34;2904:79;;;2886:98;;2874:2;2859:18;759:212:32;2742:248:34;1215:264:32;;;;;;:::i;:::-;1424:48;1215:264;;;;;;;;;;;977:232;;;;;;:::i;:::-;1159:43;977:232;;;;;;;;;1485:298;1572:4;1607:48;;;1622:33;1607:48;;:113;;-1:-1:-1;1671:49:32;;;1686:34;1671:49;1607:113;:169;;;-1:-1:-1;1736:40:32;;;1751:25;1736:40;1607:169;1588:188;1485:298;-1:-1:-1;;1485:298:32:o;14:196:34:-;82:20;;142:42;131:54;;121:65;;111:93;;200:1;197;190:12;111:93;14:196;;;:::o;215:347::-;266:8;276:6;330:3;323:4;315:6;311:17;307:27;297:55;;348:1;345;338:12;297:55;-1:-1:-1;371:20:34;;414:18;403:30;;400:50;;;446:1;443;436:12;400:50;483:4;475:6;471:17;459:29;;535:3;528:4;519:6;511;507:19;503:30;500:39;497:59;;;552:1;549;542:12;497:59;215:347;;;;;:::o;567:1010::-;693:6;701;709;717;725;733;741;749;802:3;790:9;781:7;777:23;773:33;770:53;;;819:1;816;809:12;770:53;842:29;861:9;842:29;:::i;:::-;832:39;;890:38;924:2;913:9;909:18;890:38;:::i;:::-;880:48;;947:38;981:2;970:9;966:18;947:38;:::i;:::-;937:48;;1032:2;1021:9;1017:18;1004:32;994:42;;1087:3;1076:9;1072:19;1059:33;1111:18;1152:2;1144:6;1141:14;1138:34;;;1168:1;1165;1158:12;1138:34;1207:58;1257:7;1248:6;1237:9;1233:22;1207:58;:::i;:::-;1284:8;;-1:-1:-1;1181:84:34;-1:-1:-1;1372:3:34;1357:19;;1344:33;;-1:-1:-1;1389:16:34;;;1386:36;;;1418:1;1415;1408:12;1386:36;;1457:60;1509:7;1498:8;1487:9;1483:24;1457:60;:::i;:::-;567:1010;;;;-1:-1:-1;567:1010:34;;-1:-1:-1;567:1010:34;;;;;;1536:8;-1:-1:-1;;;567:1010:34:o;1582:332::-;1640:6;1693:2;1681:9;1672:7;1668:23;1664:32;1661:52;;;1709:1;1706;1699:12;1661:52;1748:9;1735:23;1798:66;1791:5;1787:78;1780:5;1777:89;1767:117;;1880:1;1877;1870:12;1767:117;1903:5;1582:332;-1:-1:-1;;;1582:332:34:o;2111:626::-;2208:6;2216;2224;2232;2240;2293:3;2281:9;2272:7;2268:23;2264:33;2261:53;;;2310:1;2307;2300:12;2261:53;2333:29;2352:9;2333:29;:::i;:::-;2323:39;;2381:38;2415:2;2404:9;2400:18;2381:38;:::i;:::-;2371:48;;2466:2;2455:9;2451:18;2438:32;2428:42;;2521:2;2510:9;2506:18;2493:32;2548:18;2540:6;2537:30;2534:50;;;2580:1;2577;2570:12;2534:50;2619:58;2669:7;2660:6;2649:9;2645:22;2619:58;:::i;:::-;2111:626;;;;-1:-1:-1;2111:626:34;;-1:-1:-1;2696:8:34;;2593:84;2111:626;-1:-1:-1;;;2111:626:34:o;2995:367::-;3058:8;3068:6;3122:3;3115:4;3107:6;3103:17;3099:27;3089:55;;3140:1;3137;3130:12;3089:55;-1:-1:-1;3163:20:34;;3206:18;3195:30;;3192:50;;;3238:1;3235;3228:12;3192:50;3275:4;3267:6;3263:17;3251:29;;3335:3;3328:4;3318:6;3315:1;3311:14;3303:6;3299:27;3295:38;3292:47;3289:67;;;3352:1;3349;3342:12;3367:1210;3527:6;3535;3543;3551;3559;3567;3575;3583;3636:3;3624:9;3615:7;3611:23;3607:33;3604:53;;;3653:1;3650;3643:12;3604:53;3676:29;3695:9;3676:29;:::i;:::-;3666:39;;3724:38;3758:2;3747:9;3743:18;3724:38;:::i;:::-;3714:48;;3813:2;3802:9;3798:18;3785:32;3836:18;3877:2;3869:6;3866:14;3863:34;;;3893:1;3890;3883:12;3863:34;3932:70;3994:7;3985:6;3974:9;3970:22;3932:70;:::i;:::-;4021:8;;-1:-1:-1;3906:96:34;-1:-1:-1;4109:2:34;4094:18;;4081:32;;-1:-1:-1;4125:16:34;;;4122:36;;;4154:1;4151;4144:12;4122:36;4193:72;4257:7;4246:8;4235:9;4231:24;4193:72;:::i;:::-;4284:8;;-1:-1:-1;4167:98:34;-1:-1:-1;4372:3:34;4357:19;;4344:33;;-1:-1:-1;4389:16:34;;;4386:36;;;4418:1;4415;4408:12;4582:695;4688:6;4696;4704;4712;4720;4728;4781:3;4769:9;4760:7;4756:23;4752:33;4749:53;;;4798:1;4795;4788:12;4749:53;4821:29;4840:9;4821:29;:::i;:::-;4811:39;;4869:38;4903:2;4892:9;4888:18;4869:38;:::i;:::-;4859:48;;4954:2;4943:9;4939:18;4926:32;4916:42;;5005:2;4994:9;4990:18;4977:32;4967:42;;5060:3;5049:9;5045:19;5032:33;5088:18;5080:6;5077:30;5074:50;;;5120:1;5117;5110:12;5074:50;5159:58;5209:7;5200:6;5189:9;5185:22;5159:58;:::i;:::-;4582:695;;;;-1:-1:-1;4582:695:34;;-1:-1:-1;4582:695:34;;5236:8;;4582:695;-1:-1:-1;;;4582:695:34:o"},"methodIdentifiers":{"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)":"bc197c81","onERC1155Received(address,address,uint256,uint256,bytes)":"f23a6e61","onERC721Received(address,address,uint256,bytes)":"150b7a02","supportsInterface(bytes4)":"01ffc9a7","tokensReceived(address,address,address,uint256,bytes,bytes)":"0023de29"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"tokensReceived\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Token callback handler.   Handles supported tokens' callbacks, allowing account receiving these tokens.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/samples/callback/TokenCallbackHandler.sol\":\"TokenCallbackHandler\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts/token/ERC777/IERC777Recipient.sol\":{\"keccak256\":\"0x1a5d61db2733202ba361e6d6741cd2e662380e22b80e987eacfc91973f2267dc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04c0cd697050a6516b7779aa2343ad2d0e5217d8915ac2382681dfdf4e445be3\",\"dweb:/ipfs/QmPCBCZgm7pHBwwogE2F9NCN3UfTdLNhqc8UDEvw8kDzyA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"contracts/samples/callback/TokenCallbackHandler.sol\":{\"keccak256\":\"0xe36d84f455b497f6eb7f7058a319c5a679900f499c4f5e1d048f3d762a7da5a6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d9232444f7b34f7a42f8acffd375042c00f75439c37099fe0e609ab17462ace1\",\"dweb:/ipfs/QmPcQAaTy6tiHKyTwMcWPuAM4ypVqpZiijir8h1is1ycuQ\"]}},\"version\":1}"}},"contracts/utils/Exec.sol":{"Exec":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b2f9792c209e38aa35189ab563bdc3ee8d1143d9e4fcc8413c48457d340a0a2b64736f6c63430008120033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB2 0xF9 PUSH26 0x2C209E38AA35189AB563BDC3EE8D1143D9E4FCC8413C48457D34 EXP EXP 0x2B PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ","sourceMap":"200:1759:33:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;200:1759:33;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b2f9792c209e38aa35189ab563bdc3ee8d1143d9e4fcc8413c48457d340a0a2b64736f6c63430008120033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB2 0xF9 PUSH26 0x2C209E38AA35189AB563BDC3EE8D1143D9E4FCC8413C48457D34 EXP EXP 0x2B PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ","sourceMap":"200:1759:33:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Utility functions helpful when making different kinds of contract calls in Solidity.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/utils/Exec.sol\":\"Exec\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"contracts/utils/Exec.sol\":{\"keccak256\":\"0x681c936b703bb2429f1b1deaf477efb60c13e69c74d80e653d583d61e4333f64\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://10585d84d37d03baeb7bc2809f38fec7ee1882421a1b973fcb08218cf81e37c3\",\"dweb:/ipfs/QmXFJUFjPK1wHp7ArTrM4Lm4Fn4PkXdt5geumSx1AXPoAk\"]}},\"version\":1}"}}}}}